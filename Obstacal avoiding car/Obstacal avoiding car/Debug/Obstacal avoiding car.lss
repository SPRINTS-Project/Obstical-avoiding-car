
Obstacal avoiding car.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001930  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000006a  00800060  00001930  000019c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000028  008000ca  008000ca  00001a2e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001a2e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001a60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000368  00000000  00000000  00001a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000381a  00000000  00000000  00001e04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001387  00000000  00000000  0000561e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002407  00000000  00000000  000069a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000082c  00000000  00000000  00008dac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001259  00000000  00000000  000095d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000023d1  00000000  00000000  0000a831  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002b8  00000000  00000000  0000cc02  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 06 07 	jmp	0xe0c	; 0xe0c <__vector_1>
       8:	0c 94 2d 07 	jmp	0xe5a	; 0xe5a <__vector_2>
       c:	0c 94 54 07 	jmp	0xea8	; 0xea8 <__vector_3>
      10:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      14:	0c 94 92 0a 	jmp	0x1524	; 0x1524 <__vector_5>
      18:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      1c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      20:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      24:	0c 94 ab 07 	jmp	0xf56	; 0xf56 <__vector_9>
      28:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      2c:	0c 94 7b 07 	jmp	0xef6	; 0xef6 <__vector_11>
      30:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      34:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      38:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      3c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      40:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      44:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      48:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      4c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      50:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      54:	84 08       	sbc	r8, r4
      56:	8f 08       	sbc	r8, r15
      58:	9a 08       	sbc	r9, r10
      5a:	aa 09       	sbc	r26, r10
      5c:	a5 08       	sbc	r10, r5
      5e:	aa 09       	sbc	r26, r10
      60:	b0 08       	sbc	r11, r0
      62:	bb 08       	sbc	r11, r11
      64:	c6 08       	sbc	r12, r6
      66:	d1 08       	sbc	r13, r1
      68:	e7 08       	sbc	r14, r7
      6a:	f2 08       	sbc	r15, r2
      6c:	fd 08       	sbc	r15, r13
      6e:	ac 09       	sbc	r26, r12
      70:	08 09       	sbc	r16, r8
      72:	ac 09       	sbc	r26, r12
      74:	13 09       	sbc	r17, r3
      76:	1e 09       	sbc	r17, r14
      78:	29 09       	sbc	r18, r9
      7a:	34 09       	sbc	r19, r4
      7c:	4a 09       	sbc	r20, r10
      7e:	55 09       	sbc	r21, r5
      80:	60 09       	sbc	r22, r0
      82:	6b 09       	sbc	r22, r11
      84:	76 09       	sbc	r23, r6
      86:	81 09       	sbc	r24, r1
      88:	8c 09       	sbc	r24, r12
      8a:	97 09       	sbc	r25, r7

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf e5       	ldi	r28, 0x5F	; 95
      92:	d8 e0       	ldi	r29, 0x08	; 8
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	10 e0       	ldi	r17, 0x00	; 0
      9a:	a0 e6       	ldi	r26, 0x60	; 96
      9c:	b0 e0       	ldi	r27, 0x00	; 0
      9e:	e0 e3       	ldi	r30, 0x30	; 48
      a0:	f9 e1       	ldi	r31, 0x19	; 25
      a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
      a4:	05 90       	lpm	r0, Z+
      a6:	0d 92       	st	X+, r0
      a8:	aa 3c       	cpi	r26, 0xCA	; 202
      aa:	b1 07       	cpc	r27, r17
      ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>

000000ae <__do_clear_bss>:
      ae:	20 e0       	ldi	r18, 0x00	; 0
      b0:	aa ec       	ldi	r26, 0xCA	; 202
      b2:	b0 e0       	ldi	r27, 0x00	; 0
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <.do_clear_bss_start>

000000b6 <.do_clear_bss_loop>:
      b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
      b8:	a2 3f       	cpi	r26, 0xF2	; 242
      ba:	b2 07       	cpc	r27, r18
      bc:	e1 f7       	brne	.-8      	; 0xb6 <.do_clear_bss_loop>
      be:	0e 94 44 05 	call	0xa88	; 0xa88 <main>
      c2:	0c 94 96 0c 	jmp	0x192c	; 0x192c <_exit>

000000c6 <__bad_interrupt>:
      c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ca <BUTTON_vidChangeDir>:
/*									Static Function Implementation                										*/
/************************************************************************************************/

void BUTTON_vidChangeDir(void)
{
	u8_g_dirStateCounter ^= 1 ;
      ca:	90 91 cb 00 	lds	r25, 0x00CB	; 0x8000cb <u8_g_dirStateCounter>
      ce:	81 e0       	ldi	r24, 0x01	; 1
      d0:	89 27       	eor	r24, r25
      d2:	80 93 cb 00 	sts	0x00CB, r24	; 0x8000cb <u8_g_dirStateCounter>
      d6:	08 95       	ret

000000d8 <TIMER1_callBackFunc>:
}


void TIMER1_callBackFunc(void)
{
	u8_g_OneSecTicks++;
      d8:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <u8_g_OneSecTicks>
      dc:	8f 5f       	subi	r24, 0xFF	; 255
      de:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <u8_g_OneSecTicks>
	TIMER_Manager_reset(&st_timer1Config);
      e2:	80 e6       	ldi	r24, 0x60	; 96
      e4:	90 e0       	ldi	r25, 0x00	; 0
      e6:	0e 94 64 04 	call	0x8c8	; 0x8c8 <TIMER_Manager_reset>
      ea:	08 95       	ret

000000ec <APP_vidInit>:
/************************************************************************************************/
/*									Function Implementation										*/
/************************************************************************************************/
void APP_vidInit(void)
{
    HULTRASONIC_vidInit();
      ec:	0e 94 0d 05 	call	0xa1a	; 0xa1a <HULTRASONIC_vidInit>
	HULTRASONIC_vidInterruptEnable();
      f0:	0e 94 27 05 	call	0xa4e	; 0xa4e <HULTRASONIC_vidInterruptEnable>
	(void) HLCD_vidInit();
      f4:	0e 94 49 02 	call	0x492	; 0x492 <HLCD_vidInit>
	(void) KEYPAD_init(&st_gs_keypadConfig);
      f8:	87 e6       	ldi	r24, 0x67	; 103
      fa:	90 e0       	ldi	r25, 0x00	; 0
      fc:	0e 94 70 03 	call	0x6e0	; 0x6e0 <KEYPAD_init>
	(void) HExtInt_enInit(INT_0, RISE_EDGE);
     100:	63 e0       	ldi	r22, 0x03	; 3
     102:	80 e0       	ldi	r24, 0x00	; 0
     104:	0e 94 ab 01 	call	0x356	; 0x356 <HExtInt_enInit>
	(void) TIMER_Manager_init (&st_timer1Config);
     108:	80 e6       	ldi	r24, 0x60	; 96
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	0e 94 2b 04 	call	0x856	; 0x856 <TIMER_Manager_init>
	(void) PWM_init();
     110:	0e 94 2a 04 	call	0x854	; 0x854 <PWM_init>
	
	HULTRASONIC_vidCBF_TIM(HULTRASONIC_vidTimerCBF);
     114:	85 e8       	ldi	r24, 0x85	; 133
     116:	94 e0       	ldi	r25, 0x04	; 4
     118:	0e 94 3e 05 	call	0xa7c	; 0xa7c <HULTRASONIC_vidCBF_TIM>
	HULTRASONIC_vidCBF_INT(HULTRASONIC_vidSigCalc);
     11c:	89 e9       	ldi	r24, 0x99	; 153
     11e:	94 e0       	ldi	r25, 0x04	; 4
     120:	0e 94 41 05 	call	0xa82	; 0xa82 <HULTRASONIC_vidCBF_INT>
	(void) HExtInt_enCBFInt0(BUTTON_vidChangeDir);
     124:	85 e6       	ldi	r24, 0x65	; 101
     126:	90 e0       	ldi	r25, 0x00	; 0
     128:	0e 94 c1 01 	call	0x382	; 0x382 <HExtInt_enCBFInt0>
	
	HExtInt0_enIntEnable();
     12c:	0e 94 cc 01 	call	0x398	; 0x398 <HExtInt0_enIntEnable>
/*	sei();*/
	DDRA = 0xFF;
     130:	8f ef       	ldi	r24, 0xFF	; 255
     132:	8a bb       	out	0x1a, r24	; 26
     134:	08 95       	ret

00000136 <APP_updateDirection>:
}

void APP_updateDirection(void)
{
	
	HULTRASONIC_vidInterruptDisable();
     136:	0e 94 2e 05 	call	0xa5c	; 0xa5c <HULTRASONIC_vidInterruptDisable>
	u8_g_OneSecTicks = 0;
     13a:	10 92 cc 00 	sts	0x00CC, r1	; 0x8000cc <u8_g_OneSecTicks>
	TIMER_Manager_start (&st_timer1Config);
     13e:	80 e6       	ldi	r24, 0x60	; 96
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	0e 94 4b 04 	call	0x896	; 0x896 <TIMER_Manager_start>
	HExtInt0_enIntEnable();
     146:	0e 94 cc 01 	call	0x398	; 0x398 <HExtInt0_enIntEnable>
	while(u8_g_OneSecTicks <= 5)
     14a:	1b c0       	rjmp	.+54     	; 0x182 <APP_updateDirection+0x4c>
	{
		if (u8_g_dirStateCounter == 1)
     14c:	80 91 cb 00 	lds	r24, 0x00CB	; 0x8000cb <u8_g_dirStateCounter>
     150:	81 30       	cpi	r24, 0x01	; 1
     152:	79 f4       	brne	.+30     	; 0x172 <APP_updateDirection+0x3c>
		{
			HLCD_gotoXY(1,4);
     154:	64 e0       	ldi	r22, 0x04	; 4
     156:	0e 94 3b 03 	call	0x676	; 0x676 <HLCD_gotoXY>
			HLCD_vidWriteChar(' ');
     15a:	80 e2       	ldi	r24, 0x20	; 32
     15c:	0e 94 aa 02 	call	0x554	; 0x554 <HLCD_vidWriteChar>
			HLCD_gotoXY(1,0);
     160:	60 e0       	ldi	r22, 0x00	; 0
     162:	81 e0       	ldi	r24, 0x01	; 1
     164:	0e 94 3b 03 	call	0x676	; 0x676 <HLCD_gotoXY>
			HLCD_WriteString("LEFT");
     168:	8f e7       	ldi	r24, 0x7F	; 127
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	0e 94 53 03 	call	0x6a6	; 0x6a6 <HLCD_WriteString>
     170:	08 c0       	rjmp	.+16     	; 0x182 <APP_updateDirection+0x4c>
		}
		else{
			HLCD_gotoXY(1,0);
     172:	60 e0       	ldi	r22, 0x00	; 0
     174:	81 e0       	ldi	r24, 0x01	; 1
     176:	0e 94 3b 03 	call	0x676	; 0x676 <HLCD_gotoXY>
			HLCD_WriteString("RIGHT");
     17a:	84 e8       	ldi	r24, 0x84	; 132
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	0e 94 53 03 	call	0x6a6	; 0x6a6 <HLCD_WriteString>
	
	HULTRASONIC_vidInterruptDisable();
	u8_g_OneSecTicks = 0;
	TIMER_Manager_start (&st_timer1Config);
	HExtInt0_enIntEnable();
	while(u8_g_OneSecTicks <= 5)
     182:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <u8_g_OneSecTicks>
     186:	86 30       	cpi	r24, 0x06	; 6
     188:	08 f3       	brcs	.-62     	; 0x14c <APP_updateDirection+0x16>
			HLCD_WriteString("RIGHT");
		}
		//PORTA = u8_g_dirStateCounter;
	}
	//while(u8_g_OneSecTicks <= 7);
	HLCD_ClrDisplay();
     18a:	0e 94 24 03 	call	0x648	; 0x648 <HLCD_ClrDisplay>
	(void) TIMER_Manager_stop (st_timer1Config.u8_timerNum);
     18e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     192:	0e 94 5d 04 	call	0x8ba	; 0x8ba <TIMER_Manager_stop>
	HExtInt0_enIntDisable();
     196:	0e 94 c9 01 	call	0x392	; 0x392 <HExtInt0_enIntDisable>
	HULTRASONIC_vidInterruptEnable();
     19a:	0e 94 27 05 	call	0xa4e	; 0xa4e <HULTRASONIC_vidInterruptEnable>
     19e:	08 95       	ret

000001a0 <APP_vidStart>:
/*	sei();*/
	DDRA = 0xFF;
}

void APP_vidStart(void)
{
     1a0:	cf 92       	push	r12
     1a2:	df 92       	push	r13
     1a4:	ef 92       	push	r14
     1a6:	ff 92       	push	r15
	if (en_motorSel == EN_MOTOR_IDLE)
     1a8:	80 91 75 00 	lds	r24, 0x0075	; 0x800075 <en_motorSel>
     1ac:	82 30       	cpi	r24, 0x02	; 2
     1ae:	99 f4       	brne	.+38     	; 0x1d6 <APP_vidStart+0x36>
	{
		(void) KEYPAD_read(&u8KeyRead);
     1b0:	88 ee       	ldi	r24, 0xE8	; 232
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	0e 94 ad 03 	call	0x75a	; 0x75a <KEYPAD_read>
		
		if (u8KeyRead != 'N')
     1b8:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <u8KeyRead>
     1bc:	8e 34       	cpi	r24, 0x4E	; 78
     1be:	59 f0       	breq	.+22     	; 0x1d6 <APP_vidStart+0x36>
		{
			switch(u8KeyRead)
     1c0:	81 33       	cpi	r24, 0x31	; 49
     1c2:	19 f0       	breq	.+6      	; 0x1ca <APP_vidStart+0x2a>
     1c4:	82 33       	cpi	r24, 0x32	; 50
     1c6:	21 f0       	breq	.+8      	; 0x1d0 <APP_vidStart+0x30>
     1c8:	06 c0       	rjmp	.+12     	; 0x1d6 <APP_vidStart+0x36>
			{
				case '1' : {
					en_motorSel = EN_MOTOR_START;
     1ca:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <en_motorSel>
					break;
     1ce:	03 c0       	rjmp	.+6      	; 0x1d6 <APP_vidStart+0x36>
				}
				case '2' : {
					en_motorSel = EN_MOTOR_STOP;
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <en_motorSel>
					break;
				}
			}
		}
	}
	if (en_motorSel == EN_MOTOR_START)
     1d6:	80 91 75 00 	lds	r24, 0x0075	; 0x800075 <en_motorSel>
     1da:	81 11       	cpse	r24, r1
     1dc:	8a c0       	rjmp	.+276    	; 0x2f2 <APP_vidStart+0x152>
	 {
		 // global_f64Dist = HULTRASONIC_u8Read();
		 // _delay_ms(15);
		//if (flag3 == 0) {HLCD_ClrDisplay();  flag1 = 0; flag2 = 0; flag3 = 1; }
		if (en_start_state == EN_UPDATE_DIR)
     1de:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__data_end>
     1e2:	81 11       	cpse	r24, r1
     1e4:	10 c0       	rjmp	.+32     	; 0x206 <APP_vidStart+0x66>
		{
			HLCD_ClrDisplay();
     1e6:	0e 94 24 03 	call	0x648	; 0x648 <HLCD_ClrDisplay>
			HLCD_gotoXY(0,0);
     1ea:	60 e0       	ldi	r22, 0x00	; 0
     1ec:	80 e0       	ldi	r24, 0x00	; 0
     1ee:	0e 94 3b 03 	call	0x676	; 0x676 <HLCD_gotoXY>
			HLCD_WriteString( (uint8_t*) "Set Def. Rot.");
     1f2:	8a e8       	ldi	r24, 0x8A	; 138
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	0e 94 53 03 	call	0x6a6	; 0x6a6 <HLCD_WriteString>
			APP_updateDirection();
     1fa:	0e 94 9b 00 	call	0x136	; 0x136 <APP_updateDirection>
			en_start_state = UPDATE_OBISTICAL_STATE;
     1fe:	81 e0       	ldi	r24, 0x01	; 1
     200:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__data_end>
     204:	67 c0       	rjmp	.+206    	; 0x2d4 <APP_vidStart+0x134>
		}
		else if (en_start_state == UPDATE_OBISTICAL_STATE )
     206:	81 30       	cpi	r24, 0x01	; 1
     208:	09 f0       	breq	.+2      	; 0x20c <APP_vidStart+0x6c>
     20a:	64 c0       	rjmp	.+200    	; 0x2d4 <APP_vidStart+0x134>
		{
			global_f64Dist = HULTRASONIC_u8Read();
     20c:	0e 94 33 05 	call	0xa66	; 0xa66 <HULTRASONIC_u8Read>
     210:	60 93 e9 00 	sts	0x00E9, r22	; 0x8000e9 <global_f64Dist>
     214:	70 93 ea 00 	sts	0x00EA, r23	; 0x8000ea <global_f64Dist+0x1>
     218:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <global_f64Dist+0x2>
     21c:	90 93 ec 00 	sts	0x00EC, r25	; 0x8000ec <global_f64Dist+0x3>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     220:	8f e2       	ldi	r24, 0x2F	; 47
     222:	95 e7       	ldi	r25, 0x75	; 117
     224:	01 97       	sbiw	r24, 0x01	; 1
     226:	f1 f7       	brne	.-4      	; 0x224 <APP_vidStart+0x84>
     228:	00 c0       	rjmp	.+0      	; 0x22a <APP_vidStart+0x8a>
     22a:	00 00       	nop
			_delay_ms(15);
			PORTA = (uint8_t) global_f64Dist;
     22c:	60 91 e9 00 	lds	r22, 0x00E9	; 0x8000e9 <global_f64Dist>
     230:	70 91 ea 00 	lds	r23, 0x00EA	; 0x8000ea <global_f64Dist+0x1>
     234:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <global_f64Dist+0x2>
     238:	90 91 ec 00 	lds	r25, 0x00EC	; 0x8000ec <global_f64Dist+0x3>
     23c:	0e 94 aa 0b 	call	0x1754	; 0x1754 <__fixunssfsi>
     240:	6b bb       	out	0x1b, r22	; 27
			if (global_f64Dist > 70.0 )
     242:	c0 90 e9 00 	lds	r12, 0x00E9	; 0x8000e9 <global_f64Dist>
     246:	d0 90 ea 00 	lds	r13, 0x00EA	; 0x8000ea <global_f64Dist+0x1>
     24a:	e0 90 eb 00 	lds	r14, 0x00EB	; 0x8000eb <global_f64Dist+0x2>
     24e:	f0 90 ec 00 	lds	r15, 0x00EC	; 0x8000ec <global_f64Dist+0x3>
     252:	20 e0       	ldi	r18, 0x00	; 0
     254:	30 e0       	ldi	r19, 0x00	; 0
     256:	4c e8       	ldi	r20, 0x8C	; 140
     258:	52 e4       	ldi	r21, 0x42	; 66
     25a:	c7 01       	movw	r24, r14
     25c:	b6 01       	movw	r22, r12
     25e:	0e 94 8b 0c 	call	0x1916	; 0x1916 <__gesf2>
     262:	18 16       	cp	r1, r24
     264:	2c f4       	brge	.+10     	; 0x270 <APP_vidStart+0xd0>
			{
				en_start_state = NO_OBISTICALS;
     266:	82 e0       	ldi	r24, 0x02	; 2
     268:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__data_end>
				PORTA = 0;
     26c:	1b ba       	out	0x1b, r1	; 27
     26e:	32 c0       	rjmp	.+100    	; 0x2d4 <APP_vidStart+0x134>
			}
			else if (global_f64Dist > 30.0)
     270:	20 e0       	ldi	r18, 0x00	; 0
     272:	30 e0       	ldi	r19, 0x00	; 0
     274:	40 ef       	ldi	r20, 0xF0	; 240
     276:	51 e4       	ldi	r21, 0x41	; 65
     278:	c7 01       	movw	r24, r14
     27a:	b6 01       	movw	r22, r12
     27c:	0e 94 8b 0c 	call	0x1916	; 0x1916 <__gesf2>
     280:	18 16       	cp	r1, r24
     282:	34 f4       	brge	.+12     	; 0x290 <APP_vidStart+0xf0>
			{
				en_start_state = OBISTICAL_70_30;
     284:	83 e0       	ldi	r24, 0x03	; 3
     286:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__data_end>
				PORTA = 1;
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	8b bb       	out	0x1b, r24	; 27
     28e:	22 c0       	rjmp	.+68     	; 0x2d4 <APP_vidStart+0x134>
			}
			else if (global_f64Dist >= 20.0)
     290:	20 e0       	ldi	r18, 0x00	; 0
     292:	30 e0       	ldi	r19, 0x00	; 0
     294:	40 ea       	ldi	r20, 0xA0	; 160
     296:	51 e4       	ldi	r21, 0x41	; 65
     298:	c7 01       	movw	r24, r14
     29a:	b6 01       	movw	r22, r12
     29c:	0e 94 8b 0c 	call	0x1916	; 0x1916 <__gesf2>
     2a0:	88 23       	and	r24, r24
     2a2:	34 f0       	brlt	.+12     	; 0x2b0 <APP_vidStart+0x110>
			{
				en_start_state = OBISTICAL_30_20;
     2a4:	84 e0       	ldi	r24, 0x04	; 4
     2a6:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__data_end>
				PORTA = 2;
     2aa:	82 e0       	ldi	r24, 0x02	; 2
     2ac:	8b bb       	out	0x1b, r24	; 27
     2ae:	12 c0       	rjmp	.+36     	; 0x2d4 <APP_vidStart+0x134>
			}
			else if (global_f64Dist < 20.0)
     2b0:	20 e0       	ldi	r18, 0x00	; 0
     2b2:	30 e0       	ldi	r19, 0x00	; 0
     2b4:	40 ea       	ldi	r20, 0xA0	; 160
     2b6:	51 e4       	ldi	r21, 0x41	; 65
     2b8:	c7 01       	movw	r24, r14
     2ba:	b6 01       	movw	r22, r12
     2bc:	0e 94 33 0b 	call	0x1666	; 0x1666 <__cmpsf2>
     2c0:	88 23       	and	r24, r24
     2c2:	34 f4       	brge	.+12     	; 0x2d0 <APP_vidStart+0x130>
			{
				en_start_state = OBISTICAL_LESS_20;
     2c4:	85 e0       	ldi	r24, 0x05	; 5
     2c6:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__data_end>
				PORTA = 3;
     2ca:	83 e0       	ldi	r24, 0x03	; 3
     2cc:	8b bb       	out	0x1b, r24	; 27
     2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <APP_vidStart+0x134>
			}
			else{
				// do nothing
				PORTA = 4;
     2d0:	84 e0       	ldi	r24, 0x04	; 4
     2d2:	8b bb       	out	0x1b, r24	; 27
			}
		}
		else{
			// do nothing
		}
		if (en_start_state == OBISTICAL_70_30)
     2d4:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__data_end>
     2d8:	83 30       	cpi	r24, 0x03	; 3
     2da:	c1 f5       	brne	.+112    	; 0x34c <APP_vidStart+0x1ac>
		{
			HLCD_ClrDisplay();
     2dc:	0e 94 24 03 	call	0x648	; 0x648 <HLCD_ClrDisplay>
			HLCD_gotoXY(0,0);
     2e0:	60 e0       	ldi	r22, 0x00	; 0
     2e2:	80 e0       	ldi	r24, 0x00	; 0
     2e4:	0e 94 3b 03 	call	0x676	; 0x676 <HLCD_gotoXY>
			HLCD_WriteString( (uint8_t*) "I am here");
     2e8:	88 e9       	ldi	r24, 0x98	; 152
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	0e 94 53 03 	call	0x6a6	; 0x6a6 <HLCD_WriteString>
     2f0:	2d c0       	rjmp	.+90     	; 0x34c <APP_vidStart+0x1ac>

		
		
		
	 }
	  else if (en_motorSel == EN_MOTOR_STOP)
     2f2:	81 30       	cpi	r24, 0x01	; 1
     2f4:	b1 f4       	brne	.+44     	; 0x322 <APP_vidStart+0x182>
	  {
		  if (flag2 == 0){HLCD_ClrDisplay();  flag1 = 0; flag2 = 1; flag3 = 0; }		  
     2f6:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <flag2>
     2fa:	81 11       	cpse	r24, r1
     2fc:	09 c0       	rjmp	.+18     	; 0x310 <APP_vidStart+0x170>
     2fe:	0e 94 24 03 	call	0x648	; 0x648 <HLCD_ClrDisplay>
     302:	10 92 cf 00 	sts	0x00CF, r1	; 0x8000cf <flag1>
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <flag2>
     30c:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <flag3>
		  HLCD_gotoXY(0,0);
     310:	60 e0       	ldi	r22, 0x00	; 0
     312:	80 e0       	ldi	r24, 0x00	; 0
     314:	0e 94 3b 03 	call	0x676	; 0x676 <HLCD_gotoXY>
		  HLCD_WriteString( (uint8_t*) "Motor Stopped");   
     318:	82 ea       	ldi	r24, 0xA2	; 162
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	0e 94 53 03 	call	0x6a6	; 0x6a6 <HLCD_WriteString>
     320:	15 c0       	rjmp	.+42     	; 0x34c <APP_vidStart+0x1ac>
	  }
	  else 
	  {
		  if (flag1 == 0) {HLCD_ClrDisplay();  flag1 = 1; flag2 = 0; flag3 = 0; }
     322:	80 91 cf 00 	lds	r24, 0x00CF	; 0x8000cf <flag1>
     326:	81 11       	cpse	r24, r1
     328:	09 c0       	rjmp	.+18     	; 0x33c <APP_vidStart+0x19c>
     32a:	0e 94 24 03 	call	0x648	; 0x648 <HLCD_ClrDisplay>
     32e:	81 e0       	ldi	r24, 0x01	; 1
     330:	80 93 cf 00 	sts	0x00CF, r24	; 0x8000cf <flag1>
     334:	10 92 ce 00 	sts	0x00CE, r1	; 0x8000ce <flag2>
     338:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <flag3>
		  HLCD_gotoXY(0,0);
     33c:	60 e0       	ldi	r22, 0x00	; 0
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	0e 94 3b 03 	call	0x676	; 0x676 <HLCD_gotoXY>
		  HLCD_WriteString( (uint8_t*) "MOTOR in IDLE");  
     344:	80 eb       	ldi	r24, 0xB0	; 176
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	0e 94 53 03 	call	0x6a6	; 0x6a6 <HLCD_WriteString>
	  }
	 

}
     34c:	ff 90       	pop	r15
     34e:	ef 90       	pop	r14
     350:	df 90       	pop	r13
     352:	cf 90       	pop	r12
     354:	08 95       	ret

00000356 <HExtInt_enInit>:
		errorStatus = HEXTINT_NOK;
	}


	return errorStatus;
}
     356:	cf 93       	push	r28
     358:	df 93       	push	r29
     35a:	c8 2f       	mov	r28, r24
     35c:	d6 2f       	mov	r29, r22
     35e:	40 e0       	ldi	r20, 0x00	; 0
     360:	62 e0       	ldi	r22, 0x02	; 2
     362:	83 e0       	ldi	r24, 0x03	; 3
     364:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     368:	40 e0       	ldi	r20, 0x00	; 0
     36a:	62 e0       	ldi	r22, 0x02	; 2
     36c:	83 e0       	ldi	r24, 0x03	; 3
     36e:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     372:	6d 2f       	mov	r22, r29
     374:	8c 2f       	mov	r24, r28
     376:	0e 94 69 06 	call	0xcd2	; 0xcd2 <vidExtInt_init>
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	df 91       	pop	r29
     37e:	cf 91       	pop	r28
     380:	08 95       	ret

00000382 <HExtInt_enCBFInt0>:
     382:	00 97       	sbiw	r24, 0x00	; 0
     384:	21 f0       	breq	.+8      	; 0x38e <HExtInt_enCBFInt0+0xc>
     386:	0e 94 e6 06 	call	0xdcc	; 0xdcc <MEXTINT_vidCallBackFuncInt0>
     38a:	81 e0       	ldi	r24, 0x01	; 1
     38c:	08 95       	ret
     38e:	80 e0       	ldi	r24, 0x00	; 0
     390:	08 95       	ret

00000392 <HExtInt0_enIntDisable>:

void HExtInt0_enIntDisable(void)
{
	MEXTINT_vidDisableInterrupt();
     392:	0e 94 f0 06 	call	0xde0	; 0xde0 <MEXTINT_vidDisableInterrupt>
     396:	08 95       	ret

00000398 <HExtInt0_enIntEnable>:
}

void HExtInt0_enIntEnable(void)
{
	 MEXTINT_vidEnableInterrupt();
     398:	0e 94 f4 06 	call	0xde8	; 0xde8 <MEXTINT_vidEnableInterrupt>
     39c:	08 95       	ret

0000039e <HLCD_vidWritecmd>:
     39e:	0f 93       	push	r16
     3a0:	1f 93       	push	r17
     3a2:	cf 93       	push	r28
     3a4:	df 93       	push	r29
     3a6:	18 2f       	mov	r17, r24
     3a8:	40 e0       	ldi	r20, 0x00	; 0
     3aa:	60 e0       	ldi	r22, 0x00	; 0
     3ac:	83 e0       	ldi	r24, 0x03	; 3
     3ae:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     3b2:	c8 2f       	mov	r28, r24
     3b4:	40 e0       	ldi	r20, 0x00	; 0
     3b6:	67 e0       	ldi	r22, 0x07	; 7
     3b8:	82 e0       	ldi	r24, 0x02	; 2
     3ba:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     3be:	c8 2b       	or	r28, r24
     3c0:	01 2f       	mov	r16, r17
     3c2:	02 95       	swap	r16
     3c4:	0f 70       	andi	r16, 0x0F	; 15
     3c6:	d0 e0       	ldi	r29, 0x00	; 0
     3c8:	15 c0       	rjmp	.+42     	; 0x3f4 <HLCD_vidWritecmd+0x56>
     3ca:	ed 2f       	mov	r30, r29
     3cc:	f0 e0       	ldi	r31, 0x00	; 0
     3ce:	40 2f       	mov	r20, r16
     3d0:	50 e0       	ldi	r21, 0x00	; 0
     3d2:	0d 2e       	mov	r0, r29
     3d4:	02 c0       	rjmp	.+4      	; 0x3da <HLCD_vidWritecmd+0x3c>
     3d6:	55 95       	asr	r21
     3d8:	47 95       	ror	r20
     3da:	0a 94       	dec	r0
     3dc:	e2 f7       	brpl	.-8      	; 0x3d6 <HLCD_vidWritecmd+0x38>
     3de:	41 70       	andi	r20, 0x01	; 1
     3e0:	ee 0f       	add	r30, r30
     3e2:	ff 1f       	adc	r31, r31
     3e4:	ea 58       	subi	r30, 0x8A	; 138
     3e6:	ff 4f       	sbci	r31, 0xFF	; 255
     3e8:	61 81       	ldd	r22, Z+1	; 0x01
     3ea:	80 81       	ld	r24, Z
     3ec:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     3f0:	c8 2b       	or	r28, r24
     3f2:	df 5f       	subi	r29, 0xFF	; 255
     3f4:	d4 30       	cpi	r29, 0x04	; 4
     3f6:	48 f3       	brcs	.-46     	; 0x3ca <HLCD_vidWritecmd+0x2c>
     3f8:	41 e0       	ldi	r20, 0x01	; 1
     3fa:	61 e0       	ldi	r22, 0x01	; 1
     3fc:	83 e0       	ldi	r24, 0x03	; 3
     3fe:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     402:	c8 2b       	or	r28, r24
     404:	89 ef       	ldi	r24, 0xF9	; 249
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	01 97       	sbiw	r24, 0x01	; 1
     40a:	f1 f7       	brne	.-4      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
     40c:	00 c0       	rjmp	.+0      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     40e:	00 00       	nop
     410:	40 e0       	ldi	r20, 0x00	; 0
     412:	61 e0       	ldi	r22, 0x01	; 1
     414:	83 e0       	ldi	r24, 0x03	; 3
     416:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     41a:	c8 2b       	or	r28, r24
     41c:	92 e4       	ldi	r25, 0x42	; 66
     41e:	9a 95       	dec	r25
     420:	f1 f7       	brne	.-4      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
     422:	00 c0       	rjmp	.+0      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     424:	1f 70       	andi	r17, 0x0F	; 15
     426:	d0 e0       	ldi	r29, 0x00	; 0
     428:	15 c0       	rjmp	.+42     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
     42a:	ed 2f       	mov	r30, r29
     42c:	f0 e0       	ldi	r31, 0x00	; 0
     42e:	41 2f       	mov	r20, r17
     430:	50 e0       	ldi	r21, 0x00	; 0
     432:	0d 2e       	mov	r0, r29
     434:	02 c0       	rjmp	.+4      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
     436:	55 95       	asr	r21
     438:	47 95       	ror	r20
     43a:	0a 94       	dec	r0
     43c:	e2 f7       	brpl	.-8      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
     43e:	41 70       	andi	r20, 0x01	; 1
     440:	ee 0f       	add	r30, r30
     442:	ff 1f       	adc	r31, r31
     444:	ea 58       	subi	r30, 0x8A	; 138
     446:	ff 4f       	sbci	r31, 0xFF	; 255
     448:	61 81       	ldd	r22, Z+1	; 0x01
     44a:	80 81       	ld	r24, Z
     44c:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     450:	c8 2b       	or	r28, r24
     452:	df 5f       	subi	r29, 0xFF	; 255
     454:	d4 30       	cpi	r29, 0x04	; 4
     456:	48 f3       	brcs	.-46     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
     458:	41 e0       	ldi	r20, 0x01	; 1
     45a:	61 e0       	ldi	r22, 0x01	; 1
     45c:	83 e0       	ldi	r24, 0x03	; 3
     45e:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     462:	c8 2b       	or	r28, r24
     464:	e9 ef       	ldi	r30, 0xF9	; 249
     466:	f0 e0       	ldi	r31, 0x00	; 0
     468:	31 97       	sbiw	r30, 0x01	; 1
     46a:	f1 f7       	brne	.-4      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     46c:	00 c0       	rjmp	.+0      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
     46e:	00 00       	nop
     470:	40 e0       	ldi	r20, 0x00	; 0
     472:	61 e0       	ldi	r22, 0x01	; 1
     474:	83 e0       	ldi	r24, 0x03	; 3
     476:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     47a:	8c 2b       	or	r24, r28
     47c:	e3 ef       	ldi	r30, 0xF3	; 243
     47e:	f1 e0       	ldi	r31, 0x01	; 1
     480:	31 97       	sbiw	r30, 0x01	; 1
     482:	f1 f7       	brne	.-4      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     484:	00 c0       	rjmp	.+0      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
     486:	00 00       	nop
     488:	df 91       	pop	r29
     48a:	cf 91       	pop	r28
     48c:	1f 91       	pop	r17
     48e:	0f 91       	pop	r16
     490:	08 95       	ret

00000492 <HLCD_vidInit>:
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	d0 e0       	ldi	r29, 0x00	; 0
     498:	c0 e0       	ldi	r28, 0x00	; 0
     49a:	0d c0       	rjmp	.+26     	; 0x4b6 <HLCD_vidInit+0x24>
     49c:	ed 2f       	mov	r30, r29
     49e:	f0 e0       	ldi	r31, 0x00	; 0
     4a0:	ee 0f       	add	r30, r30
     4a2:	ff 1f       	adc	r31, r31
     4a4:	ea 58       	subi	r30, 0x8A	; 138
     4a6:	ff 4f       	sbci	r31, 0xFF	; 255
     4a8:	41 e0       	ldi	r20, 0x01	; 1
     4aa:	61 81       	ldd	r22, Z+1	; 0x01
     4ac:	80 81       	ld	r24, Z
     4ae:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     4b2:	c8 2b       	or	r28, r24
     4b4:	df 5f       	subi	r29, 0xFF	; 255
     4b6:	d4 30       	cpi	r29, 0x04	; 4
     4b8:	88 f3       	brcs	.-30     	; 0x49c <HLCD_vidInit+0xa>
     4ba:	41 e0       	ldi	r20, 0x01	; 1
     4bc:	67 e0       	ldi	r22, 0x07	; 7
     4be:	82 e0       	ldi	r24, 0x02	; 2
     4c0:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     4c4:	c8 2b       	or	r28, r24
     4c6:	41 e0       	ldi	r20, 0x01	; 1
     4c8:	60 e0       	ldi	r22, 0x00	; 0
     4ca:	83 e0       	ldi	r24, 0x03	; 3
     4cc:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     4d0:	c8 2b       	or	r28, r24
     4d2:	41 e0       	ldi	r20, 0x01	; 1
     4d4:	61 e0       	ldi	r22, 0x01	; 1
     4d6:	83 e0       	ldi	r24, 0x03	; 3
     4d8:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     4dc:	c8 2b       	or	r28, r24
     4de:	8f e0       	ldi	r24, 0x0F	; 15
     4e0:	97 e2       	ldi	r25, 0x27	; 39
     4e2:	01 97       	sbiw	r24, 0x01	; 1
     4e4:	f1 f7       	brne	.-4      	; 0x4e2 <HLCD_vidInit+0x50>
     4e6:	00 c0       	rjmp	.+0      	; 0x4e8 <HLCD_vidInit+0x56>
     4e8:	00 00       	nop
     4ea:	82 e0       	ldi	r24, 0x02	; 2
     4ec:	0e 94 cf 01 	call	0x39e	; 0x39e <HLCD_vidWritecmd>
     4f0:	c8 2b       	or	r28, r24
     4f2:	e9 ef       	ldi	r30, 0xF9	; 249
     4f4:	f0 e0       	ldi	r31, 0x00	; 0
     4f6:	31 97       	sbiw	r30, 0x01	; 1
     4f8:	f1 f7       	brne	.-4      	; 0x4f6 <HLCD_vidInit+0x64>
     4fa:	00 c0       	rjmp	.+0      	; 0x4fc <HLCD_vidInit+0x6a>
     4fc:	00 00       	nop
     4fe:	88 e2       	ldi	r24, 0x28	; 40
     500:	0e 94 cf 01 	call	0x39e	; 0x39e <HLCD_vidWritecmd>
     504:	c8 2b       	or	r28, r24
     506:	89 ef       	ldi	r24, 0xF9	; 249
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	01 97       	sbiw	r24, 0x01	; 1
     50c:	f1 f7       	brne	.-4      	; 0x50a <HLCD_vidInit+0x78>
     50e:	00 c0       	rjmp	.+0      	; 0x510 <HLCD_vidInit+0x7e>
     510:	00 00       	nop
     512:	81 e0       	ldi	r24, 0x01	; 1
     514:	0e 94 cf 01 	call	0x39e	; 0x39e <HLCD_vidWritecmd>
     518:	c8 2b       	or	r28, r24
     51a:	e7 ee       	ldi	r30, 0xE7	; 231
     51c:	f3 e0       	ldi	r31, 0x03	; 3
     51e:	31 97       	sbiw	r30, 0x01	; 1
     520:	f1 f7       	brne	.-4      	; 0x51e <HLCD_vidInit+0x8c>
     522:	00 c0       	rjmp	.+0      	; 0x524 <HLCD_vidInit+0x92>
     524:	00 00       	nop
     526:	86 e0       	ldi	r24, 0x06	; 6
     528:	0e 94 cf 01 	call	0x39e	; 0x39e <HLCD_vidWritecmd>
     52c:	c8 2b       	or	r28, r24
     52e:	89 ef       	ldi	r24, 0xF9	; 249
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	01 97       	sbiw	r24, 0x01	; 1
     534:	f1 f7       	brne	.-4      	; 0x532 <HLCD_vidInit+0xa0>
     536:	00 c0       	rjmp	.+0      	; 0x538 <HLCD_vidInit+0xa6>
     538:	00 00       	nop
     53a:	8c e0       	ldi	r24, 0x0C	; 12
     53c:	0e 94 cf 01 	call	0x39e	; 0x39e <HLCD_vidWritecmd>
     540:	8c 2b       	or	r24, r28
     542:	e9 ef       	ldi	r30, 0xF9	; 249
     544:	f0 e0       	ldi	r31, 0x00	; 0
     546:	31 97       	sbiw	r30, 0x01	; 1
     548:	f1 f7       	brne	.-4      	; 0x546 <HLCD_vidInit+0xb4>
     54a:	00 c0       	rjmp	.+0      	; 0x54c <HLCD_vidInit+0xba>
     54c:	00 00       	nop
     54e:	df 91       	pop	r29
     550:	cf 91       	pop	r28
     552:	08 95       	ret

00000554 <HLCD_vidWriteChar>:
     554:	0f 93       	push	r16
     556:	1f 93       	push	r17
     558:	cf 93       	push	r28
     55a:	df 93       	push	r29
     55c:	18 2f       	mov	r17, r24
     55e:	40 e0       	ldi	r20, 0x00	; 0
     560:	60 e0       	ldi	r22, 0x00	; 0
     562:	83 e0       	ldi	r24, 0x03	; 3
     564:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     568:	c8 2f       	mov	r28, r24
     56a:	41 e0       	ldi	r20, 0x01	; 1
     56c:	67 e0       	ldi	r22, 0x07	; 7
     56e:	82 e0       	ldi	r24, 0x02	; 2
     570:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     574:	c8 2b       	or	r28, r24
     576:	01 2f       	mov	r16, r17
     578:	02 95       	swap	r16
     57a:	0f 70       	andi	r16, 0x0F	; 15
     57c:	d0 e0       	ldi	r29, 0x00	; 0
     57e:	15 c0       	rjmp	.+42     	; 0x5aa <HLCD_vidWriteChar+0x56>
     580:	ed 2f       	mov	r30, r29
     582:	f0 e0       	ldi	r31, 0x00	; 0
     584:	40 2f       	mov	r20, r16
     586:	50 e0       	ldi	r21, 0x00	; 0
     588:	0d 2e       	mov	r0, r29
     58a:	02 c0       	rjmp	.+4      	; 0x590 <HLCD_vidWriteChar+0x3c>
     58c:	55 95       	asr	r21
     58e:	47 95       	ror	r20
     590:	0a 94       	dec	r0
     592:	e2 f7       	brpl	.-8      	; 0x58c <HLCD_vidWriteChar+0x38>
     594:	41 70       	andi	r20, 0x01	; 1
     596:	ee 0f       	add	r30, r30
     598:	ff 1f       	adc	r31, r31
     59a:	ea 58       	subi	r30, 0x8A	; 138
     59c:	ff 4f       	sbci	r31, 0xFF	; 255
     59e:	61 81       	ldd	r22, Z+1	; 0x01
     5a0:	80 81       	ld	r24, Z
     5a2:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     5a6:	c8 2b       	or	r28, r24
     5a8:	df 5f       	subi	r29, 0xFF	; 255
     5aa:	d4 30       	cpi	r29, 0x04	; 4
     5ac:	48 f3       	brcs	.-46     	; 0x580 <HLCD_vidWriteChar+0x2c>
     5ae:	41 e0       	ldi	r20, 0x01	; 1
     5b0:	61 e0       	ldi	r22, 0x01	; 1
     5b2:	83 e0       	ldi	r24, 0x03	; 3
     5b4:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     5b8:	c8 2b       	or	r28, r24
     5ba:	89 ef       	ldi	r24, 0xF9	; 249
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	01 97       	sbiw	r24, 0x01	; 1
     5c0:	f1 f7       	brne	.-4      	; 0x5be <HLCD_vidWriteChar+0x6a>
     5c2:	00 c0       	rjmp	.+0      	; 0x5c4 <HLCD_vidWriteChar+0x70>
     5c4:	00 00       	nop
     5c6:	40 e0       	ldi	r20, 0x00	; 0
     5c8:	61 e0       	ldi	r22, 0x01	; 1
     5ca:	83 e0       	ldi	r24, 0x03	; 3
     5cc:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     5d0:	c8 2b       	or	r28, r24
     5d2:	92 e4       	ldi	r25, 0x42	; 66
     5d4:	9a 95       	dec	r25
     5d6:	f1 f7       	brne	.-4      	; 0x5d4 <HLCD_vidWriteChar+0x80>
     5d8:	00 c0       	rjmp	.+0      	; 0x5da <HLCD_vidWriteChar+0x86>
     5da:	1f 70       	andi	r17, 0x0F	; 15
     5dc:	d0 e0       	ldi	r29, 0x00	; 0
     5de:	15 c0       	rjmp	.+42     	; 0x60a <HLCD_vidWriteChar+0xb6>
     5e0:	ed 2f       	mov	r30, r29
     5e2:	f0 e0       	ldi	r31, 0x00	; 0
     5e4:	41 2f       	mov	r20, r17
     5e6:	50 e0       	ldi	r21, 0x00	; 0
     5e8:	0d 2e       	mov	r0, r29
     5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <HLCD_vidWriteChar+0x9c>
     5ec:	55 95       	asr	r21
     5ee:	47 95       	ror	r20
     5f0:	0a 94       	dec	r0
     5f2:	e2 f7       	brpl	.-8      	; 0x5ec <HLCD_vidWriteChar+0x98>
     5f4:	41 70       	andi	r20, 0x01	; 1
     5f6:	ee 0f       	add	r30, r30
     5f8:	ff 1f       	adc	r31, r31
     5fa:	ea 58       	subi	r30, 0x8A	; 138
     5fc:	ff 4f       	sbci	r31, 0xFF	; 255
     5fe:	61 81       	ldd	r22, Z+1	; 0x01
     600:	80 81       	ld	r24, Z
     602:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     606:	c8 2b       	or	r28, r24
     608:	df 5f       	subi	r29, 0xFF	; 255
     60a:	d4 30       	cpi	r29, 0x04	; 4
     60c:	48 f3       	brcs	.-46     	; 0x5e0 <HLCD_vidWriteChar+0x8c>
     60e:	41 e0       	ldi	r20, 0x01	; 1
     610:	61 e0       	ldi	r22, 0x01	; 1
     612:	83 e0       	ldi	r24, 0x03	; 3
     614:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     618:	c8 2b       	or	r28, r24
     61a:	e9 ef       	ldi	r30, 0xF9	; 249
     61c:	f0 e0       	ldi	r31, 0x00	; 0
     61e:	31 97       	sbiw	r30, 0x01	; 1
     620:	f1 f7       	brne	.-4      	; 0x61e <HLCD_vidWriteChar+0xca>
     622:	00 c0       	rjmp	.+0      	; 0x624 <HLCD_vidWriteChar+0xd0>
     624:	00 00       	nop
     626:	40 e0       	ldi	r20, 0x00	; 0
     628:	61 e0       	ldi	r22, 0x01	; 1
     62a:	83 e0       	ldi	r24, 0x03	; 3
     62c:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     630:	8c 2b       	or	r24, r28
     632:	e3 ef       	ldi	r30, 0xF3	; 243
     634:	f1 e0       	ldi	r31, 0x01	; 1
     636:	31 97       	sbiw	r30, 0x01	; 1
     638:	f1 f7       	brne	.-4      	; 0x636 <HLCD_vidWriteChar+0xe2>
     63a:	00 c0       	rjmp	.+0      	; 0x63c <HLCD_vidWriteChar+0xe8>
     63c:	00 00       	nop
     63e:	df 91       	pop	r29
     640:	cf 91       	pop	r28
     642:	1f 91       	pop	r17
     644:	0f 91       	pop	r16
     646:	08 95       	ret

00000648 <HLCD_ClrDisplay>:
     648:	cf 93       	push	r28
     64a:	81 e0       	ldi	r24, 0x01	; 1
     64c:	0e 94 cf 01 	call	0x39e	; 0x39e <HLCD_vidWritecmd>
     650:	c8 2f       	mov	r28, r24
     652:	87 ee       	ldi	r24, 0xE7	; 231
     654:	93 e0       	ldi	r25, 0x03	; 3
     656:	01 97       	sbiw	r24, 0x01	; 1
     658:	f1 f7       	brne	.-4      	; 0x656 <HLCD_ClrDisplay+0xe>
     65a:	00 c0       	rjmp	.+0      	; 0x65c <HLCD_ClrDisplay+0x14>
     65c:	00 00       	nop
     65e:	82 e0       	ldi	r24, 0x02	; 2
     660:	0e 94 cf 01 	call	0x39e	; 0x39e <HLCD_vidWritecmd>
     664:	8c 2b       	or	r24, r28
     666:	e7 ee       	ldi	r30, 0xE7	; 231
     668:	f3 e0       	ldi	r31, 0x03	; 3
     66a:	31 97       	sbiw	r30, 0x01	; 1
     66c:	f1 f7       	brne	.-4      	; 0x66a <HLCD_ClrDisplay+0x22>
     66e:	00 c0       	rjmp	.+0      	; 0x670 <HLCD_ClrDisplay+0x28>
     670:	00 00       	nop
     672:	cf 91       	pop	r28
     674:	08 95       	ret

00000676 <HLCD_gotoXY>:
     676:	81 11       	cpse	r24, r1
     678:	08 c0       	rjmp	.+16     	; 0x68a <HLCD_gotoXY+0x14>
     67a:	60 31       	cpi	r22, 0x10	; 16
     67c:	30 f4       	brcc	.+12     	; 0x68a <HLCD_gotoXY+0x14>
     67e:	86 2f       	mov	r24, r22
     680:	8f 70       	andi	r24, 0x0F	; 15
     682:	80 68       	ori	r24, 0x80	; 128
     684:	0e 94 cf 01 	call	0x39e	; 0x39e <HLCD_vidWritecmd>
     688:	08 95       	ret
     68a:	81 30       	cpi	r24, 0x01	; 1
     68c:	41 f4       	brne	.+16     	; 0x69e <HLCD_gotoXY+0x28>
     68e:	60 31       	cpi	r22, 0x10	; 16
     690:	40 f4       	brcc	.+16     	; 0x6a2 <HLCD_gotoXY+0x2c>
     692:	86 2f       	mov	r24, r22
     694:	8f 70       	andi	r24, 0x0F	; 15
     696:	80 6c       	ori	r24, 0xC0	; 192
     698:	0e 94 cf 01 	call	0x39e	; 0x39e <HLCD_vidWritecmd>
     69c:	08 95       	ret
     69e:	85 e0       	ldi	r24, 0x05	; 5
     6a0:	08 95       	ret
     6a2:	85 e0       	ldi	r24, 0x05	; 5
     6a4:	08 95       	ret

000006a6 <HLCD_WriteString>:
     6a6:	ef 92       	push	r14
     6a8:	ff 92       	push	r15
     6aa:	1f 93       	push	r17
     6ac:	cf 93       	push	r28
     6ae:	df 93       	push	r29
     6b0:	7c 01       	movw	r14, r24
     6b2:	fc 01       	movw	r30, r24
     6b4:	80 81       	ld	r24, Z
     6b6:	c0 e0       	ldi	r28, 0x00	; 0
     6b8:	d0 e0       	ldi	r29, 0x00	; 0
     6ba:	10 e0       	ldi	r17, 0x00	; 0
     6bc:	08 c0       	rjmp	.+16     	; 0x6ce <HLCD_WriteString+0x28>
     6be:	0e 94 aa 02 	call	0x554	; 0x554 <HLCD_vidWriteChar>
     6c2:	18 2b       	or	r17, r24
     6c4:	21 96       	adiw	r28, 0x01	; 1
     6c6:	f7 01       	movw	r30, r14
     6c8:	ec 0f       	add	r30, r28
     6ca:	fd 1f       	adc	r31, r29
     6cc:	80 81       	ld	r24, Z
     6ce:	81 11       	cpse	r24, r1
     6d0:	f6 cf       	rjmp	.-20     	; 0x6be <HLCD_WriteString+0x18>
     6d2:	81 2f       	mov	r24, r17
     6d4:	df 91       	pop	r29
     6d6:	cf 91       	pop	r28
     6d8:	1f 91       	pop	r17
     6da:	ff 90       	pop	r15
     6dc:	ef 90       	pop	r14
     6de:	08 95       	ret

000006e0 <KEYPAD_init>:
     6e0:	cf 93       	push	r28
     6e2:	df 93       	push	r29
     6e4:	00 97       	sbiw	r24, 0x00	; 0
     6e6:	a9 f1       	breq	.+106    	; 0x752 <KEYPAD_init+0x72>
     6e8:	ec 01       	movw	r28, r24
     6ea:	69 81       	ldd	r22, Y+1	; 0x01
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	88 81       	ld	r24, Y
     6f0:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     6f4:	6b 81       	ldd	r22, Y+3	; 0x03
     6f6:	40 e0       	ldi	r20, 0x00	; 0
     6f8:	8a 81       	ldd	r24, Y+2	; 0x02
     6fa:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     6fe:	6d 81       	ldd	r22, Y+5	; 0x05
     700:	40 e0       	ldi	r20, 0x00	; 0
     702:	8c 81       	ldd	r24, Y+4	; 0x04
     704:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     708:	69 81       	ldd	r22, Y+1	; 0x01
     70a:	41 e0       	ldi	r20, 0x01	; 1
     70c:	88 81       	ld	r24, Y
     70e:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     712:	6b 81       	ldd	r22, Y+3	; 0x03
     714:	41 e0       	ldi	r20, 0x01	; 1
     716:	8a 81       	ldd	r24, Y+2	; 0x02
     718:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     71c:	6d 81       	ldd	r22, Y+5	; 0x05
     71e:	41 e0       	ldi	r20, 0x01	; 1
     720:	8c 81       	ldd	r24, Y+4	; 0x04
     722:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     726:	6f 81       	ldd	r22, Y+7	; 0x07
     728:	41 e0       	ldi	r20, 0x01	; 1
     72a:	8e 81       	ldd	r24, Y+6	; 0x06
     72c:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     730:	69 85       	ldd	r22, Y+9	; 0x09
     732:	41 e0       	ldi	r20, 0x01	; 1
     734:	88 85       	ldd	r24, Y+8	; 0x08
     736:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     73a:	6b 85       	ldd	r22, Y+11	; 0x0b
     73c:	41 e0       	ldi	r20, 0x01	; 1
     73e:	8a 85       	ldd	r24, Y+10	; 0x0a
     740:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     744:	6d 85       	ldd	r22, Y+13	; 0x0d
     746:	41 e0       	ldi	r20, 0x01	; 1
     748:	8c 85       	ldd	r24, Y+12	; 0x0c
     74a:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     74e:	80 e0       	ldi	r24, 0x00	; 0
     750:	01 c0       	rjmp	.+2      	; 0x754 <KEYPAD_init+0x74>
     752:	87 e0       	ldi	r24, 0x07	; 7
     754:	df 91       	pop	r29
     756:	cf 91       	pop	r28
     758:	08 95       	ret

0000075a <KEYPAD_read>:
     75a:	df 92       	push	r13
     75c:	ef 92       	push	r14
     75e:	ff 92       	push	r15
     760:	0f 93       	push	r16
     762:	1f 93       	push	r17
     764:	cf 93       	push	r28
     766:	df 93       	push	r29
     768:	1f 92       	push	r1
     76a:	cd b7       	in	r28, 0x3d	; 61
     76c:	de b7       	in	r29, 0x3e	; 62
     76e:	7c 01       	movw	r14, r24
     770:	07 e6       	ldi	r16, 0x67	; 103
     772:	10 e0       	ldi	r17, 0x00	; 0
     774:	f8 01       	movw	r30, r16
     776:	67 81       	ldd	r22, Z+7	; 0x07
     778:	41 e0       	ldi	r20, 0x01	; 1
     77a:	86 81       	ldd	r24, Z+6	; 0x06
     77c:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     780:	f8 01       	movw	r30, r16
     782:	61 85       	ldd	r22, Z+9	; 0x09
     784:	41 e0       	ldi	r20, 0x01	; 1
     786:	80 85       	ldd	r24, Z+8	; 0x08
     788:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     78c:	f8 01       	movw	r30, r16
     78e:	63 85       	ldd	r22, Z+11	; 0x0b
     790:	41 e0       	ldi	r20, 0x01	; 1
     792:	82 85       	ldd	r24, Z+10	; 0x0a
     794:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     798:	f8 01       	movw	r30, r16
     79a:	65 85       	ldd	r22, Z+13	; 0x0d
     79c:	41 e0       	ldi	r20, 0x01	; 1
     79e:	84 85       	ldd	r24, Z+12	; 0x0c
     7a0:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     7a4:	00 e0       	ldi	r16, 0x00	; 0
     7a6:	d1 2c       	mov	r13, r1
     7a8:	42 c0       	rjmp	.+132    	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
     7aa:	e7 e6       	ldi	r30, 0x67	; 103
     7ac:	f0 e0       	ldi	r31, 0x00	; 0
     7ae:	67 81       	ldd	r22, Z+7	; 0x07
     7b0:	60 0f       	add	r22, r16
     7b2:	40 e0       	ldi	r20, 0x00	; 0
     7b4:	86 81       	ldd	r24, Z+6	; 0x06
     7b6:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     7ba:	10 e0       	ldi	r17, 0x00	; 0
     7bc:	2d c0       	rjmp	.+90     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     7be:	e7 e6       	ldi	r30, 0x67	; 103
     7c0:	f0 e0       	ldi	r31, 0x00	; 0
     7c2:	61 81       	ldd	r22, Z+1	; 0x01
     7c4:	61 0f       	add	r22, r17
     7c6:	ae 01       	movw	r20, r28
     7c8:	4f 5f       	subi	r20, 0xFF	; 255
     7ca:	5f 4f       	sbci	r21, 0xFF	; 255
     7cc:	80 81       	ld	r24, Z
     7ce:	0e 94 fe 05 	call	0xbfc	; 0xbfc <DIO_readPIN>
     7d2:	89 81       	ldd	r24, Y+1	; 0x01
     7d4:	81 11       	cpse	r24, r1
     7d6:	1f c0       	rjmp	.+62     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
     7d8:	0a c0       	rjmp	.+20     	; 0x7ee <KEYPAD_read+0x94>
     7da:	e7 e6       	ldi	r30, 0x67	; 103
     7dc:	f0 e0       	ldi	r31, 0x00	; 0
     7de:	61 81       	ldd	r22, Z+1	; 0x01
     7e0:	61 0f       	add	r22, r17
     7e2:	ae 01       	movw	r20, r28
     7e4:	4f 5f       	subi	r20, 0xFF	; 255
     7e6:	5f 4f       	sbci	r21, 0xFF	; 255
     7e8:	80 81       	ld	r24, Z
     7ea:	0e 94 fe 05 	call	0xbfc	; 0xbfc <DIO_readPIN>
     7ee:	89 81       	ldd	r24, Y+1	; 0x01
     7f0:	88 23       	and	r24, r24
     7f2:	99 f3       	breq	.-26     	; 0x7da <KEYPAD_read+0x80>
     7f4:	80 2f       	mov	r24, r16
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	fc 01       	movw	r30, r24
     7fa:	ee 0f       	add	r30, r30
     7fc:	ff 1f       	adc	r31, r31
     7fe:	e8 0f       	add	r30, r24
     800:	f9 1f       	adc	r31, r25
     802:	e2 54       	subi	r30, 0x42	; 66
     804:	ff 4f       	sbci	r31, 0xFF	; 255
     806:	e1 0f       	add	r30, r17
     808:	f1 1d       	adc	r31, r1
     80a:	80 81       	ld	r24, Z
     80c:	f7 01       	movw	r30, r14
     80e:	80 83       	st	Z, r24
     810:	dd 24       	eor	r13, r13
     812:	d3 94       	inc	r13
     814:	03 c0       	rjmp	.+6      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
     816:	1f 5f       	subi	r17, 0xFF	; 255
     818:	13 30       	cpi	r17, 0x03	; 3
     81a:	88 f2       	brcs	.-94     	; 0x7be <KEYPAD_read+0x64>
     81c:	e7 e6       	ldi	r30, 0x67	; 103
     81e:	f0 e0       	ldi	r31, 0x00	; 0
     820:	67 81       	ldd	r22, Z+7	; 0x07
     822:	60 0f       	add	r22, r16
     824:	41 e0       	ldi	r20, 0x01	; 1
     826:	86 81       	ldd	r24, Z+6	; 0x06
     828:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     82c:	0f 5f       	subi	r16, 0xFF	; 255
     82e:	04 30       	cpi	r16, 0x04	; 4
     830:	08 f4       	brcc	.+2      	; 0x834 <__DATA_REGION_LENGTH__+0x34>
     832:	bb cf       	rjmp	.-138    	; 0x7aa <KEYPAD_read+0x50>
     834:	f1 e0       	ldi	r31, 0x01	; 1
     836:	df 16       	cp	r13, r31
     838:	19 f0       	breq	.+6      	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     83a:	8e e4       	ldi	r24, 0x4E	; 78
     83c:	f7 01       	movw	r30, r14
     83e:	80 83       	st	Z, r24
     840:	80 e0       	ldi	r24, 0x00	; 0
     842:	0f 90       	pop	r0
     844:	df 91       	pop	r29
     846:	cf 91       	pop	r28
     848:	1f 91       	pop	r17
     84a:	0f 91       	pop	r16
     84c:	ff 90       	pop	r15
     84e:	ef 90       	pop	r14
     850:	df 90       	pop	r13
     852:	08 95       	ret

00000854 <PWM_init>:


u8_pwmErrorType PWM_init(void)
{
	
}
     854:	08 95       	ret

00000856 <TIMER_Manager_init>:
#include "timer_manager.h"
#include "../../MCAL/timer/timer.h"


u8_en_timerErrorsType TIMER_Manager_init (st_timerConfigType* st_config)
{
     856:	1f 93       	push	r17
     858:	cf 93       	push	r28
     85a:	df 93       	push	r29
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if(NULL==st_config || st_config->u8_timerNum >= TIMER_INVALID_NUM || st_config->u8_timerClock >= TIMER_INVALID_CLOCK)
     85c:	00 97       	sbiw	r24, 0x00	; 0
     85e:	91 f0       	breq	.+36     	; 0x884 <__stack+0x25>
     860:	fc 01       	movw	r30, r24
     862:	20 81       	ld	r18, Z
     864:	23 30       	cpi	r18, 0x03	; 3
     866:	80 f4       	brcc	.+32     	; 0x888 <__stack+0x29>
     868:	21 81       	ldd	r18, Z+1	; 0x01
     86a:	2a 30       	cpi	r18, 0x0A	; 10
     86c:	78 f4       	brcc	.+30     	; 0x88c <__stack+0x2d>
     86e:	ec 01       	movw	r28, r24
	{
		l_ret = TIMER_E_NOT_OK;
	}
	else
	{
		l_ret  = TIMER_init(st_config);
     870:	0e 94 db 07 	call	0xfb6	; 0xfb6 <TIMER_init>
     874:	18 2f       	mov	r17, r24
		l_ret |= TIMER_setCallBack(st_config->callBackFunction,st_config->u8_timerNum);
     876:	68 81       	ld	r22, Y
     878:	8d 81       	ldd	r24, Y+5	; 0x05
     87a:	9e 81       	ldd	r25, Y+6	; 0x06
     87c:	0e 94 05 0a 	call	0x140a	; 0x140a <TIMER_setCallBack>
     880:	81 2b       	or	r24, r17
     882:	05 c0       	rjmp	.+10     	; 0x88e <__stack+0x2f>
u8_en_timerErrorsType TIMER_Manager_init (st_timerConfigType* st_config)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if(NULL==st_config || st_config->u8_timerNum >= TIMER_INVALID_NUM || st_config->u8_timerClock >= TIMER_INVALID_CLOCK)
	{
		l_ret = TIMER_E_NOT_OK;
     884:	83 e0       	ldi	r24, 0x03	; 3
     886:	03 c0       	rjmp	.+6      	; 0x88e <__stack+0x2f>
     888:	83 e0       	ldi	r24, 0x03	; 3
     88a:	01 c0       	rjmp	.+2      	; 0x88e <__stack+0x2f>
     88c:	83 e0       	ldi	r24, 0x03	; 3
	{
		l_ret  = TIMER_init(st_config);
		l_ret |= TIMER_setCallBack(st_config->callBackFunction,st_config->u8_timerNum);
	}
	return l_ret;
}
     88e:	df 91       	pop	r29
     890:	cf 91       	pop	r28
     892:	1f 91       	pop	r17
     894:	08 95       	ret

00000896 <TIMER_Manager_start>:
u8_en_timerErrorsType TIMER_Manager_start (st_timerConfigType* st_config)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if(NULL==st_config || st_config->u8_timerNum >= TIMER_INVALID_NUM || st_config->u8_timerClock >= TIMER_INVALID_CLOCK)
     896:	00 97       	sbiw	r24, 0x00	; 0
     898:	51 f0       	breq	.+20     	; 0x8ae <TIMER_Manager_start+0x18>
     89a:	fc 01       	movw	r30, r24
     89c:	20 81       	ld	r18, Z
     89e:	23 30       	cpi	r18, 0x03	; 3
     8a0:	40 f4       	brcc	.+16     	; 0x8b2 <TIMER_Manager_start+0x1c>
     8a2:	21 81       	ldd	r18, Z+1	; 0x01
     8a4:	2a 30       	cpi	r18, 0x0A	; 10
     8a6:	38 f4       	brcc	.+14     	; 0x8b6 <TIMER_Manager_start+0x20>
	{
		l_ret = TIMER_E_NOT_OK;
	}
	else
	{
		l_ret = TIMER_start(st_config);
     8a8:	0e 94 64 08 	call	0x10c8	; 0x10c8 <TIMER_start>
     8ac:	08 95       	ret
u8_en_timerErrorsType TIMER_Manager_start (st_timerConfigType* st_config)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if(NULL==st_config || st_config->u8_timerNum >= TIMER_INVALID_NUM || st_config->u8_timerClock >= TIMER_INVALID_CLOCK)
	{
		l_ret = TIMER_E_NOT_OK;
     8ae:	83 e0       	ldi	r24, 0x03	; 3
     8b0:	08 95       	ret
     8b2:	83 e0       	ldi	r24, 0x03	; 3
     8b4:	08 95       	ret
     8b6:	83 e0       	ldi	r24, 0x03	; 3
	else
	{
		l_ret = TIMER_start(st_config);
	}
	return l_ret;
}
     8b8:	08 95       	ret

000008ba <TIMER_Manager_stop>:
u8_en_timerErrorsType TIMER_Manager_stop (u8_en_timerNumberType u8_en_timerNum)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if( u8_en_timerNum >= TIMER_INVALID_NUM )
     8ba:	83 30       	cpi	r24, 0x03	; 3
     8bc:	18 f4       	brcc	.+6      	; 0x8c4 <TIMER_Manager_stop+0xa>
	{
		l_ret = TIMER_E_NOT_OK;
	}
	else
	{
		l_ret = TIMER_stop(u8_en_timerNum);
     8be:	0e 94 b0 09 	call	0x1360	; 0x1360 <TIMER_stop>
     8c2:	08 95       	ret
u8_en_timerErrorsType TIMER_Manager_stop (u8_en_timerNumberType u8_en_timerNum)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if( u8_en_timerNum >= TIMER_INVALID_NUM )
	{
		l_ret = TIMER_E_NOT_OK;
     8c4:	83 e0       	ldi	r24, 0x03	; 3
	else
	{
		l_ret = TIMER_stop(u8_en_timerNum);
	}
	return l_ret;
}
     8c6:	08 95       	ret

000008c8 <TIMER_Manager_reset>:
u8_en_timerErrorsType TIMER_Manager_reset (st_timerConfigType* st_config)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if(NULL==st_config || st_config->u8_timerNum >= TIMER_INVALID_NUM || st_config->u8_timerClock >= TIMER_INVALID_CLOCK)
     8c8:	00 97       	sbiw	r24, 0x00	; 0
     8ca:	51 f0       	breq	.+20     	; 0x8e0 <TIMER_Manager_reset+0x18>
     8cc:	fc 01       	movw	r30, r24
     8ce:	20 81       	ld	r18, Z
     8d0:	23 30       	cpi	r18, 0x03	; 3
     8d2:	40 f4       	brcc	.+16     	; 0x8e4 <TIMER_Manager_reset+0x1c>
     8d4:	21 81       	ldd	r18, Z+1	; 0x01
     8d6:	2a 30       	cpi	r18, 0x0A	; 10
     8d8:	38 f4       	brcc	.+14     	; 0x8e8 <TIMER_Manager_reset+0x20>
	{
		l_ret = TIMER_E_NOT_OK;
	}
	else
	{
		l_ret = TIMER_reset(st_config);
     8da:	0e 94 dd 09 	call	0x13ba	; 0x13ba <TIMER_reset>
     8de:	08 95       	ret
u8_en_timerErrorsType TIMER_Manager_reset (st_timerConfigType* st_config)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if(NULL==st_config || st_config->u8_timerNum >= TIMER_INVALID_NUM || st_config->u8_timerClock >= TIMER_INVALID_CLOCK)
	{
		l_ret = TIMER_E_NOT_OK;
     8e0:	83 e0       	ldi	r24, 0x03	; 3
     8e2:	08 95       	ret
     8e4:	83 e0       	ldi	r24, 0x03	; 3
     8e6:	08 95       	ret
     8e8:	83 e0       	ldi	r24, 0x03	; 3
	else
	{
		l_ret = TIMER_reset(st_config);
	}
	return l_ret;
     8ea:	08 95       	ret

000008ec <HULTRASONIC_vidTrigger>:
     8ec:	41 e0       	ldi	r20, 0x01	; 1
     8ee:	63 e0       	ldi	r22, 0x03	; 3
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8f6:	8a e1       	ldi	r24, 0x1A	; 26
     8f8:	8a 95       	dec	r24
     8fa:	f1 f7       	brne	.-4      	; 0x8f8 <HULTRASONIC_vidTrigger+0xc>
     8fc:	00 c0       	rjmp	.+0      	; 0x8fe <HULTRASONIC_vidTrigger+0x12>
     8fe:	40 e0       	ldi	r20, 0x00	; 0
     900:	63 e0       	ldi	r22, 0x03	; 3
     902:	81 e0       	ldi	r24, 0x01	; 1
     904:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     908:	08 95       	ret

0000090a <HULTRASONIC_vidTimerCBF>:
     90a:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <g_v_u16_ovfCounts>
     90e:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <g_v_u16_ovfCounts+0x1>
     912:	a0 91 d7 00 	lds	r26, 0x00D7	; 0x8000d7 <g_v_u16_ovfCounts+0x2>
     916:	b0 91 d8 00 	lds	r27, 0x00D8	; 0x8000d8 <g_v_u16_ovfCounts+0x3>
     91a:	01 96       	adiw	r24, 0x01	; 1
     91c:	a1 1d       	adc	r26, r1
     91e:	b1 1d       	adc	r27, r1
     920:	80 93 d5 00 	sts	0x00D5, r24	; 0x8000d5 <g_v_u16_ovfCounts>
     924:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <g_v_u16_ovfCounts+0x1>
     928:	a0 93 d7 00 	sts	0x00D7, r26	; 0x8000d7 <g_v_u16_ovfCounts+0x2>
     92c:	b0 93 d8 00 	sts	0x00D8, r27	; 0x8000d8 <g_v_u16_ovfCounts+0x3>
     930:	08 95       	ret

00000932 <HULTRASONIC_vidSigCalc>:
     932:	80 91 d4 00 	lds	r24, 0x00D4	; 0x8000d4 <g_v_u8_flag>
     936:	81 11       	cpse	r24, r1
     938:	14 c0       	rjmp	.+40     	; 0x962 <HULTRASONIC_vidSigCalc+0x30>
     93a:	0e 94 8a 0a 	call	0x1514	; 0x1514 <MTIMER_vidResetTCNT>
     93e:	62 e0       	ldi	r22, 0x02	; 2
     940:	82 e0       	ldi	r24, 0x02	; 2
     942:	0e 94 69 06 	call	0xcd2	; 0xcd2 <vidExtInt_init>
     946:	81 e0       	ldi	r24, 0x01	; 1
     948:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <g_v_u8_flag>
     94c:	10 92 d5 00 	sts	0x00D5, r1	; 0x8000d5 <g_v_u16_ovfCounts>
     950:	10 92 d6 00 	sts	0x00D6, r1	; 0x8000d6 <g_v_u16_ovfCounts+0x1>
     954:	10 92 d7 00 	sts	0x00D7, r1	; 0x8000d7 <g_v_u16_ovfCounts+0x2>
     958:	10 92 d8 00 	sts	0x00D8, r1	; 0x8000d8 <g_v_u16_ovfCounts+0x3>
     95c:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <vidTimer2_start>
     960:	08 95       	ret
     962:	80 91 d4 00 	lds	r24, 0x00D4	; 0x8000d4 <g_v_u8_flag>
     966:	81 30       	cpi	r24, 0x01	; 1
     968:	09 f0       	breq	.+2      	; 0x96c <HULTRASONIC_vidSigCalc+0x3a>
     96a:	56 c0       	rjmp	.+172    	; 0xa18 <HULTRASONIC_vidSigCalc+0xe6>
     96c:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <vidTimer2_stop>
     970:	0e 94 8c 0a 	call	0x1518	; 0x1518 <MTIMER_u8GetTCNT>
     974:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <g_v_u8_cap>
     978:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <g_v_u16_ovfCounts>
     97c:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <g_v_u16_ovfCounts+0x1>
     980:	a0 91 d7 00 	lds	r26, 0x00D7	; 0x8000d7 <g_v_u16_ovfCounts+0x2>
     984:	b0 91 d8 00 	lds	r27, 0x00D8	; 0x8000d8 <g_v_u16_ovfCounts+0x3>
     988:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <g_v_u16_ovf>
     98c:	90 93 ef 00 	sts	0x00EF, r25	; 0x8000ef <g_v_u16_ovf+0x1>
     990:	a0 93 f0 00 	sts	0x00F0, r26	; 0x8000f0 <g_v_u16_ovf+0x2>
     994:	b0 93 f1 00 	sts	0x00F1, r27	; 0x8000f1 <g_v_u16_ovf+0x3>
     998:	20 91 ed 00 	lds	r18, 0x00ED	; 0x8000ed <g_v_u8_cap>
     99c:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <g_v_u16_ovf>
     9a0:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <g_v_u16_ovf+0x1>
     9a4:	a0 91 f0 00 	lds	r26, 0x00F0	; 0x8000f0 <g_v_u16_ovf+0x2>
     9a8:	b0 91 f1 00 	lds	r27, 0x00F1	; 0x8000f1 <g_v_u16_ovf+0x3>
     9ac:	ba 2f       	mov	r27, r26
     9ae:	a9 2f       	mov	r26, r25
     9b0:	98 2f       	mov	r25, r24
     9b2:	88 27       	eor	r24, r24
     9b4:	bc 01       	movw	r22, r24
     9b6:	cd 01       	movw	r24, r26
     9b8:	62 0f       	add	r22, r18
     9ba:	71 1d       	adc	r23, r1
     9bc:	81 1d       	adc	r24, r1
     9be:	91 1d       	adc	r25, r1
     9c0:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <__floatunsisf>
     9c4:	2d ec       	ldi	r18, 0xCD	; 205
     9c6:	3c e3       	ldi	r19, 0x3C	; 60
     9c8:	49 e6       	ldi	r20, 0x69	; 105
     9ca:	54 e4       	ldi	r21, 0x44	; 68
     9cc:	0e 94 38 0b 	call	0x1670	; 0x1670 <__divsf3>
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	30 e0       	ldi	r19, 0x00	; 0
     9d4:	40 e0       	ldi	r20, 0x00	; 0
     9d6:	50 e4       	ldi	r21, 0x40	; 64
     9d8:	0e 94 c6 0a 	call	0x158c	; 0x158c <__subsf3>
     9dc:	60 93 d0 00 	sts	0x00D0, r22	; 0x8000d0 <global_f64distance>
     9e0:	70 93 d1 00 	sts	0x00D1, r23	; 0x8000d1 <global_f64distance+0x1>
     9e4:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <global_f64distance+0x2>
     9e8:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <global_f64distance+0x3>
     9ec:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <g_v_u16_ovf>
     9f0:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <g_v_u16_ovf+0x1>
     9f4:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <g_v_u16_ovf+0x2>
     9f8:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <g_v_u16_ovf+0x3>
     9fc:	10 92 d5 00 	sts	0x00D5, r1	; 0x8000d5 <g_v_u16_ovfCounts>
     a00:	10 92 d6 00 	sts	0x00D6, r1	; 0x8000d6 <g_v_u16_ovfCounts+0x1>
     a04:	10 92 d7 00 	sts	0x00D7, r1	; 0x8000d7 <g_v_u16_ovfCounts+0x2>
     a08:	10 92 d8 00 	sts	0x00D8, r1	; 0x8000d8 <g_v_u16_ovfCounts+0x3>
     a0c:	10 92 d4 00 	sts	0x00D4, r1	; 0x8000d4 <g_v_u8_flag>
     a10:	63 e0       	ldi	r22, 0x03	; 3
     a12:	82 e0       	ldi	r24, 0x02	; 2
     a14:	0e 94 69 06 	call	0xcd2	; 0xcd2 <vidExtInt_init>
     a18:	08 95       	ret

00000a1a <HULTRASONIC_vidInit>:
     a1a:	41 e0       	ldi	r20, 0x01	; 1
     a1c:	63 e0       	ldi	r22, 0x03	; 3
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     a24:	40 e0       	ldi	r20, 0x00	; 0
     a26:	62 e0       	ldi	r22, 0x02	; 2
     a28:	81 e0       	ldi	r24, 0x01	; 1
     a2a:	0e 94 49 05 	call	0xa92	; 0xa92 <DIO_init>
     a2e:	40 e0       	ldi	r20, 0x00	; 0
     a30:	62 e0       	ldi	r22, 0x02	; 2
     a32:	81 e0       	ldi	r24, 0x01	; 1
     a34:	0e 94 83 05 	call	0xb06	; 0xb06 <DIO_writePIN>
     a38:	63 e0       	ldi	r22, 0x03	; 3
     a3a:	82 e0       	ldi	r24, 0x02	; 2
     a3c:	0e 94 69 06 	call	0xcd2	; 0xcd2 <vidExtInt_init>
     a40:	80 e0       	ldi	r24, 0x00	; 0
     a42:	0e 94 22 0a 	call	0x1444	; 0x1444 <enuTimer2_init>
     a46:	81 e0       	ldi	r24, 0x01	; 1
     a48:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <u8Timer2_setPrescallar>
     a4c:	08 95       	ret

00000a4e <HULTRASONIC_vidInterruptEnable>:
     a4e:	0e 94 65 0a 	call	0x14ca	; 0x14ca <vidTimer2_OvfIrqEnable>
     a52:	0e 94 ff 06 	call	0xdfe	; 0xdfe <MEXTINT2_vidEnableInterrupt>
     a56:	0e 94 8e 0a 	call	0x151c	; 0x151c <MTIMER_vidEnableGlobalInterrupt>
     a5a:	08 95       	ret

00000a5c <HULTRASONIC_vidInterruptDisable>:
     a5c:	0e 94 6d 0a 	call	0x14da	; 0x14da <vidTimer2_OvfIrqDisable>
     a60:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <MEXTINT2_vidDisableInterrupt>
     a64:	08 95       	ret

00000a66 <HULTRASONIC_u8Read>:
     a66:	0e 94 76 04 	call	0x8ec	; 0x8ec <HULTRASONIC_vidTrigger>
     a6a:	60 91 d0 00 	lds	r22, 0x00D0	; 0x8000d0 <global_f64distance>
     a6e:	70 91 d1 00 	lds	r23, 0x00D1	; 0x8000d1 <global_f64distance+0x1>
     a72:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <global_f64distance+0x2>
     a76:	90 91 d3 00 	lds	r25, 0x00D3	; 0x8000d3 <global_f64distance+0x3>
     a7a:	08 95       	ret

00000a7c <HULTRASONIC_vidCBF_TIM>:
     a7c:	0e 94 83 0a 	call	0x1506	; 0x1506 <vidTimer2_setcbf_OVF>
     a80:	08 95       	ret

00000a82 <HULTRASONIC_vidCBF_INT>:
     a82:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <MEXTINT_vidCallBackFunc>
     a86:	08 95       	ret

00000a88 <main>:

#include "APP/app.h"

int main(void)
{
    APP_vidInit();
     a88:	0e 94 76 00 	call	0xec	; 0xec <APP_vidInit>
    /* Replace with your application code */
    while (1) 
    {
        APP_vidStart();
     a8c:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <APP_vidStart>
     a90:	fd cf       	rjmp	.-6      	; 0xa8c <main+0x4>

00000a92 <DIO_init>:
     a92:	68 30       	cpi	r22, 0x08	; 8
     a94:	a0 f5       	brcc	.+104    	; 0xafe <DIO_init+0x6c>
     a96:	81 11       	cpse	r24, r1
     a98:	0b c0       	rjmp	.+22     	; 0xab0 <DIO_init+0x1e>
     a9a:	8a b3       	in	r24, 0x1a	; 26
     a9c:	50 e0       	ldi	r21, 0x00	; 0
     a9e:	02 c0       	rjmp	.+4      	; 0xaa4 <DIO_init+0x12>
     aa0:	44 0f       	add	r20, r20
     aa2:	55 1f       	adc	r21, r21
     aa4:	6a 95       	dec	r22
     aa6:	e2 f7       	brpl	.-8      	; 0xaa0 <DIO_init+0xe>
     aa8:	48 2b       	or	r20, r24
     aaa:	4a bb       	out	0x1a, r20	; 26
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	08 95       	ret
     ab0:	81 30       	cpi	r24, 0x01	; 1
     ab2:	59 f4       	brne	.+22     	; 0xaca <DIO_init+0x38>
     ab4:	87 b3       	in	r24, 0x17	; 23
     ab6:	50 e0       	ldi	r21, 0x00	; 0
     ab8:	02 c0       	rjmp	.+4      	; 0xabe <DIO_init+0x2c>
     aba:	44 0f       	add	r20, r20
     abc:	55 1f       	adc	r21, r21
     abe:	6a 95       	dec	r22
     ac0:	e2 f7       	brpl	.-8      	; 0xaba <DIO_init+0x28>
     ac2:	48 2b       	or	r20, r24
     ac4:	47 bb       	out	0x17, r20	; 23
     ac6:	80 e0       	ldi	r24, 0x00	; 0
     ac8:	08 95       	ret
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	59 f4       	brne	.+22     	; 0xae4 <DIO_init+0x52>
     ace:	84 b3       	in	r24, 0x14	; 20
     ad0:	50 e0       	ldi	r21, 0x00	; 0
     ad2:	02 c0       	rjmp	.+4      	; 0xad8 <DIO_init+0x46>
     ad4:	44 0f       	add	r20, r20
     ad6:	55 1f       	adc	r21, r21
     ad8:	6a 95       	dec	r22
     ada:	e2 f7       	brpl	.-8      	; 0xad4 <DIO_init+0x42>
     adc:	48 2b       	or	r20, r24
     ade:	44 bb       	out	0x14, r20	; 20
     ae0:	80 e0       	ldi	r24, 0x00	; 0
     ae2:	08 95       	ret
     ae4:	83 30       	cpi	r24, 0x03	; 3
     ae6:	69 f4       	brne	.+26     	; 0xb02 <DIO_init+0x70>
     ae8:	81 b3       	in	r24, 0x11	; 17
     aea:	50 e0       	ldi	r21, 0x00	; 0
     aec:	02 c0       	rjmp	.+4      	; 0xaf2 <DIO_init+0x60>
     aee:	44 0f       	add	r20, r20
     af0:	55 1f       	adc	r21, r21
     af2:	6a 95       	dec	r22
     af4:	e2 f7       	brpl	.-8      	; 0xaee <DIO_init+0x5c>
     af6:	48 2b       	or	r20, r24
     af8:	41 bb       	out	0x11, r20	; 17
     afa:	80 e0       	ldi	r24, 0x00	; 0
     afc:	08 95       	ret
     afe:	81 e0       	ldi	r24, 0x01	; 1
     b00:	08 95       	ret
     b02:	82 e0       	ldi	r24, 0x02	; 2
     b04:	08 95       	ret

00000b06 <DIO_writePIN>:
     b06:	68 30       	cpi	r22, 0x08	; 8
     b08:	08 f0       	brcs	.+2      	; 0xb0c <DIO_writePIN+0x6>
     b0a:	74 c0       	rjmp	.+232    	; 0xbf4 <DIO_writePIN+0xee>
     b0c:	81 11       	cpse	r24, r1
     b0e:	1b c0       	rjmp	.+54     	; 0xb46 <DIO_writePIN+0x40>
     b10:	41 30       	cpi	r20, 0x01	; 1
     b12:	61 f4       	brne	.+24     	; 0xb2c <DIO_writePIN+0x26>
     b14:	2b b3       	in	r18, 0x1b	; 27
     b16:	81 e0       	ldi	r24, 0x01	; 1
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	02 c0       	rjmp	.+4      	; 0xb20 <DIO_writePIN+0x1a>
     b1c:	88 0f       	add	r24, r24
     b1e:	99 1f       	adc	r25, r25
     b20:	6a 95       	dec	r22
     b22:	e2 f7       	brpl	.-8      	; 0xb1c <DIO_writePIN+0x16>
     b24:	82 2b       	or	r24, r18
     b26:	8b bb       	out	0x1b, r24	; 27
     b28:	80 e0       	ldi	r24, 0x00	; 0
     b2a:	08 95       	ret
     b2c:	2b b3       	in	r18, 0x1b	; 27
     b2e:	81 e0       	ldi	r24, 0x01	; 1
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	02 c0       	rjmp	.+4      	; 0xb38 <DIO_writePIN+0x32>
     b34:	88 0f       	add	r24, r24
     b36:	99 1f       	adc	r25, r25
     b38:	6a 95       	dec	r22
     b3a:	e2 f7       	brpl	.-8      	; 0xb34 <DIO_writePIN+0x2e>
     b3c:	80 95       	com	r24
     b3e:	82 23       	and	r24, r18
     b40:	8b bb       	out	0x1b, r24	; 27
     b42:	80 e0       	ldi	r24, 0x00	; 0
     b44:	08 95       	ret
     b46:	81 30       	cpi	r24, 0x01	; 1
     b48:	d9 f4       	brne	.+54     	; 0xb80 <DIO_writePIN+0x7a>
     b4a:	41 30       	cpi	r20, 0x01	; 1
     b4c:	61 f4       	brne	.+24     	; 0xb66 <DIO_writePIN+0x60>
     b4e:	28 b3       	in	r18, 0x18	; 24
     b50:	81 e0       	ldi	r24, 0x01	; 1
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	02 c0       	rjmp	.+4      	; 0xb5a <DIO_writePIN+0x54>
     b56:	88 0f       	add	r24, r24
     b58:	99 1f       	adc	r25, r25
     b5a:	6a 95       	dec	r22
     b5c:	e2 f7       	brpl	.-8      	; 0xb56 <DIO_writePIN+0x50>
     b5e:	82 2b       	or	r24, r18
     b60:	88 bb       	out	0x18, r24	; 24
     b62:	80 e0       	ldi	r24, 0x00	; 0
     b64:	08 95       	ret
     b66:	28 b3       	in	r18, 0x18	; 24
     b68:	81 e0       	ldi	r24, 0x01	; 1
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	02 c0       	rjmp	.+4      	; 0xb72 <DIO_writePIN+0x6c>
     b6e:	88 0f       	add	r24, r24
     b70:	99 1f       	adc	r25, r25
     b72:	6a 95       	dec	r22
     b74:	e2 f7       	brpl	.-8      	; 0xb6e <DIO_writePIN+0x68>
     b76:	80 95       	com	r24
     b78:	82 23       	and	r24, r18
     b7a:	88 bb       	out	0x18, r24	; 24
     b7c:	80 e0       	ldi	r24, 0x00	; 0
     b7e:	08 95       	ret
     b80:	82 30       	cpi	r24, 0x02	; 2
     b82:	d9 f4       	brne	.+54     	; 0xbba <DIO_writePIN+0xb4>
     b84:	41 30       	cpi	r20, 0x01	; 1
     b86:	61 f4       	brne	.+24     	; 0xba0 <DIO_writePIN+0x9a>
     b88:	25 b3       	in	r18, 0x15	; 21
     b8a:	81 e0       	ldi	r24, 0x01	; 1
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	02 c0       	rjmp	.+4      	; 0xb94 <DIO_writePIN+0x8e>
     b90:	88 0f       	add	r24, r24
     b92:	99 1f       	adc	r25, r25
     b94:	6a 95       	dec	r22
     b96:	e2 f7       	brpl	.-8      	; 0xb90 <DIO_writePIN+0x8a>
     b98:	82 2b       	or	r24, r18
     b9a:	85 bb       	out	0x15, r24	; 21
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	08 95       	ret
     ba0:	25 b3       	in	r18, 0x15	; 21
     ba2:	81 e0       	ldi	r24, 0x01	; 1
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	02 c0       	rjmp	.+4      	; 0xbac <DIO_writePIN+0xa6>
     ba8:	88 0f       	add	r24, r24
     baa:	99 1f       	adc	r25, r25
     bac:	6a 95       	dec	r22
     bae:	e2 f7       	brpl	.-8      	; 0xba8 <DIO_writePIN+0xa2>
     bb0:	80 95       	com	r24
     bb2:	82 23       	and	r24, r18
     bb4:	85 bb       	out	0x15, r24	; 21
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	08 95       	ret
     bba:	83 30       	cpi	r24, 0x03	; 3
     bbc:	e9 f4       	brne	.+58     	; 0xbf8 <DIO_writePIN+0xf2>
     bbe:	41 30       	cpi	r20, 0x01	; 1
     bc0:	61 f4       	brne	.+24     	; 0xbda <DIO_writePIN+0xd4>
     bc2:	22 b3       	in	r18, 0x12	; 18
     bc4:	81 e0       	ldi	r24, 0x01	; 1
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	02 c0       	rjmp	.+4      	; 0xbce <DIO_writePIN+0xc8>
     bca:	88 0f       	add	r24, r24
     bcc:	99 1f       	adc	r25, r25
     bce:	6a 95       	dec	r22
     bd0:	e2 f7       	brpl	.-8      	; 0xbca <DIO_writePIN+0xc4>
     bd2:	82 2b       	or	r24, r18
     bd4:	82 bb       	out	0x12, r24	; 18
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	08 95       	ret
     bda:	22 b3       	in	r18, 0x12	; 18
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	02 c0       	rjmp	.+4      	; 0xbe6 <DIO_writePIN+0xe0>
     be2:	88 0f       	add	r24, r24
     be4:	99 1f       	adc	r25, r25
     be6:	6a 95       	dec	r22
     be8:	e2 f7       	brpl	.-8      	; 0xbe2 <DIO_writePIN+0xdc>
     bea:	80 95       	com	r24
     bec:	82 23       	and	r24, r18
     bee:	82 bb       	out	0x12, r24	; 18
     bf0:	80 e0       	ldi	r24, 0x00	; 0
     bf2:	08 95       	ret
     bf4:	81 e0       	ldi	r24, 0x01	; 1
     bf6:	08 95       	ret
     bf8:	82 e0       	ldi	r24, 0x02	; 2
     bfa:	08 95       	ret

00000bfc <DIO_readPIN>:
     bfc:	68 30       	cpi	r22, 0x08	; 8
     bfe:	08 f0       	brcs	.+2      	; 0xc02 <DIO_readPIN+0x6>
     c00:	64 c0       	rjmp	.+200    	; 0xcca <DIO_readPIN+0xce>
     c02:	81 11       	cpse	r24, r1
     c04:	17 c0       	rjmp	.+46     	; 0xc34 <DIO_readPIN+0x38>
     c06:	79 b3       	in	r23, 0x19	; 25
     c08:	81 e0       	ldi	r24, 0x01	; 1
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	9c 01       	movw	r18, r24
     c0e:	06 2e       	mov	r0, r22
     c10:	02 c0       	rjmp	.+4      	; 0xc16 <DIO_readPIN+0x1a>
     c12:	22 0f       	add	r18, r18
     c14:	33 1f       	adc	r19, r19
     c16:	0a 94       	dec	r0
     c18:	e2 f7       	brpl	.-8      	; 0xc12 <DIO_readPIN+0x16>
     c1a:	87 2f       	mov	r24, r23
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	82 23       	and	r24, r18
     c20:	93 23       	and	r25, r19
     c22:	02 c0       	rjmp	.+4      	; 0xc28 <DIO_readPIN+0x2c>
     c24:	96 95       	lsr	r25
     c26:	87 95       	ror	r24
     c28:	6a 95       	dec	r22
     c2a:	e2 f7       	brpl	.-8      	; 0xc24 <DIO_readPIN+0x28>
     c2c:	fa 01       	movw	r30, r20
     c2e:	80 83       	st	Z, r24
     c30:	80 e0       	ldi	r24, 0x00	; 0
     c32:	08 95       	ret
     c34:	81 30       	cpi	r24, 0x01	; 1
     c36:	b9 f4       	brne	.+46     	; 0xc66 <DIO_readPIN+0x6a>
     c38:	76 b3       	in	r23, 0x16	; 22
     c3a:	81 e0       	ldi	r24, 0x01	; 1
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	9c 01       	movw	r18, r24
     c40:	06 2e       	mov	r0, r22
     c42:	02 c0       	rjmp	.+4      	; 0xc48 <DIO_readPIN+0x4c>
     c44:	22 0f       	add	r18, r18
     c46:	33 1f       	adc	r19, r19
     c48:	0a 94       	dec	r0
     c4a:	e2 f7       	brpl	.-8      	; 0xc44 <DIO_readPIN+0x48>
     c4c:	87 2f       	mov	r24, r23
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	82 23       	and	r24, r18
     c52:	93 23       	and	r25, r19
     c54:	02 c0       	rjmp	.+4      	; 0xc5a <DIO_readPIN+0x5e>
     c56:	96 95       	lsr	r25
     c58:	87 95       	ror	r24
     c5a:	6a 95       	dec	r22
     c5c:	e2 f7       	brpl	.-8      	; 0xc56 <DIO_readPIN+0x5a>
     c5e:	fa 01       	movw	r30, r20
     c60:	80 83       	st	Z, r24
     c62:	80 e0       	ldi	r24, 0x00	; 0
     c64:	08 95       	ret
     c66:	82 30       	cpi	r24, 0x02	; 2
     c68:	b9 f4       	brne	.+46     	; 0xc98 <DIO_readPIN+0x9c>
     c6a:	73 b3       	in	r23, 0x13	; 19
     c6c:	81 e0       	ldi	r24, 0x01	; 1
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	9c 01       	movw	r18, r24
     c72:	06 2e       	mov	r0, r22
     c74:	02 c0       	rjmp	.+4      	; 0xc7a <DIO_readPIN+0x7e>
     c76:	22 0f       	add	r18, r18
     c78:	33 1f       	adc	r19, r19
     c7a:	0a 94       	dec	r0
     c7c:	e2 f7       	brpl	.-8      	; 0xc76 <DIO_readPIN+0x7a>
     c7e:	87 2f       	mov	r24, r23
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	82 23       	and	r24, r18
     c84:	93 23       	and	r25, r19
     c86:	02 c0       	rjmp	.+4      	; 0xc8c <DIO_readPIN+0x90>
     c88:	96 95       	lsr	r25
     c8a:	87 95       	ror	r24
     c8c:	6a 95       	dec	r22
     c8e:	e2 f7       	brpl	.-8      	; 0xc88 <DIO_readPIN+0x8c>
     c90:	fa 01       	movw	r30, r20
     c92:	80 83       	st	Z, r24
     c94:	80 e0       	ldi	r24, 0x00	; 0
     c96:	08 95       	ret
     c98:	83 30       	cpi	r24, 0x03	; 3
     c9a:	c9 f4       	brne	.+50     	; 0xcce <DIO_readPIN+0xd2>
     c9c:	70 b3       	in	r23, 0x10	; 16
     c9e:	81 e0       	ldi	r24, 0x01	; 1
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	9c 01       	movw	r18, r24
     ca4:	06 2e       	mov	r0, r22
     ca6:	02 c0       	rjmp	.+4      	; 0xcac <DIO_readPIN+0xb0>
     ca8:	22 0f       	add	r18, r18
     caa:	33 1f       	adc	r19, r19
     cac:	0a 94       	dec	r0
     cae:	e2 f7       	brpl	.-8      	; 0xca8 <DIO_readPIN+0xac>
     cb0:	87 2f       	mov	r24, r23
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	82 23       	and	r24, r18
     cb6:	93 23       	and	r25, r19
     cb8:	02 c0       	rjmp	.+4      	; 0xcbe <DIO_readPIN+0xc2>
     cba:	96 95       	lsr	r25
     cbc:	87 95       	ror	r24
     cbe:	6a 95       	dec	r22
     cc0:	e2 f7       	brpl	.-8      	; 0xcba <DIO_readPIN+0xbe>
     cc2:	fa 01       	movw	r30, r20
     cc4:	80 83       	st	Z, r24
     cc6:	80 e0       	ldi	r24, 0x00	; 0
     cc8:	08 95       	ret
     cca:	81 e0       	ldi	r24, 0x01	; 1
     ccc:	08 95       	ret
     cce:	82 e0       	ldi	r24, 0x02	; 2
     cd0:	08 95       	ret

00000cd2 <vidExtInt_init>:
     cd2:	83 30       	cpi	r24, 0x03	; 3
     cd4:	08 f0       	brcs	.+2      	; 0xcd8 <vidExtInt_init+0x6>
     cd6:	70 c0       	rjmp	.+224    	; 0xdb8 <vidExtInt_init+0xe6>
     cd8:	64 30       	cpi	r22, 0x04	; 4
     cda:	08 f0       	brcs	.+2      	; 0xcde <vidExtInt_init+0xc>
     cdc:	6f c0       	rjmp	.+222    	; 0xdbc <vidExtInt_init+0xea>
     cde:	81 11       	cpse	r24, r1
     ce0:	28 c0       	rjmp	.+80     	; 0xd32 <vidExtInt_init+0x60>
     ce2:	61 30       	cpi	r22, 0x01	; 1
     ce4:	71 f0       	breq	.+28     	; 0xd02 <vidExtInt_init+0x30>
     ce6:	28 f0       	brcs	.+10     	; 0xcf2 <vidExtInt_init+0x20>
     ce8:	62 30       	cpi	r22, 0x02	; 2
     cea:	99 f0       	breq	.+38     	; 0xd12 <vidExtInt_init+0x40>
     cec:	63 30       	cpi	r22, 0x03	; 3
     cee:	c9 f0       	breq	.+50     	; 0xd22 <vidExtInt_init+0x50>
     cf0:	67 c0       	rjmp	.+206    	; 0xdc0 <vidExtInt_init+0xee>
     cf2:	85 b7       	in	r24, 0x35	; 53
     cf4:	8e 7f       	andi	r24, 0xFE	; 254
     cf6:	85 bf       	out	0x35, r24	; 53
     cf8:	85 b7       	in	r24, 0x35	; 53
     cfa:	8d 7f       	andi	r24, 0xFD	; 253
     cfc:	85 bf       	out	0x35, r24	; 53
     cfe:	81 e0       	ldi	r24, 0x01	; 1
     d00:	08 95       	ret
     d02:	85 b7       	in	r24, 0x35	; 53
     d04:	81 60       	ori	r24, 0x01	; 1
     d06:	85 bf       	out	0x35, r24	; 53
     d08:	85 b7       	in	r24, 0x35	; 53
     d0a:	8d 7f       	andi	r24, 0xFD	; 253
     d0c:	85 bf       	out	0x35, r24	; 53
     d0e:	81 e0       	ldi	r24, 0x01	; 1
     d10:	08 95       	ret
     d12:	85 b7       	in	r24, 0x35	; 53
     d14:	8e 7f       	andi	r24, 0xFE	; 254
     d16:	85 bf       	out	0x35, r24	; 53
     d18:	85 b7       	in	r24, 0x35	; 53
     d1a:	82 60       	ori	r24, 0x02	; 2
     d1c:	85 bf       	out	0x35, r24	; 53
     d1e:	81 e0       	ldi	r24, 0x01	; 1
     d20:	08 95       	ret
     d22:	85 b7       	in	r24, 0x35	; 53
     d24:	81 60       	ori	r24, 0x01	; 1
     d26:	85 bf       	out	0x35, r24	; 53
     d28:	85 b7       	in	r24, 0x35	; 53
     d2a:	82 60       	ori	r24, 0x02	; 2
     d2c:	85 bf       	out	0x35, r24	; 53
     d2e:	81 e0       	ldi	r24, 0x01	; 1
     d30:	08 95       	ret
     d32:	81 30       	cpi	r24, 0x01	; 1
     d34:	81 f5       	brne	.+96     	; 0xd96 <vidExtInt_init+0xc4>
     d36:	61 30       	cpi	r22, 0x01	; 1
     d38:	71 f0       	breq	.+28     	; 0xd56 <vidExtInt_init+0x84>
     d3a:	28 f0       	brcs	.+10     	; 0xd46 <vidExtInt_init+0x74>
     d3c:	62 30       	cpi	r22, 0x02	; 2
     d3e:	99 f0       	breq	.+38     	; 0xd66 <vidExtInt_init+0x94>
     d40:	63 30       	cpi	r22, 0x03	; 3
     d42:	c9 f0       	breq	.+50     	; 0xd76 <vidExtInt_init+0xa4>
     d44:	20 c0       	rjmp	.+64     	; 0xd86 <vidExtInt_init+0xb4>
     d46:	85 b7       	in	r24, 0x35	; 53
     d48:	8b 7f       	andi	r24, 0xFB	; 251
     d4a:	85 bf       	out	0x35, r24	; 53
     d4c:	85 b7       	in	r24, 0x35	; 53
     d4e:	87 7f       	andi	r24, 0xF7	; 247
     d50:	85 bf       	out	0x35, r24	; 53
     d52:	81 e0       	ldi	r24, 0x01	; 1
     d54:	19 c0       	rjmp	.+50     	; 0xd88 <vidExtInt_init+0xb6>
     d56:	85 b7       	in	r24, 0x35	; 53
     d58:	84 60       	ori	r24, 0x04	; 4
     d5a:	85 bf       	out	0x35, r24	; 53
     d5c:	85 b7       	in	r24, 0x35	; 53
     d5e:	87 7f       	andi	r24, 0xF7	; 247
     d60:	85 bf       	out	0x35, r24	; 53
     d62:	81 e0       	ldi	r24, 0x01	; 1
     d64:	11 c0       	rjmp	.+34     	; 0xd88 <vidExtInt_init+0xb6>
     d66:	85 b7       	in	r24, 0x35	; 53
     d68:	8b 7f       	andi	r24, 0xFB	; 251
     d6a:	85 bf       	out	0x35, r24	; 53
     d6c:	85 b7       	in	r24, 0x35	; 53
     d6e:	88 60       	ori	r24, 0x08	; 8
     d70:	85 bf       	out	0x35, r24	; 53
     d72:	81 e0       	ldi	r24, 0x01	; 1
     d74:	09 c0       	rjmp	.+18     	; 0xd88 <vidExtInt_init+0xb6>
     d76:	85 b7       	in	r24, 0x35	; 53
     d78:	84 60       	ori	r24, 0x04	; 4
     d7a:	85 bf       	out	0x35, r24	; 53
     d7c:	85 b7       	in	r24, 0x35	; 53
     d7e:	88 60       	ori	r24, 0x08	; 8
     d80:	85 bf       	out	0x35, r24	; 53
     d82:	81 e0       	ldi	r24, 0x01	; 1
     d84:	01 c0       	rjmp	.+2      	; 0xd88 <vidExtInt_init+0xb6>
     d86:	80 e0       	ldi	r24, 0x00	; 0
     d88:	9b b7       	in	r25, 0x3b	; 59
     d8a:	90 68       	ori	r25, 0x80	; 128
     d8c:	9b bf       	out	0x3b, r25	; 59
     d8e:	9a b7       	in	r25, 0x3a	; 58
     d90:	90 68       	ori	r25, 0x80	; 128
     d92:	9a bf       	out	0x3a, r25	; 58
     d94:	08 95       	ret
     d96:	82 30       	cpi	r24, 0x02	; 2
     d98:	a9 f4       	brne	.+42     	; 0xdc4 <vidExtInt_init+0xf2>
     d9a:	62 30       	cpi	r22, 0x02	; 2
     d9c:	19 f0       	breq	.+6      	; 0xda4 <vidExtInt_init+0xd2>
     d9e:	63 30       	cpi	r22, 0x03	; 3
     da0:	31 f0       	breq	.+12     	; 0xdae <vidExtInt_init+0xdc>
     da2:	12 c0       	rjmp	.+36     	; 0xdc8 <vidExtInt_init+0xf6>
     da4:	84 b7       	in	r24, 0x34	; 52
     da6:	8f 7b       	andi	r24, 0xBF	; 191
     da8:	84 bf       	out	0x34, r24	; 52
     daa:	81 e0       	ldi	r24, 0x01	; 1
     dac:	08 95       	ret
     dae:	84 b7       	in	r24, 0x34	; 52
     db0:	80 64       	ori	r24, 0x40	; 64
     db2:	84 bf       	out	0x34, r24	; 52
     db4:	81 e0       	ldi	r24, 0x01	; 1
     db6:	08 95       	ret
     db8:	80 e0       	ldi	r24, 0x00	; 0
     dba:	08 95       	ret
     dbc:	80 e0       	ldi	r24, 0x00	; 0
     dbe:	08 95       	ret
     dc0:	80 e0       	ldi	r24, 0x00	; 0
     dc2:	08 95       	ret
     dc4:	81 e0       	ldi	r24, 0x01	; 1
     dc6:	08 95       	ret
     dc8:	80 e0       	ldi	r24, 0x00	; 0
     dca:	08 95       	ret

00000dcc <MEXTINT_vidCallBackFuncInt0>:
     dcc:	90 93 de 00 	sts	0x00DE, r25	; 0x8000de <callBackFuncInt0+0x1>
     dd0:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <callBackFuncInt0>
     dd4:	08 95       	ret

00000dd6 <MEXTINT_vidCallBackFunc>:
     dd6:	90 93 dc 00 	sts	0x00DC, r25	; 0x8000dc <callBack+0x1>
     dda:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <callBack>
     dde:	08 95       	ret

00000de0 <MEXTINT_vidDisableInterrupt>:
     de0:	8b b7       	in	r24, 0x3b	; 59
     de2:	8f 7b       	andi	r24, 0xBF	; 191
     de4:	8b bf       	out	0x3b, r24	; 59
     de6:	08 95       	ret

00000de8 <MEXTINT_vidEnableInterrupt>:
     de8:	8a b7       	in	r24, 0x3a	; 58
     dea:	80 64       	ori	r24, 0x40	; 64
     dec:	8a bf       	out	0x3a, r24	; 58
     dee:	8b b7       	in	r24, 0x3b	; 59
     df0:	80 64       	ori	r24, 0x40	; 64
     df2:	8b bf       	out	0x3b, r24	; 59
     df4:	08 95       	ret

00000df6 <MEXTINT2_vidDisableInterrupt>:
     df6:	8b b7       	in	r24, 0x3b	; 59
     df8:	8f 7d       	andi	r24, 0xDF	; 223
     dfa:	8b bf       	out	0x3b, r24	; 59
     dfc:	08 95       	ret

00000dfe <MEXTINT2_vidEnableInterrupt>:
     dfe:	8b b7       	in	r24, 0x3b	; 59
     e00:	80 62       	ori	r24, 0x20	; 32
     e02:	8b bf       	out	0x3b, r24	; 59
     e04:	8a b7       	in	r24, 0x3a	; 58
     e06:	80 62       	ori	r24, 0x20	; 32
     e08:	8a bf       	out	0x3a, r24	; 58
     e0a:	08 95       	ret

00000e0c <__vector_1>:
     e0c:	1f 92       	push	r1
     e0e:	0f 92       	push	r0
     e10:	0f b6       	in	r0, 0x3f	; 63
     e12:	0f 92       	push	r0
     e14:	11 24       	eor	r1, r1
     e16:	2f 93       	push	r18
     e18:	3f 93       	push	r19
     e1a:	4f 93       	push	r20
     e1c:	5f 93       	push	r21
     e1e:	6f 93       	push	r22
     e20:	7f 93       	push	r23
     e22:	8f 93       	push	r24
     e24:	9f 93       	push	r25
     e26:	af 93       	push	r26
     e28:	bf 93       	push	r27
     e2a:	ef 93       	push	r30
     e2c:	ff 93       	push	r31
     e2e:	e0 91 dd 00 	lds	r30, 0x00DD	; 0x8000dd <callBackFuncInt0>
     e32:	f0 91 de 00 	lds	r31, 0x00DE	; 0x8000de <callBackFuncInt0+0x1>
     e36:	09 95       	icall
     e38:	ff 91       	pop	r31
     e3a:	ef 91       	pop	r30
     e3c:	bf 91       	pop	r27
     e3e:	af 91       	pop	r26
     e40:	9f 91       	pop	r25
     e42:	8f 91       	pop	r24
     e44:	7f 91       	pop	r23
     e46:	6f 91       	pop	r22
     e48:	5f 91       	pop	r21
     e4a:	4f 91       	pop	r20
     e4c:	3f 91       	pop	r19
     e4e:	2f 91       	pop	r18
     e50:	0f 90       	pop	r0
     e52:	0f be       	out	0x3f, r0	; 63
     e54:	0f 90       	pop	r0
     e56:	1f 90       	pop	r1
     e58:	18 95       	reti

00000e5a <__vector_2>:
     e5a:	1f 92       	push	r1
     e5c:	0f 92       	push	r0
     e5e:	0f b6       	in	r0, 0x3f	; 63
     e60:	0f 92       	push	r0
     e62:	11 24       	eor	r1, r1
     e64:	2f 93       	push	r18
     e66:	3f 93       	push	r19
     e68:	4f 93       	push	r20
     e6a:	5f 93       	push	r21
     e6c:	6f 93       	push	r22
     e6e:	7f 93       	push	r23
     e70:	8f 93       	push	r24
     e72:	9f 93       	push	r25
     e74:	af 93       	push	r26
     e76:	bf 93       	push	r27
     e78:	ef 93       	push	r30
     e7a:	ff 93       	push	r31
     e7c:	e0 91 d9 00 	lds	r30, 0x00D9	; 0x8000d9 <callBackFunc>
     e80:	f0 91 da 00 	lds	r31, 0x00DA	; 0x8000da <callBackFunc+0x1>
     e84:	09 95       	icall
     e86:	ff 91       	pop	r31
     e88:	ef 91       	pop	r30
     e8a:	bf 91       	pop	r27
     e8c:	af 91       	pop	r26
     e8e:	9f 91       	pop	r25
     e90:	8f 91       	pop	r24
     e92:	7f 91       	pop	r23
     e94:	6f 91       	pop	r22
     e96:	5f 91       	pop	r21
     e98:	4f 91       	pop	r20
     e9a:	3f 91       	pop	r19
     e9c:	2f 91       	pop	r18
     e9e:	0f 90       	pop	r0
     ea0:	0f be       	out	0x3f, r0	; 63
     ea2:	0f 90       	pop	r0
     ea4:	1f 90       	pop	r1
     ea6:	18 95       	reti

00000ea8 <__vector_3>:
     ea8:	1f 92       	push	r1
     eaa:	0f 92       	push	r0
     eac:	0f b6       	in	r0, 0x3f	; 63
     eae:	0f 92       	push	r0
     eb0:	11 24       	eor	r1, r1
     eb2:	2f 93       	push	r18
     eb4:	3f 93       	push	r19
     eb6:	4f 93       	push	r20
     eb8:	5f 93       	push	r21
     eba:	6f 93       	push	r22
     ebc:	7f 93       	push	r23
     ebe:	8f 93       	push	r24
     ec0:	9f 93       	push	r25
     ec2:	af 93       	push	r26
     ec4:	bf 93       	push	r27
     ec6:	ef 93       	push	r30
     ec8:	ff 93       	push	r31
     eca:	e0 91 db 00 	lds	r30, 0x00DB	; 0x8000db <callBack>
     ece:	f0 91 dc 00 	lds	r31, 0x00DC	; 0x8000dc <callBack+0x1>
     ed2:	09 95       	icall
     ed4:	ff 91       	pop	r31
     ed6:	ef 91       	pop	r30
     ed8:	bf 91       	pop	r27
     eda:	af 91       	pop	r26
     edc:	9f 91       	pop	r25
     ede:	8f 91       	pop	r24
     ee0:	7f 91       	pop	r23
     ee2:	6f 91       	pop	r22
     ee4:	5f 91       	pop	r21
     ee6:	4f 91       	pop	r20
     ee8:	3f 91       	pop	r19
     eea:	2f 91       	pop	r18
     eec:	0f 90       	pop	r0
     eee:	0f be       	out	0x3f, r0	; 63
     ef0:	0f 90       	pop	r0
     ef2:	1f 90       	pop	r1
     ef4:	18 95       	reti

00000ef6 <__vector_11>:
     ef6:	1f 92       	push	r1
     ef8:	0f 92       	push	r0
     efa:	0f b6       	in	r0, 0x3f	; 63
     efc:	0f 92       	push	r0
     efe:	11 24       	eor	r1, r1
     f00:	2f 93       	push	r18
     f02:	3f 93       	push	r19
     f04:	4f 93       	push	r20
     f06:	5f 93       	push	r21
     f08:	6f 93       	push	r22
     f0a:	7f 93       	push	r23
     f0c:	8f 93       	push	r24
     f0e:	9f 93       	push	r25
     f10:	af 93       	push	r26
     f12:	bf 93       	push	r27
     f14:	ef 93       	push	r30
     f16:	ff 93       	push	r31
     f18:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <sg_Timer0_callBackPtr>
     f1c:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <sg_Timer0_callBackPtr+0x1>
     f20:	89 2b       	or	r24, r25
     f22:	41 f0       	breq	.+16     	; 0xf34 <__vector_11+0x3e>
     f24:	88 b7       	in	r24, 0x38	; 56
     f26:	8e 7f       	andi	r24, 0xFE	; 254
     f28:	88 bf       	out	0x38, r24	; 56
     f2a:	e0 91 e6 00 	lds	r30, 0x00E6	; 0x8000e6 <sg_Timer0_callBackPtr>
     f2e:	f0 91 e7 00 	lds	r31, 0x00E7	; 0x8000e7 <sg_Timer0_callBackPtr+0x1>
     f32:	09 95       	icall
     f34:	ff 91       	pop	r31
     f36:	ef 91       	pop	r30
     f38:	bf 91       	pop	r27
     f3a:	af 91       	pop	r26
     f3c:	9f 91       	pop	r25
     f3e:	8f 91       	pop	r24
     f40:	7f 91       	pop	r23
     f42:	6f 91       	pop	r22
     f44:	5f 91       	pop	r21
     f46:	4f 91       	pop	r20
     f48:	3f 91       	pop	r19
     f4a:	2f 91       	pop	r18
     f4c:	0f 90       	pop	r0
     f4e:	0f be       	out	0x3f, r0	; 63
     f50:	0f 90       	pop	r0
     f52:	1f 90       	pop	r1
     f54:	18 95       	reti

00000f56 <__vector_9>:
     f56:	1f 92       	push	r1
     f58:	0f 92       	push	r0
     f5a:	0f b6       	in	r0, 0x3f	; 63
     f5c:	0f 92       	push	r0
     f5e:	11 24       	eor	r1, r1
     f60:	2f 93       	push	r18
     f62:	3f 93       	push	r19
     f64:	4f 93       	push	r20
     f66:	5f 93       	push	r21
     f68:	6f 93       	push	r22
     f6a:	7f 93       	push	r23
     f6c:	8f 93       	push	r24
     f6e:	9f 93       	push	r25
     f70:	af 93       	push	r26
     f72:	bf 93       	push	r27
     f74:	ef 93       	push	r30
     f76:	ff 93       	push	r31
     f78:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <sg_Timer1_callBackPtr>
     f7c:	90 91 e5 00 	lds	r25, 0x00E5	; 0x8000e5 <sg_Timer1_callBackPtr+0x1>
     f80:	89 2b       	or	r24, r25
     f82:	41 f0       	breq	.+16     	; 0xf94 <__vector_9+0x3e>
     f84:	88 b7       	in	r24, 0x38	; 56
     f86:	8b 7f       	andi	r24, 0xFB	; 251
     f88:	88 bf       	out	0x38, r24	; 56
     f8a:	e0 91 e4 00 	lds	r30, 0x00E4	; 0x8000e4 <sg_Timer1_callBackPtr>
     f8e:	f0 91 e5 00 	lds	r31, 0x00E5	; 0x8000e5 <sg_Timer1_callBackPtr+0x1>
     f92:	09 95       	icall
     f94:	ff 91       	pop	r31
     f96:	ef 91       	pop	r30
     f98:	bf 91       	pop	r27
     f9a:	af 91       	pop	r26
     f9c:	9f 91       	pop	r25
     f9e:	8f 91       	pop	r24
     fa0:	7f 91       	pop	r23
     fa2:	6f 91       	pop	r22
     fa4:	5f 91       	pop	r21
     fa6:	4f 91       	pop	r20
     fa8:	3f 91       	pop	r19
     faa:	2f 91       	pop	r18
     fac:	0f 90       	pop	r0
     fae:	0f be       	out	0x3f, r0	; 63
     fb0:	0f 90       	pop	r0
     fb2:	1f 90       	pop	r1
     fb4:	18 95       	reti

00000fb6 <TIMER_init>:
     fb6:	00 97       	sbiw	r24, 0x00	; 0
     fb8:	09 f4       	brne	.+2      	; 0xfbc <TIMER_init+0x6>
     fba:	78 c0       	rjmp	.+240    	; 0x10ac <TIMER_init+0xf6>
     fbc:	fc 01       	movw	r30, r24
     fbe:	20 81       	ld	r18, Z
     fc0:	23 30       	cpi	r18, 0x03	; 3
     fc2:	08 f0       	brcs	.+2      	; 0xfc6 <TIMER_init+0x10>
     fc4:	75 c0       	rjmp	.+234    	; 0x10b0 <TIMER_init+0xfa>
     fc6:	31 81       	ldd	r19, Z+1	; 0x01
     fc8:	3a 30       	cpi	r19, 0x0A	; 10
     fca:	08 f0       	brcs	.+2      	; 0xfce <TIMER_init+0x18>
     fcc:	73 c0       	rjmp	.+230    	; 0x10b4 <TIMER_init+0xfe>
     fce:	21 30       	cpi	r18, 0x01	; 1
     fd0:	19 f1       	breq	.+70     	; 0x1018 <TIMER_init+0x62>
     fd2:	20 f0       	brcs	.+8      	; 0xfdc <TIMER_init+0x26>
     fd4:	22 30       	cpi	r18, 0x02	; 2
     fd6:	09 f4       	brne	.+2      	; 0xfda <TIMER_init+0x24>
     fd8:	50 c0       	rjmp	.+160    	; 0x107a <TIMER_init+0xc4>
     fda:	6e c0       	rjmp	.+220    	; 0x10b8 <TIMER_init+0x102>
     fdc:	12 be       	out	0x32, r1	; 50
     fde:	13 be       	out	0x33, r1	; 51
     fe0:	1c be       	out	0x3c, r1	; 60
     fe2:	fc 01       	movw	r30, r24
     fe4:	22 81       	ldd	r18, Z+2	; 0x02
     fe6:	22 bf       	out	0x32, r18	; 50
     fe8:	23 b7       	in	r18, 0x33	; 51
     fea:	20 68       	ori	r18, 0x80	; 128
     fec:	23 bf       	out	0x33, r18	; 51
     fee:	23 b7       	in	r18, 0x33	; 51
     ff0:	2f 7b       	andi	r18, 0xBF	; 191
     ff2:	23 bf       	out	0x33, r18	; 51
     ff4:	23 b7       	in	r18, 0x33	; 51
     ff6:	27 7f       	andi	r18, 0xF7	; 247
     ff8:	23 bf       	out	0x33, r18	; 51
     ffa:	23 b7       	in	r18, 0x33	; 51
     ffc:	2f 7e       	andi	r18, 0xEF	; 239
     ffe:	23 bf       	out	0x33, r18	; 51
    1000:	23 b7       	in	r18, 0x33	; 51
    1002:	2f 7d       	andi	r18, 0xDF	; 223
    1004:	23 bf       	out	0x33, r18	; 51
    1006:	84 81       	ldd	r24, Z+4	; 0x04
    1008:	81 30       	cpi	r24, 0x01	; 1
    100a:	09 f0       	breq	.+2      	; 0x100e <TIMER_init+0x58>
    100c:	57 c0       	rjmp	.+174    	; 0x10bc <TIMER_init+0x106>
    100e:	89 b7       	in	r24, 0x39	; 57
    1010:	81 60       	ori	r24, 0x01	; 1
    1012:	89 bf       	out	0x39, r24	; 57
    1014:	80 e0       	ldi	r24, 0x00	; 0
    1016:	08 95       	ret
    1018:	1c bc       	out	0x2c, r1	; 44
    101a:	1d bc       	out	0x2d, r1	; 45
    101c:	1f bc       	out	0x2f, r1	; 47
    101e:	1e bc       	out	0x2e, r1	; 46
    1020:	1b bc       	out	0x2b, r1	; 43
    1022:	1a bc       	out	0x2a, r1	; 42
    1024:	fc 01       	movw	r30, r24
    1026:	22 81       	ldd	r18, Z+2	; 0x02
    1028:	33 81       	ldd	r19, Z+3	; 0x03
    102a:	3d bd       	out	0x2d, r19	; 45
    102c:	2c bd       	out	0x2c, r18	; 44
    102e:	2f b5       	in	r18, 0x2f	; 47
    1030:	28 60       	ori	r18, 0x08	; 8
    1032:	2f bd       	out	0x2f, r18	; 47
    1034:	2f b5       	in	r18, 0x2f	; 47
    1036:	24 60       	ori	r18, 0x04	; 4
    1038:	2f bd       	out	0x2f, r18	; 47
    103a:	2f b5       	in	r18, 0x2f	; 47
    103c:	2e 7f       	andi	r18, 0xFE	; 254
    103e:	2f bd       	out	0x2f, r18	; 47
    1040:	2f b5       	in	r18, 0x2f	; 47
    1042:	2d 7f       	andi	r18, 0xFD	; 253
    1044:	2f bd       	out	0x2f, r18	; 47
    1046:	2e b5       	in	r18, 0x2e	; 46
    1048:	2f 7e       	andi	r18, 0xEF	; 239
    104a:	2e bd       	out	0x2e, r18	; 46
    104c:	2e b5       	in	r18, 0x2e	; 46
    104e:	27 7f       	andi	r18, 0xF7	; 247
    1050:	2e bd       	out	0x2e, r18	; 46
    1052:	2f b5       	in	r18, 0x2f	; 47
    1054:	2f 7b       	andi	r18, 0xBF	; 191
    1056:	2f bd       	out	0x2f, r18	; 47
    1058:	2f b5       	in	r18, 0x2f	; 47
    105a:	2f 77       	andi	r18, 0x7F	; 127
    105c:	2f bd       	out	0x2f, r18	; 47
    105e:	2f b5       	in	r18, 0x2f	; 47
    1060:	2f 7e       	andi	r18, 0xEF	; 239
    1062:	2f bd       	out	0x2f, r18	; 47
    1064:	2f b5       	in	r18, 0x2f	; 47
    1066:	2f 7d       	andi	r18, 0xDF	; 223
    1068:	2f bd       	out	0x2f, r18	; 47
    106a:	84 81       	ldd	r24, Z+4	; 0x04
    106c:	81 30       	cpi	r24, 0x01	; 1
    106e:	41 f5       	brne	.+80     	; 0x10c0 <TIMER_init+0x10a>
    1070:	89 b7       	in	r24, 0x39	; 57
    1072:	84 60       	ori	r24, 0x04	; 4
    1074:	89 bf       	out	0x39, r24	; 57
    1076:	80 e0       	ldi	r24, 0x00	; 0
    1078:	08 95       	ret
    107a:	14 bc       	out	0x24, r1	; 36
    107c:	15 bc       	out	0x25, r1	; 37
    107e:	13 bc       	out	0x23, r1	; 35
    1080:	14 bc       	out	0x24, r1	; 36
    1082:	25 b5       	in	r18, 0x25	; 37
    1084:	2f 7b       	andi	r18, 0xBF	; 191
    1086:	25 bd       	out	0x25, r18	; 37
    1088:	25 b5       	in	r18, 0x25	; 37
    108a:	27 7f       	andi	r18, 0xF7	; 247
    108c:	25 bd       	out	0x25, r18	; 37
    108e:	25 b5       	in	r18, 0x25	; 37
    1090:	2f 7e       	andi	r18, 0xEF	; 239
    1092:	25 bd       	out	0x25, r18	; 37
    1094:	25 b5       	in	r18, 0x25	; 37
    1096:	2f 7d       	andi	r18, 0xDF	; 223
    1098:	25 bd       	out	0x25, r18	; 37
    109a:	fc 01       	movw	r30, r24
    109c:	84 81       	ldd	r24, Z+4	; 0x04
    109e:	81 30       	cpi	r24, 0x01	; 1
    10a0:	89 f4       	brne	.+34     	; 0x10c4 <TIMER_init+0x10e>
    10a2:	89 b7       	in	r24, 0x39	; 57
    10a4:	80 64       	ori	r24, 0x40	; 64
    10a6:	89 bf       	out	0x39, r24	; 57
    10a8:	80 e0       	ldi	r24, 0x00	; 0
    10aa:	08 95       	ret
    10ac:	83 e0       	ldi	r24, 0x03	; 3
    10ae:	08 95       	ret
    10b0:	83 e0       	ldi	r24, 0x03	; 3
    10b2:	08 95       	ret
    10b4:	83 e0       	ldi	r24, 0x03	; 3
    10b6:	08 95       	ret
    10b8:	83 e0       	ldi	r24, 0x03	; 3
    10ba:	08 95       	ret
    10bc:	80 e0       	ldi	r24, 0x00	; 0
    10be:	08 95       	ret
    10c0:	80 e0       	ldi	r24, 0x00	; 0
    10c2:	08 95       	ret
    10c4:	80 e0       	ldi	r24, 0x00	; 0
    10c6:	08 95       	ret

000010c8 <TIMER_start>:
    10c8:	00 97       	sbiw	r24, 0x00	; 0
    10ca:	09 f4       	brne	.+2      	; 0x10ce <TIMER_start+0x6>
    10cc:	3b c1       	rjmp	.+630    	; 0x1344 <TIMER_start+0x27c>
    10ce:	dc 01       	movw	r26, r24
    10d0:	2c 91       	ld	r18, X
    10d2:	23 30       	cpi	r18, 0x03	; 3
    10d4:	08 f0       	brcs	.+2      	; 0x10d8 <TIMER_start+0x10>
    10d6:	38 c1       	rjmp	.+624    	; 0x1348 <TIMER_start+0x280>
    10d8:	11 96       	adiw	r26, 0x01	; 1
    10da:	ec 91       	ld	r30, X
    10dc:	ea 30       	cpi	r30, 0x0A	; 10
    10de:	08 f0       	brcs	.+2      	; 0x10e2 <TIMER_start+0x1a>
    10e0:	35 c1       	rjmp	.+618    	; 0x134c <TIMER_start+0x284>
    10e2:	21 30       	cpi	r18, 0x01	; 1
    10e4:	09 f4       	brne	.+2      	; 0x10e8 <TIMER_start+0x20>
    10e6:	68 c0       	rjmp	.+208    	; 0x11b8 <TIMER_start+0xf0>
    10e8:	20 f0       	brcs	.+8      	; 0x10f2 <TIMER_start+0x2a>
    10ea:	22 30       	cpi	r18, 0x02	; 2
    10ec:	09 f4       	brne	.+2      	; 0x10f0 <TIMER_start+0x28>
    10ee:	c7 c0       	rjmp	.+398    	; 0x127e <TIMER_start+0x1b6>
    10f0:	2f c1       	rjmp	.+606    	; 0x1350 <TIMER_start+0x288>
    10f2:	8e 2f       	mov	r24, r30
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	8a 30       	cpi	r24, 0x0A	; 10
    10f8:	91 05       	cpc	r25, r1
    10fa:	08 f0       	brcs	.+2      	; 0x10fe <TIMER_start+0x36>
    10fc:	2b c1       	rjmp	.+598    	; 0x1354 <TIMER_start+0x28c>
    10fe:	fc 01       	movw	r30, r24
    1100:	e6 5d       	subi	r30, 0xD6	; 214
    1102:	ff 4f       	sbci	r31, 0xFF	; 255
    1104:	0c 94 90 0c 	jmp	0x1920	; 0x1920 <__tablejump2__>
    1108:	83 b7       	in	r24, 0x33	; 51
    110a:	8e 7f       	andi	r24, 0xFE	; 254
    110c:	83 bf       	out	0x33, r24	; 51
    110e:	83 b7       	in	r24, 0x33	; 51
    1110:	8d 7f       	andi	r24, 0xFD	; 253
    1112:	83 bf       	out	0x33, r24	; 51
    1114:	83 b7       	in	r24, 0x33	; 51
    1116:	8b 7f       	andi	r24, 0xFB	; 251
    1118:	83 bf       	out	0x33, r24	; 51
    111a:	80 e0       	ldi	r24, 0x00	; 0
    111c:	08 95       	ret
    111e:	83 b7       	in	r24, 0x33	; 51
    1120:	81 60       	ori	r24, 0x01	; 1
    1122:	83 bf       	out	0x33, r24	; 51
    1124:	83 b7       	in	r24, 0x33	; 51
    1126:	8d 7f       	andi	r24, 0xFD	; 253
    1128:	83 bf       	out	0x33, r24	; 51
    112a:	83 b7       	in	r24, 0x33	; 51
    112c:	8b 7f       	andi	r24, 0xFB	; 251
    112e:	83 bf       	out	0x33, r24	; 51
    1130:	80 e0       	ldi	r24, 0x00	; 0
    1132:	08 95       	ret
    1134:	83 b7       	in	r24, 0x33	; 51
    1136:	8e 7f       	andi	r24, 0xFE	; 254
    1138:	83 bf       	out	0x33, r24	; 51
    113a:	83 b7       	in	r24, 0x33	; 51
    113c:	82 60       	ori	r24, 0x02	; 2
    113e:	83 bf       	out	0x33, r24	; 51
    1140:	83 b7       	in	r24, 0x33	; 51
    1142:	8b 7f       	andi	r24, 0xFB	; 251
    1144:	83 bf       	out	0x33, r24	; 51
    1146:	80 e0       	ldi	r24, 0x00	; 0
    1148:	08 95       	ret
    114a:	83 b7       	in	r24, 0x33	; 51
    114c:	81 60       	ori	r24, 0x01	; 1
    114e:	83 bf       	out	0x33, r24	; 51
    1150:	83 b7       	in	r24, 0x33	; 51
    1152:	82 60       	ori	r24, 0x02	; 2
    1154:	83 bf       	out	0x33, r24	; 51
    1156:	83 b7       	in	r24, 0x33	; 51
    1158:	8b 7f       	andi	r24, 0xFB	; 251
    115a:	83 bf       	out	0x33, r24	; 51
    115c:	80 e0       	ldi	r24, 0x00	; 0
    115e:	08 95       	ret
    1160:	83 b7       	in	r24, 0x33	; 51
    1162:	8e 7f       	andi	r24, 0xFE	; 254
    1164:	83 bf       	out	0x33, r24	; 51
    1166:	83 b7       	in	r24, 0x33	; 51
    1168:	8d 7f       	andi	r24, 0xFD	; 253
    116a:	83 bf       	out	0x33, r24	; 51
    116c:	83 b7       	in	r24, 0x33	; 51
    116e:	84 60       	ori	r24, 0x04	; 4
    1170:	83 bf       	out	0x33, r24	; 51
    1172:	80 e0       	ldi	r24, 0x00	; 0
    1174:	08 95       	ret
    1176:	83 b7       	in	r24, 0x33	; 51
    1178:	81 60       	ori	r24, 0x01	; 1
    117a:	83 bf       	out	0x33, r24	; 51
    117c:	83 b7       	in	r24, 0x33	; 51
    117e:	8d 7f       	andi	r24, 0xFD	; 253
    1180:	83 bf       	out	0x33, r24	; 51
    1182:	83 b7       	in	r24, 0x33	; 51
    1184:	84 60       	ori	r24, 0x04	; 4
    1186:	83 bf       	out	0x33, r24	; 51
    1188:	80 e0       	ldi	r24, 0x00	; 0
    118a:	08 95       	ret
    118c:	83 b7       	in	r24, 0x33	; 51
    118e:	8e 7f       	andi	r24, 0xFE	; 254
    1190:	83 bf       	out	0x33, r24	; 51
    1192:	83 b7       	in	r24, 0x33	; 51
    1194:	82 60       	ori	r24, 0x02	; 2
    1196:	83 bf       	out	0x33, r24	; 51
    1198:	83 b7       	in	r24, 0x33	; 51
    119a:	84 60       	ori	r24, 0x04	; 4
    119c:	83 bf       	out	0x33, r24	; 51
    119e:	80 e0       	ldi	r24, 0x00	; 0
    11a0:	08 95       	ret
    11a2:	83 b7       	in	r24, 0x33	; 51
    11a4:	81 60       	ori	r24, 0x01	; 1
    11a6:	83 bf       	out	0x33, r24	; 51
    11a8:	83 b7       	in	r24, 0x33	; 51
    11aa:	82 60       	ori	r24, 0x02	; 2
    11ac:	83 bf       	out	0x33, r24	; 51
    11ae:	83 b7       	in	r24, 0x33	; 51
    11b0:	84 60       	ori	r24, 0x04	; 4
    11b2:	83 bf       	out	0x33, r24	; 51
    11b4:	80 e0       	ldi	r24, 0x00	; 0
    11b6:	08 95       	ret
    11b8:	8e 2f       	mov	r24, r30
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	8a 30       	cpi	r24, 0x0A	; 10
    11be:	91 05       	cpc	r25, r1
    11c0:	08 f0       	brcs	.+2      	; 0x11c4 <TIMER_start+0xfc>
    11c2:	ca c0       	rjmp	.+404    	; 0x1358 <TIMER_start+0x290>
    11c4:	fc 01       	movw	r30, r24
    11c6:	ec 5c       	subi	r30, 0xCC	; 204
    11c8:	ff 4f       	sbci	r31, 0xFF	; 255
    11ca:	0c 94 90 0c 	jmp	0x1920	; 0x1920 <__tablejump2__>
    11ce:	8e b5       	in	r24, 0x2e	; 46
    11d0:	8e 7f       	andi	r24, 0xFE	; 254
    11d2:	8e bd       	out	0x2e, r24	; 46
    11d4:	8e b5       	in	r24, 0x2e	; 46
    11d6:	8d 7f       	andi	r24, 0xFD	; 253
    11d8:	8e bd       	out	0x2e, r24	; 46
    11da:	8e b5       	in	r24, 0x2e	; 46
    11dc:	8b 7f       	andi	r24, 0xFB	; 251
    11de:	8e bd       	out	0x2e, r24	; 46
    11e0:	80 e0       	ldi	r24, 0x00	; 0
    11e2:	08 95       	ret
    11e4:	8e b5       	in	r24, 0x2e	; 46
    11e6:	81 60       	ori	r24, 0x01	; 1
    11e8:	8e bd       	out	0x2e, r24	; 46
    11ea:	8e b5       	in	r24, 0x2e	; 46
    11ec:	8d 7f       	andi	r24, 0xFD	; 253
    11ee:	8e bd       	out	0x2e, r24	; 46
    11f0:	8e b5       	in	r24, 0x2e	; 46
    11f2:	8b 7f       	andi	r24, 0xFB	; 251
    11f4:	8e bd       	out	0x2e, r24	; 46
    11f6:	80 e0       	ldi	r24, 0x00	; 0
    11f8:	08 95       	ret
    11fa:	8e b5       	in	r24, 0x2e	; 46
    11fc:	8e 7f       	andi	r24, 0xFE	; 254
    11fe:	8e bd       	out	0x2e, r24	; 46
    1200:	8e b5       	in	r24, 0x2e	; 46
    1202:	82 60       	ori	r24, 0x02	; 2
    1204:	8e bd       	out	0x2e, r24	; 46
    1206:	8e b5       	in	r24, 0x2e	; 46
    1208:	8b 7f       	andi	r24, 0xFB	; 251
    120a:	8e bd       	out	0x2e, r24	; 46
    120c:	80 e0       	ldi	r24, 0x00	; 0
    120e:	08 95       	ret
    1210:	8e b5       	in	r24, 0x2e	; 46
    1212:	81 60       	ori	r24, 0x01	; 1
    1214:	8e bd       	out	0x2e, r24	; 46
    1216:	8e b5       	in	r24, 0x2e	; 46
    1218:	82 60       	ori	r24, 0x02	; 2
    121a:	8e bd       	out	0x2e, r24	; 46
    121c:	8e b5       	in	r24, 0x2e	; 46
    121e:	8b 7f       	andi	r24, 0xFB	; 251
    1220:	8e bd       	out	0x2e, r24	; 46
    1222:	80 e0       	ldi	r24, 0x00	; 0
    1224:	08 95       	ret
    1226:	8e b5       	in	r24, 0x2e	; 46
    1228:	8e 7f       	andi	r24, 0xFE	; 254
    122a:	8e bd       	out	0x2e, r24	; 46
    122c:	8e b5       	in	r24, 0x2e	; 46
    122e:	8d 7f       	andi	r24, 0xFD	; 253
    1230:	8e bd       	out	0x2e, r24	; 46
    1232:	8e b5       	in	r24, 0x2e	; 46
    1234:	84 60       	ori	r24, 0x04	; 4
    1236:	8e bd       	out	0x2e, r24	; 46
    1238:	80 e0       	ldi	r24, 0x00	; 0
    123a:	08 95       	ret
    123c:	8e b5       	in	r24, 0x2e	; 46
    123e:	81 60       	ori	r24, 0x01	; 1
    1240:	8e bd       	out	0x2e, r24	; 46
    1242:	8e b5       	in	r24, 0x2e	; 46
    1244:	8d 7f       	andi	r24, 0xFD	; 253
    1246:	8e bd       	out	0x2e, r24	; 46
    1248:	8e b5       	in	r24, 0x2e	; 46
    124a:	84 60       	ori	r24, 0x04	; 4
    124c:	8e bd       	out	0x2e, r24	; 46
    124e:	80 e0       	ldi	r24, 0x00	; 0
    1250:	08 95       	ret
    1252:	8e b5       	in	r24, 0x2e	; 46
    1254:	8e 7f       	andi	r24, 0xFE	; 254
    1256:	8e bd       	out	0x2e, r24	; 46
    1258:	8e b5       	in	r24, 0x2e	; 46
    125a:	82 60       	ori	r24, 0x02	; 2
    125c:	8e bd       	out	0x2e, r24	; 46
    125e:	8e b5       	in	r24, 0x2e	; 46
    1260:	84 60       	ori	r24, 0x04	; 4
    1262:	8e bd       	out	0x2e, r24	; 46
    1264:	80 e0       	ldi	r24, 0x00	; 0
    1266:	08 95       	ret
    1268:	8e b5       	in	r24, 0x2e	; 46
    126a:	81 60       	ori	r24, 0x01	; 1
    126c:	8e bd       	out	0x2e, r24	; 46
    126e:	8e b5       	in	r24, 0x2e	; 46
    1270:	82 60       	ori	r24, 0x02	; 2
    1272:	8e bd       	out	0x2e, r24	; 46
    1274:	8e b5       	in	r24, 0x2e	; 46
    1276:	84 60       	ori	r24, 0x04	; 4
    1278:	8e bd       	out	0x2e, r24	; 46
    127a:	80 e0       	ldi	r24, 0x00	; 0
    127c:	08 95       	ret
    127e:	8e 2f       	mov	r24, r30
    1280:	90 e0       	ldi	r25, 0x00	; 0
    1282:	88 30       	cpi	r24, 0x08	; 8
    1284:	91 05       	cpc	r25, r1
    1286:	08 f0       	brcs	.+2      	; 0x128a <TIMER_start+0x1c2>
    1288:	69 c0       	rjmp	.+210    	; 0x135c <TIMER_start+0x294>
    128a:	fc 01       	movw	r30, r24
    128c:	e2 5c       	subi	r30, 0xC2	; 194
    128e:	ff 4f       	sbci	r31, 0xFF	; 255
    1290:	0c 94 90 0c 	jmp	0x1920	; 0x1920 <__tablejump2__>
    1294:	85 b5       	in	r24, 0x25	; 37
    1296:	8b 7f       	andi	r24, 0xFB	; 251
    1298:	85 bd       	out	0x25, r24	; 37
    129a:	85 b5       	in	r24, 0x25	; 37
    129c:	8d 7f       	andi	r24, 0xFD	; 253
    129e:	85 bd       	out	0x25, r24	; 37
    12a0:	85 b5       	in	r24, 0x25	; 37
    12a2:	8e 7f       	andi	r24, 0xFE	; 254
    12a4:	85 bd       	out	0x25, r24	; 37
    12a6:	80 e0       	ldi	r24, 0x00	; 0
    12a8:	08 95       	ret
    12aa:	85 b5       	in	r24, 0x25	; 37
    12ac:	84 60       	ori	r24, 0x04	; 4
    12ae:	85 bd       	out	0x25, r24	; 37
    12b0:	85 b5       	in	r24, 0x25	; 37
    12b2:	8d 7f       	andi	r24, 0xFD	; 253
    12b4:	85 bd       	out	0x25, r24	; 37
    12b6:	85 b5       	in	r24, 0x25	; 37
    12b8:	8e 7f       	andi	r24, 0xFE	; 254
    12ba:	85 bd       	out	0x25, r24	; 37
    12bc:	80 e0       	ldi	r24, 0x00	; 0
    12be:	08 95       	ret
    12c0:	85 b5       	in	r24, 0x25	; 37
    12c2:	8b 7f       	andi	r24, 0xFB	; 251
    12c4:	85 bd       	out	0x25, r24	; 37
    12c6:	85 b5       	in	r24, 0x25	; 37
    12c8:	82 60       	ori	r24, 0x02	; 2
    12ca:	85 bd       	out	0x25, r24	; 37
    12cc:	85 b5       	in	r24, 0x25	; 37
    12ce:	8e 7f       	andi	r24, 0xFE	; 254
    12d0:	85 bd       	out	0x25, r24	; 37
    12d2:	80 e0       	ldi	r24, 0x00	; 0
    12d4:	08 95       	ret
    12d6:	85 b5       	in	r24, 0x25	; 37
    12d8:	84 60       	ori	r24, 0x04	; 4
    12da:	85 bd       	out	0x25, r24	; 37
    12dc:	85 b5       	in	r24, 0x25	; 37
    12de:	82 60       	ori	r24, 0x02	; 2
    12e0:	85 bd       	out	0x25, r24	; 37
    12e2:	85 b5       	in	r24, 0x25	; 37
    12e4:	8e 7f       	andi	r24, 0xFE	; 254
    12e6:	85 bd       	out	0x25, r24	; 37
    12e8:	80 e0       	ldi	r24, 0x00	; 0
    12ea:	08 95       	ret
    12ec:	85 b5       	in	r24, 0x25	; 37
    12ee:	8b 7f       	andi	r24, 0xFB	; 251
    12f0:	85 bd       	out	0x25, r24	; 37
    12f2:	85 b5       	in	r24, 0x25	; 37
    12f4:	8d 7f       	andi	r24, 0xFD	; 253
    12f6:	85 bd       	out	0x25, r24	; 37
    12f8:	85 b5       	in	r24, 0x25	; 37
    12fa:	81 60       	ori	r24, 0x01	; 1
    12fc:	85 bd       	out	0x25, r24	; 37
    12fe:	80 e0       	ldi	r24, 0x00	; 0
    1300:	08 95       	ret
    1302:	85 b5       	in	r24, 0x25	; 37
    1304:	84 60       	ori	r24, 0x04	; 4
    1306:	85 bd       	out	0x25, r24	; 37
    1308:	85 b5       	in	r24, 0x25	; 37
    130a:	8d 7f       	andi	r24, 0xFD	; 253
    130c:	85 bd       	out	0x25, r24	; 37
    130e:	85 b5       	in	r24, 0x25	; 37
    1310:	81 60       	ori	r24, 0x01	; 1
    1312:	85 bd       	out	0x25, r24	; 37
    1314:	80 e0       	ldi	r24, 0x00	; 0
    1316:	08 95       	ret
    1318:	85 b5       	in	r24, 0x25	; 37
    131a:	8b 7f       	andi	r24, 0xFB	; 251
    131c:	85 bd       	out	0x25, r24	; 37
    131e:	85 b5       	in	r24, 0x25	; 37
    1320:	82 60       	ori	r24, 0x02	; 2
    1322:	85 bd       	out	0x25, r24	; 37
    1324:	85 b5       	in	r24, 0x25	; 37
    1326:	81 60       	ori	r24, 0x01	; 1
    1328:	85 bd       	out	0x25, r24	; 37
    132a:	80 e0       	ldi	r24, 0x00	; 0
    132c:	08 95       	ret
    132e:	85 b5       	in	r24, 0x25	; 37
    1330:	84 60       	ori	r24, 0x04	; 4
    1332:	85 bd       	out	0x25, r24	; 37
    1334:	85 b5       	in	r24, 0x25	; 37
    1336:	82 60       	ori	r24, 0x02	; 2
    1338:	85 bd       	out	0x25, r24	; 37
    133a:	85 b5       	in	r24, 0x25	; 37
    133c:	81 60       	ori	r24, 0x01	; 1
    133e:	85 bd       	out	0x25, r24	; 37
    1340:	80 e0       	ldi	r24, 0x00	; 0
    1342:	08 95       	ret
    1344:	83 e0       	ldi	r24, 0x03	; 3
    1346:	08 95       	ret
    1348:	83 e0       	ldi	r24, 0x03	; 3
    134a:	08 95       	ret
    134c:	83 e0       	ldi	r24, 0x03	; 3
    134e:	08 95       	ret
    1350:	83 e0       	ldi	r24, 0x03	; 3
    1352:	08 95       	ret
    1354:	83 e0       	ldi	r24, 0x03	; 3
    1356:	08 95       	ret
    1358:	83 e0       	ldi	r24, 0x03	; 3
    135a:	08 95       	ret
    135c:	83 e0       	ldi	r24, 0x03	; 3
    135e:	08 95       	ret

00001360 <TIMER_stop>:
    1360:	83 30       	cpi	r24, 0x03	; 3
    1362:	38 f5       	brcc	.+78     	; 0x13b2 <TIMER_stop+0x52>
    1364:	81 30       	cpi	r24, 0x01	; 1
    1366:	79 f0       	breq	.+30     	; 0x1386 <TIMER_stop+0x26>
    1368:	18 f0       	brcs	.+6      	; 0x1370 <TIMER_stop+0x10>
    136a:	82 30       	cpi	r24, 0x02	; 2
    136c:	b9 f0       	breq	.+46     	; 0x139c <TIMER_stop+0x3c>
    136e:	23 c0       	rjmp	.+70     	; 0x13b6 <TIMER_stop+0x56>
    1370:	83 b7       	in	r24, 0x33	; 51
    1372:	8e 7f       	andi	r24, 0xFE	; 254
    1374:	83 bf       	out	0x33, r24	; 51
    1376:	83 b7       	in	r24, 0x33	; 51
    1378:	8d 7f       	andi	r24, 0xFD	; 253
    137a:	83 bf       	out	0x33, r24	; 51
    137c:	83 b7       	in	r24, 0x33	; 51
    137e:	8b 7f       	andi	r24, 0xFB	; 251
    1380:	83 bf       	out	0x33, r24	; 51
    1382:	80 e0       	ldi	r24, 0x00	; 0
    1384:	08 95       	ret
    1386:	8e b5       	in	r24, 0x2e	; 46
    1388:	8e 7f       	andi	r24, 0xFE	; 254
    138a:	8e bd       	out	0x2e, r24	; 46
    138c:	8e b5       	in	r24, 0x2e	; 46
    138e:	8d 7f       	andi	r24, 0xFD	; 253
    1390:	8e bd       	out	0x2e, r24	; 46
    1392:	8e b5       	in	r24, 0x2e	; 46
    1394:	8b 7f       	andi	r24, 0xFB	; 251
    1396:	8e bd       	out	0x2e, r24	; 46
    1398:	80 e0       	ldi	r24, 0x00	; 0
    139a:	08 95       	ret
    139c:	85 b5       	in	r24, 0x25	; 37
    139e:	8b 7f       	andi	r24, 0xFB	; 251
    13a0:	85 bd       	out	0x25, r24	; 37
    13a2:	85 b5       	in	r24, 0x25	; 37
    13a4:	8d 7f       	andi	r24, 0xFD	; 253
    13a6:	85 bd       	out	0x25, r24	; 37
    13a8:	85 b5       	in	r24, 0x25	; 37
    13aa:	8e 7f       	andi	r24, 0xFE	; 254
    13ac:	85 bd       	out	0x25, r24	; 37
    13ae:	80 e0       	ldi	r24, 0x00	; 0
    13b0:	08 95       	ret
    13b2:	83 e0       	ldi	r24, 0x03	; 3
    13b4:	08 95       	ret
    13b6:	83 e0       	ldi	r24, 0x03	; 3
    13b8:	08 95       	ret

000013ba <TIMER_reset>:
    13ba:	00 97       	sbiw	r24, 0x00	; 0
    13bc:	f1 f0       	breq	.+60     	; 0x13fa <TIMER_reset+0x40>
    13be:	fc 01       	movw	r30, r24
    13c0:	20 81       	ld	r18, Z
    13c2:	23 30       	cpi	r18, 0x03	; 3
    13c4:	e0 f4       	brcc	.+56     	; 0x13fe <TIMER_reset+0x44>
    13c6:	31 81       	ldd	r19, Z+1	; 0x01
    13c8:	3a 30       	cpi	r19, 0x0A	; 10
    13ca:	d8 f4       	brcc	.+54     	; 0x1402 <TIMER_reset+0x48>
    13cc:	21 30       	cpi	r18, 0x01	; 1
    13ce:	49 f0       	breq	.+18     	; 0x13e2 <TIMER_reset+0x28>
    13d0:	18 f0       	brcs	.+6      	; 0x13d8 <TIMER_reset+0x1e>
    13d2:	22 30       	cpi	r18, 0x02	; 2
    13d4:	69 f0       	breq	.+26     	; 0x13f0 <TIMER_reset+0x36>
    13d6:	17 c0       	rjmp	.+46     	; 0x1406 <TIMER_reset+0x4c>
    13d8:	fc 01       	movw	r30, r24
    13da:	82 81       	ldd	r24, Z+2	; 0x02
    13dc:	82 bf       	out	0x32, r24	; 50
    13de:	80 e0       	ldi	r24, 0x00	; 0
    13e0:	08 95       	ret
    13e2:	fc 01       	movw	r30, r24
    13e4:	82 81       	ldd	r24, Z+2	; 0x02
    13e6:	93 81       	ldd	r25, Z+3	; 0x03
    13e8:	9d bd       	out	0x2d, r25	; 45
    13ea:	8c bd       	out	0x2c, r24	; 44
    13ec:	80 e0       	ldi	r24, 0x00	; 0
    13ee:	08 95       	ret
    13f0:	fc 01       	movw	r30, r24
    13f2:	82 81       	ldd	r24, Z+2	; 0x02
    13f4:	84 bd       	out	0x24, r24	; 36
    13f6:	80 e0       	ldi	r24, 0x00	; 0
    13f8:	08 95       	ret
    13fa:	83 e0       	ldi	r24, 0x03	; 3
    13fc:	08 95       	ret
    13fe:	83 e0       	ldi	r24, 0x03	; 3
    1400:	08 95       	ret
    1402:	83 e0       	ldi	r24, 0x03	; 3
    1404:	08 95       	ret
    1406:	83 e0       	ldi	r24, 0x03	; 3
    1408:	08 95       	ret

0000140a <TIMER_setCallBack>:
    140a:	00 97       	sbiw	r24, 0x00	; 0
    140c:	a9 f0       	breq	.+42     	; 0x1438 <TIMER_setCallBack+0x2e>
    140e:	63 30       	cpi	r22, 0x03	; 3
    1410:	a8 f4       	brcc	.+42     	; 0x143c <TIMER_setCallBack+0x32>
    1412:	61 30       	cpi	r22, 0x01	; 1
    1414:	59 f0       	breq	.+22     	; 0x142c <TIMER_setCallBack+0x22>
    1416:	20 f0       	brcs	.+8      	; 0x1420 <TIMER_setCallBack+0x16>
    1418:	62 30       	cpi	r22, 0x02	; 2
    141a:	91 f0       	breq	.+36     	; 0x1440 <TIMER_setCallBack+0x36>
    141c:	83 e0       	ldi	r24, 0x03	; 3
    141e:	08 95       	ret
    1420:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <sg_Timer0_callBackPtr+0x1>
    1424:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <sg_Timer0_callBackPtr>
    1428:	80 e0       	ldi	r24, 0x00	; 0
    142a:	08 95       	ret
    142c:	90 93 e5 00 	sts	0x00E5, r25	; 0x8000e5 <sg_Timer1_callBackPtr+0x1>
    1430:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <sg_Timer1_callBackPtr>
    1434:	80 e0       	ldi	r24, 0x00	; 0
    1436:	08 95       	ret
    1438:	83 e0       	ldi	r24, 0x03	; 3
    143a:	08 95       	ret
    143c:	83 e0       	ldi	r24, 0x03	; 3
    143e:	08 95       	ret
    1440:	80 e0       	ldi	r24, 0x00	; 0
    1442:	08 95       	ret

00001444 <enuTimer2_init>:
    1444:	84 30       	cpi	r24, 0x04	; 4
    1446:	48 f5       	brcc	.+82     	; 0x149a <enuTimer2_init+0x56>
    1448:	14 bc       	out	0x24, r1	; 36
    144a:	81 30       	cpi	r24, 0x01	; 1
    144c:	71 f0       	breq	.+28     	; 0x146a <enuTimer2_init+0x26>
    144e:	28 f0       	brcs	.+10     	; 0x145a <enuTimer2_init+0x16>
    1450:	82 30       	cpi	r24, 0x02	; 2
    1452:	99 f0       	breq	.+38     	; 0x147a <enuTimer2_init+0x36>
    1454:	83 30       	cpi	r24, 0x03	; 3
    1456:	c9 f0       	breq	.+50     	; 0x148a <enuTimer2_init+0x46>
    1458:	22 c0       	rjmp	.+68     	; 0x149e <enuTimer2_init+0x5a>
    145a:	85 b5       	in	r24, 0x25	; 37
    145c:	87 7f       	andi	r24, 0xF7	; 247
    145e:	85 bd       	out	0x25, r24	; 37
    1460:	85 b5       	in	r24, 0x25	; 37
    1462:	8f 7b       	andi	r24, 0xBF	; 191
    1464:	85 bd       	out	0x25, r24	; 37
    1466:	80 e0       	ldi	r24, 0x00	; 0
    1468:	08 95       	ret
    146a:	85 b5       	in	r24, 0x25	; 37
    146c:	87 7f       	andi	r24, 0xF7	; 247
    146e:	85 bd       	out	0x25, r24	; 37
    1470:	85 b5       	in	r24, 0x25	; 37
    1472:	80 64       	ori	r24, 0x40	; 64
    1474:	85 bd       	out	0x25, r24	; 37
    1476:	80 e0       	ldi	r24, 0x00	; 0
    1478:	08 95       	ret
    147a:	85 b5       	in	r24, 0x25	; 37
    147c:	88 60       	ori	r24, 0x08	; 8
    147e:	85 bd       	out	0x25, r24	; 37
    1480:	85 b5       	in	r24, 0x25	; 37
    1482:	8f 7b       	andi	r24, 0xBF	; 191
    1484:	85 bd       	out	0x25, r24	; 37
    1486:	80 e0       	ldi	r24, 0x00	; 0
    1488:	08 95       	ret
    148a:	85 b5       	in	r24, 0x25	; 37
    148c:	88 60       	ori	r24, 0x08	; 8
    148e:	85 bd       	out	0x25, r24	; 37
    1490:	85 b5       	in	r24, 0x25	; 37
    1492:	80 64       	ori	r24, 0x40	; 64
    1494:	85 bd       	out	0x25, r24	; 37
    1496:	80 e0       	ldi	r24, 0x00	; 0
    1498:	08 95       	ret
    149a:	81 e0       	ldi	r24, 0x01	; 1
    149c:	08 95       	ret
    149e:	81 e0       	ldi	r24, 0x01	; 1
    14a0:	08 95       	ret

000014a2 <u8Timer2_setPrescallar>:
    14a2:	88 30       	cpi	r24, 0x08	; 8
    14a4:	70 f4       	brcc	.+28     	; 0x14c2 <u8Timer2_setPrescallar+0x20>
    14a6:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <global_prescaller>
    14aa:	90 91 e2 00 	lds	r25, 0x00E2	; 0x8000e2 <global_timerStatus>
    14ae:	91 30       	cpi	r25, 0x01	; 1
    14b0:	51 f4       	brne	.+20     	; 0x14c6 <u8Timer2_setPrescallar+0x24>
    14b2:	95 b5       	in	r25, 0x25	; 37
    14b4:	98 7f       	andi	r25, 0xF8	; 248
    14b6:	89 2b       	or	r24, r25
    14b8:	95 b5       	in	r25, 0x25	; 37
    14ba:	89 2b       	or	r24, r25
    14bc:	85 bd       	out	0x25, r24	; 37
    14be:	80 e0       	ldi	r24, 0x00	; 0
    14c0:	08 95       	ret
    14c2:	81 e0       	ldi	r24, 0x01	; 1
    14c4:	08 95       	ret
    14c6:	80 e0       	ldi	r24, 0x00	; 0
    14c8:	08 95       	ret

000014ca <vidTimer2_OvfIrqEnable>:
    14ca:	88 b7       	in	r24, 0x38	; 56
    14cc:	80 64       	ori	r24, 0x40	; 64
    14ce:	88 bf       	out	0x38, r24	; 56
    14d0:	89 b7       	in	r24, 0x39	; 57
    14d2:	80 64       	ori	r24, 0x40	; 64
    14d4:	89 bf       	out	0x39, r24	; 57
    14d6:	80 e0       	ldi	r24, 0x00	; 0
    14d8:	08 95       	ret

000014da <vidTimer2_OvfIrqDisable>:
    14da:	89 b7       	in	r24, 0x39	; 57
    14dc:	8f 7b       	andi	r24, 0xBF	; 191
    14de:	89 bf       	out	0x39, r24	; 57
    14e0:	80 e0       	ldi	r24, 0x00	; 0
    14e2:	08 95       	ret

000014e4 <vidTimer2_start>:
    14e4:	95 b5       	in	r25, 0x25	; 37
    14e6:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <global_prescaller>
    14ea:	89 2b       	or	r24, r25
    14ec:	85 bd       	out	0x25, r24	; 37
    14ee:	81 e0       	ldi	r24, 0x01	; 1
    14f0:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <global_timerStatus>
    14f4:	80 e0       	ldi	r24, 0x00	; 0
    14f6:	08 95       	ret

000014f8 <vidTimer2_stop>:
    14f8:	85 b5       	in	r24, 0x25	; 37
    14fa:	88 7f       	andi	r24, 0xF8	; 248
    14fc:	85 bd       	out	0x25, r24	; 37
    14fe:	10 92 e2 00 	sts	0x00E2, r1	; 0x8000e2 <global_timerStatus>
    1502:	80 e0       	ldi	r24, 0x00	; 0
    1504:	08 95       	ret

00001506 <vidTimer2_setcbf_OVF>:
    1506:	00 97       	sbiw	r24, 0x00	; 0
    1508:	21 f0       	breq	.+8      	; 0x1512 <vidTimer2_setcbf_OVF+0xc>
    150a:	90 93 e1 00 	sts	0x00E1, r25	; 0x8000e1 <globalCallFunc+0x1>
    150e:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <globalCallFunc>
    1512:	08 95       	ret

00001514 <MTIMER_vidResetTCNT>:
    1514:	14 bc       	out	0x24, r1	; 36
    1516:	08 95       	ret

00001518 <MTIMER_u8GetTCNT>:
    1518:	84 b5       	in	r24, 0x24	; 36
    151a:	08 95       	ret

0000151c <MTIMER_vidEnableGlobalInterrupt>:
    151c:	8f b7       	in	r24, 0x3f	; 63
    151e:	80 68       	ori	r24, 0x80	; 128
    1520:	8f bf       	out	0x3f, r24	; 63
    1522:	08 95       	ret

00001524 <__vector_5>:
    1524:	1f 92       	push	r1
    1526:	0f 92       	push	r0
    1528:	0f b6       	in	r0, 0x3f	; 63
    152a:	0f 92       	push	r0
    152c:	11 24       	eor	r1, r1
    152e:	2f 93       	push	r18
    1530:	3f 93       	push	r19
    1532:	4f 93       	push	r20
    1534:	5f 93       	push	r21
    1536:	6f 93       	push	r22
    1538:	7f 93       	push	r23
    153a:	8f 93       	push	r24
    153c:	9f 93       	push	r25
    153e:	af 93       	push	r26
    1540:	bf 93       	push	r27
    1542:	ef 93       	push	r30
    1544:	ff 93       	push	r31
    1546:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <counter.1817>
    154a:	8f 5f       	subi	r24, 0xFF	; 255
    154c:	80 93 df 00 	sts	0x00DF, r24	; 0x8000df <counter.1817>
    1550:	90 91 7e 00 	lds	r25, 0x007E	; 0x80007e <global_ovf>
    1554:	89 13       	cpse	r24, r25
    1556:	09 c0       	rjmp	.+18     	; 0x156a <__vector_5+0x46>
    1558:	e0 91 e0 00 	lds	r30, 0x00E0	; 0x8000e0 <globalCallFunc>
    155c:	f0 91 e1 00 	lds	r31, 0x00E1	; 0x8000e1 <globalCallFunc+0x1>
    1560:	30 97       	sbiw	r30, 0x00	; 0
    1562:	19 f0       	breq	.+6      	; 0x156a <__vector_5+0x46>
    1564:	10 92 df 00 	sts	0x00DF, r1	; 0x8000df <counter.1817>
    1568:	09 95       	icall
    156a:	ff 91       	pop	r31
    156c:	ef 91       	pop	r30
    156e:	bf 91       	pop	r27
    1570:	af 91       	pop	r26
    1572:	9f 91       	pop	r25
    1574:	8f 91       	pop	r24
    1576:	7f 91       	pop	r23
    1578:	6f 91       	pop	r22
    157a:	5f 91       	pop	r21
    157c:	4f 91       	pop	r20
    157e:	3f 91       	pop	r19
    1580:	2f 91       	pop	r18
    1582:	0f 90       	pop	r0
    1584:	0f be       	out	0x3f, r0	; 63
    1586:	0f 90       	pop	r0
    1588:	1f 90       	pop	r1
    158a:	18 95       	reti

0000158c <__subsf3>:
    158c:	50 58       	subi	r21, 0x80	; 128

0000158e <__addsf3>:
    158e:	bb 27       	eor	r27, r27
    1590:	aa 27       	eor	r26, r26
    1592:	0e 94 de 0a 	call	0x15bc	; 0x15bc <__addsf3x>
    1596:	0c 94 51 0c 	jmp	0x18a2	; 0x18a2 <__fp_round>
    159a:	0e 94 43 0c 	call	0x1886	; 0x1886 <__fp_pscA>
    159e:	38 f0       	brcs	.+14     	; 0x15ae <__addsf3+0x20>
    15a0:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__fp_pscB>
    15a4:	20 f0       	brcs	.+8      	; 0x15ae <__addsf3+0x20>
    15a6:	39 f4       	brne	.+14     	; 0x15b6 <__addsf3+0x28>
    15a8:	9f 3f       	cpi	r25, 0xFF	; 255
    15aa:	19 f4       	brne	.+6      	; 0x15b2 <__addsf3+0x24>
    15ac:	26 f4       	brtc	.+8      	; 0x15b6 <__addsf3+0x28>
    15ae:	0c 94 40 0c 	jmp	0x1880	; 0x1880 <__fp_nan>
    15b2:	0e f4       	brtc	.+2      	; 0x15b6 <__addsf3+0x28>
    15b4:	e0 95       	com	r30
    15b6:	e7 fb       	bst	r30, 7
    15b8:	0c 94 3a 0c 	jmp	0x1874	; 0x1874 <__fp_inf>

000015bc <__addsf3x>:
    15bc:	e9 2f       	mov	r30, r25
    15be:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <__fp_split3>
    15c2:	58 f3       	brcs	.-42     	; 0x159a <__addsf3+0xc>
    15c4:	ba 17       	cp	r27, r26
    15c6:	62 07       	cpc	r22, r18
    15c8:	73 07       	cpc	r23, r19
    15ca:	84 07       	cpc	r24, r20
    15cc:	95 07       	cpc	r25, r21
    15ce:	20 f0       	brcs	.+8      	; 0x15d8 <__addsf3x+0x1c>
    15d0:	79 f4       	brne	.+30     	; 0x15f0 <__addsf3x+0x34>
    15d2:	a6 f5       	brtc	.+104    	; 0x163c <__addsf3x+0x80>
    15d4:	0c 94 84 0c 	jmp	0x1908	; 0x1908 <__fp_zero>
    15d8:	0e f4       	brtc	.+2      	; 0x15dc <__addsf3x+0x20>
    15da:	e0 95       	com	r30
    15dc:	0b 2e       	mov	r0, r27
    15de:	ba 2f       	mov	r27, r26
    15e0:	a0 2d       	mov	r26, r0
    15e2:	0b 01       	movw	r0, r22
    15e4:	b9 01       	movw	r22, r18
    15e6:	90 01       	movw	r18, r0
    15e8:	0c 01       	movw	r0, r24
    15ea:	ca 01       	movw	r24, r20
    15ec:	a0 01       	movw	r20, r0
    15ee:	11 24       	eor	r1, r1
    15f0:	ff 27       	eor	r31, r31
    15f2:	59 1b       	sub	r21, r25
    15f4:	99 f0       	breq	.+38     	; 0x161c <__addsf3x+0x60>
    15f6:	59 3f       	cpi	r21, 0xF9	; 249
    15f8:	50 f4       	brcc	.+20     	; 0x160e <__addsf3x+0x52>
    15fa:	50 3e       	cpi	r21, 0xE0	; 224
    15fc:	68 f1       	brcs	.+90     	; 0x1658 <__addsf3x+0x9c>
    15fe:	1a 16       	cp	r1, r26
    1600:	f0 40       	sbci	r31, 0x00	; 0
    1602:	a2 2f       	mov	r26, r18
    1604:	23 2f       	mov	r18, r19
    1606:	34 2f       	mov	r19, r20
    1608:	44 27       	eor	r20, r20
    160a:	58 5f       	subi	r21, 0xF8	; 248
    160c:	f3 cf       	rjmp	.-26     	; 0x15f4 <__addsf3x+0x38>
    160e:	46 95       	lsr	r20
    1610:	37 95       	ror	r19
    1612:	27 95       	ror	r18
    1614:	a7 95       	ror	r26
    1616:	f0 40       	sbci	r31, 0x00	; 0
    1618:	53 95       	inc	r21
    161a:	c9 f7       	brne	.-14     	; 0x160e <__addsf3x+0x52>
    161c:	7e f4       	brtc	.+30     	; 0x163c <__addsf3x+0x80>
    161e:	1f 16       	cp	r1, r31
    1620:	ba 0b       	sbc	r27, r26
    1622:	62 0b       	sbc	r22, r18
    1624:	73 0b       	sbc	r23, r19
    1626:	84 0b       	sbc	r24, r20
    1628:	ba f0       	brmi	.+46     	; 0x1658 <__addsf3x+0x9c>
    162a:	91 50       	subi	r25, 0x01	; 1
    162c:	a1 f0       	breq	.+40     	; 0x1656 <__addsf3x+0x9a>
    162e:	ff 0f       	add	r31, r31
    1630:	bb 1f       	adc	r27, r27
    1632:	66 1f       	adc	r22, r22
    1634:	77 1f       	adc	r23, r23
    1636:	88 1f       	adc	r24, r24
    1638:	c2 f7       	brpl	.-16     	; 0x162a <__addsf3x+0x6e>
    163a:	0e c0       	rjmp	.+28     	; 0x1658 <__addsf3x+0x9c>
    163c:	ba 0f       	add	r27, r26
    163e:	62 1f       	adc	r22, r18
    1640:	73 1f       	adc	r23, r19
    1642:	84 1f       	adc	r24, r20
    1644:	48 f4       	brcc	.+18     	; 0x1658 <__addsf3x+0x9c>
    1646:	87 95       	ror	r24
    1648:	77 95       	ror	r23
    164a:	67 95       	ror	r22
    164c:	b7 95       	ror	r27
    164e:	f7 95       	ror	r31
    1650:	9e 3f       	cpi	r25, 0xFE	; 254
    1652:	08 f0       	brcs	.+2      	; 0x1656 <__addsf3x+0x9a>
    1654:	b0 cf       	rjmp	.-160    	; 0x15b6 <__addsf3+0x28>
    1656:	93 95       	inc	r25
    1658:	88 0f       	add	r24, r24
    165a:	08 f0       	brcs	.+2      	; 0x165e <__addsf3x+0xa2>
    165c:	99 27       	eor	r25, r25
    165e:	ee 0f       	add	r30, r30
    1660:	97 95       	ror	r25
    1662:	87 95       	ror	r24
    1664:	08 95       	ret

00001666 <__cmpsf2>:
    1666:	0e 94 16 0c 	call	0x182c	; 0x182c <__fp_cmp>
    166a:	08 f4       	brcc	.+2      	; 0x166e <__cmpsf2+0x8>
    166c:	81 e0       	ldi	r24, 0x01	; 1
    166e:	08 95       	ret

00001670 <__divsf3>:
    1670:	0e 94 4c 0b 	call	0x1698	; 0x1698 <__divsf3x>
    1674:	0c 94 51 0c 	jmp	0x18a2	; 0x18a2 <__fp_round>
    1678:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__fp_pscB>
    167c:	58 f0       	brcs	.+22     	; 0x1694 <__divsf3+0x24>
    167e:	0e 94 43 0c 	call	0x1886	; 0x1886 <__fp_pscA>
    1682:	40 f0       	brcs	.+16     	; 0x1694 <__divsf3+0x24>
    1684:	29 f4       	brne	.+10     	; 0x1690 <__divsf3+0x20>
    1686:	5f 3f       	cpi	r21, 0xFF	; 255
    1688:	29 f0       	breq	.+10     	; 0x1694 <__divsf3+0x24>
    168a:	0c 94 3a 0c 	jmp	0x1874	; 0x1874 <__fp_inf>
    168e:	51 11       	cpse	r21, r1
    1690:	0c 94 85 0c 	jmp	0x190a	; 0x190a <__fp_szero>
    1694:	0c 94 40 0c 	jmp	0x1880	; 0x1880 <__fp_nan>

00001698 <__divsf3x>:
    1698:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <__fp_split3>
    169c:	68 f3       	brcs	.-38     	; 0x1678 <__divsf3+0x8>

0000169e <__divsf3_pse>:
    169e:	99 23       	and	r25, r25
    16a0:	b1 f3       	breq	.-20     	; 0x168e <__divsf3+0x1e>
    16a2:	55 23       	and	r21, r21
    16a4:	91 f3       	breq	.-28     	; 0x168a <__divsf3+0x1a>
    16a6:	95 1b       	sub	r25, r21
    16a8:	55 0b       	sbc	r21, r21
    16aa:	bb 27       	eor	r27, r27
    16ac:	aa 27       	eor	r26, r26
    16ae:	62 17       	cp	r22, r18
    16b0:	73 07       	cpc	r23, r19
    16b2:	84 07       	cpc	r24, r20
    16b4:	38 f0       	brcs	.+14     	; 0x16c4 <__divsf3_pse+0x26>
    16b6:	9f 5f       	subi	r25, 0xFF	; 255
    16b8:	5f 4f       	sbci	r21, 0xFF	; 255
    16ba:	22 0f       	add	r18, r18
    16bc:	33 1f       	adc	r19, r19
    16be:	44 1f       	adc	r20, r20
    16c0:	aa 1f       	adc	r26, r26
    16c2:	a9 f3       	breq	.-22     	; 0x16ae <__divsf3_pse+0x10>
    16c4:	35 d0       	rcall	.+106    	; 0x1730 <__divsf3_pse+0x92>
    16c6:	0e 2e       	mov	r0, r30
    16c8:	3a f0       	brmi	.+14     	; 0x16d8 <__divsf3_pse+0x3a>
    16ca:	e0 e8       	ldi	r30, 0x80	; 128
    16cc:	32 d0       	rcall	.+100    	; 0x1732 <__divsf3_pse+0x94>
    16ce:	91 50       	subi	r25, 0x01	; 1
    16d0:	50 40       	sbci	r21, 0x00	; 0
    16d2:	e6 95       	lsr	r30
    16d4:	00 1c       	adc	r0, r0
    16d6:	ca f7       	brpl	.-14     	; 0x16ca <__divsf3_pse+0x2c>
    16d8:	2b d0       	rcall	.+86     	; 0x1730 <__divsf3_pse+0x92>
    16da:	fe 2f       	mov	r31, r30
    16dc:	29 d0       	rcall	.+82     	; 0x1730 <__divsf3_pse+0x92>
    16de:	66 0f       	add	r22, r22
    16e0:	77 1f       	adc	r23, r23
    16e2:	88 1f       	adc	r24, r24
    16e4:	bb 1f       	adc	r27, r27
    16e6:	26 17       	cp	r18, r22
    16e8:	37 07       	cpc	r19, r23
    16ea:	48 07       	cpc	r20, r24
    16ec:	ab 07       	cpc	r26, r27
    16ee:	b0 e8       	ldi	r27, 0x80	; 128
    16f0:	09 f0       	breq	.+2      	; 0x16f4 <__divsf3_pse+0x56>
    16f2:	bb 0b       	sbc	r27, r27
    16f4:	80 2d       	mov	r24, r0
    16f6:	bf 01       	movw	r22, r30
    16f8:	ff 27       	eor	r31, r31
    16fa:	93 58       	subi	r25, 0x83	; 131
    16fc:	5f 4f       	sbci	r21, 0xFF	; 255
    16fe:	3a f0       	brmi	.+14     	; 0x170e <__divsf3_pse+0x70>
    1700:	9e 3f       	cpi	r25, 0xFE	; 254
    1702:	51 05       	cpc	r21, r1
    1704:	78 f0       	brcs	.+30     	; 0x1724 <__divsf3_pse+0x86>
    1706:	0c 94 3a 0c 	jmp	0x1874	; 0x1874 <__fp_inf>
    170a:	0c 94 85 0c 	jmp	0x190a	; 0x190a <__fp_szero>
    170e:	5f 3f       	cpi	r21, 0xFF	; 255
    1710:	e4 f3       	brlt	.-8      	; 0x170a <__divsf3_pse+0x6c>
    1712:	98 3e       	cpi	r25, 0xE8	; 232
    1714:	d4 f3       	brlt	.-12     	; 0x170a <__divsf3_pse+0x6c>
    1716:	86 95       	lsr	r24
    1718:	77 95       	ror	r23
    171a:	67 95       	ror	r22
    171c:	b7 95       	ror	r27
    171e:	f7 95       	ror	r31
    1720:	9f 5f       	subi	r25, 0xFF	; 255
    1722:	c9 f7       	brne	.-14     	; 0x1716 <__divsf3_pse+0x78>
    1724:	88 0f       	add	r24, r24
    1726:	91 1d       	adc	r25, r1
    1728:	96 95       	lsr	r25
    172a:	87 95       	ror	r24
    172c:	97 f9       	bld	r25, 7
    172e:	08 95       	ret
    1730:	e1 e0       	ldi	r30, 0x01	; 1
    1732:	66 0f       	add	r22, r22
    1734:	77 1f       	adc	r23, r23
    1736:	88 1f       	adc	r24, r24
    1738:	bb 1f       	adc	r27, r27
    173a:	62 17       	cp	r22, r18
    173c:	73 07       	cpc	r23, r19
    173e:	84 07       	cpc	r24, r20
    1740:	ba 07       	cpc	r27, r26
    1742:	20 f0       	brcs	.+8      	; 0x174c <__divsf3_pse+0xae>
    1744:	62 1b       	sub	r22, r18
    1746:	73 0b       	sbc	r23, r19
    1748:	84 0b       	sbc	r24, r20
    174a:	ba 0b       	sbc	r27, r26
    174c:	ee 1f       	adc	r30, r30
    174e:	88 f7       	brcc	.-30     	; 0x1732 <__divsf3_pse+0x94>
    1750:	e0 95       	com	r30
    1752:	08 95       	ret

00001754 <__fixunssfsi>:
    1754:	0e 94 6a 0c 	call	0x18d4	; 0x18d4 <__fp_splitA>
    1758:	88 f0       	brcs	.+34     	; 0x177c <__fixunssfsi+0x28>
    175a:	9f 57       	subi	r25, 0x7F	; 127
    175c:	98 f0       	brcs	.+38     	; 0x1784 <__fixunssfsi+0x30>
    175e:	b9 2f       	mov	r27, r25
    1760:	99 27       	eor	r25, r25
    1762:	b7 51       	subi	r27, 0x17	; 23
    1764:	b0 f0       	brcs	.+44     	; 0x1792 <__fixunssfsi+0x3e>
    1766:	e1 f0       	breq	.+56     	; 0x17a0 <__fixunssfsi+0x4c>
    1768:	66 0f       	add	r22, r22
    176a:	77 1f       	adc	r23, r23
    176c:	88 1f       	adc	r24, r24
    176e:	99 1f       	adc	r25, r25
    1770:	1a f0       	brmi	.+6      	; 0x1778 <__fixunssfsi+0x24>
    1772:	ba 95       	dec	r27
    1774:	c9 f7       	brne	.-14     	; 0x1768 <__fixunssfsi+0x14>
    1776:	14 c0       	rjmp	.+40     	; 0x17a0 <__fixunssfsi+0x4c>
    1778:	b1 30       	cpi	r27, 0x01	; 1
    177a:	91 f0       	breq	.+36     	; 0x17a0 <__fixunssfsi+0x4c>
    177c:	0e 94 84 0c 	call	0x1908	; 0x1908 <__fp_zero>
    1780:	b1 e0       	ldi	r27, 0x01	; 1
    1782:	08 95       	ret
    1784:	0c 94 84 0c 	jmp	0x1908	; 0x1908 <__fp_zero>
    1788:	67 2f       	mov	r22, r23
    178a:	78 2f       	mov	r23, r24
    178c:	88 27       	eor	r24, r24
    178e:	b8 5f       	subi	r27, 0xF8	; 248
    1790:	39 f0       	breq	.+14     	; 0x17a0 <__fixunssfsi+0x4c>
    1792:	b9 3f       	cpi	r27, 0xF9	; 249
    1794:	cc f3       	brlt	.-14     	; 0x1788 <__fixunssfsi+0x34>
    1796:	86 95       	lsr	r24
    1798:	77 95       	ror	r23
    179a:	67 95       	ror	r22
    179c:	b3 95       	inc	r27
    179e:	d9 f7       	brne	.-10     	; 0x1796 <__fixunssfsi+0x42>
    17a0:	3e f4       	brtc	.+14     	; 0x17b0 <__fixunssfsi+0x5c>
    17a2:	90 95       	com	r25
    17a4:	80 95       	com	r24
    17a6:	70 95       	com	r23
    17a8:	61 95       	neg	r22
    17aa:	7f 4f       	sbci	r23, 0xFF	; 255
    17ac:	8f 4f       	sbci	r24, 0xFF	; 255
    17ae:	9f 4f       	sbci	r25, 0xFF	; 255
    17b0:	08 95       	ret

000017b2 <__floatunsisf>:
    17b2:	e8 94       	clt
    17b4:	09 c0       	rjmp	.+18     	; 0x17c8 <__floatsisf+0x12>

000017b6 <__floatsisf>:
    17b6:	97 fb       	bst	r25, 7
    17b8:	3e f4       	brtc	.+14     	; 0x17c8 <__floatsisf+0x12>
    17ba:	90 95       	com	r25
    17bc:	80 95       	com	r24
    17be:	70 95       	com	r23
    17c0:	61 95       	neg	r22
    17c2:	7f 4f       	sbci	r23, 0xFF	; 255
    17c4:	8f 4f       	sbci	r24, 0xFF	; 255
    17c6:	9f 4f       	sbci	r25, 0xFF	; 255
    17c8:	99 23       	and	r25, r25
    17ca:	a9 f0       	breq	.+42     	; 0x17f6 <__floatsisf+0x40>
    17cc:	f9 2f       	mov	r31, r25
    17ce:	96 e9       	ldi	r25, 0x96	; 150
    17d0:	bb 27       	eor	r27, r27
    17d2:	93 95       	inc	r25
    17d4:	f6 95       	lsr	r31
    17d6:	87 95       	ror	r24
    17d8:	77 95       	ror	r23
    17da:	67 95       	ror	r22
    17dc:	b7 95       	ror	r27
    17de:	f1 11       	cpse	r31, r1
    17e0:	f8 cf       	rjmp	.-16     	; 0x17d2 <__floatsisf+0x1c>
    17e2:	fa f4       	brpl	.+62     	; 0x1822 <__floatsisf+0x6c>
    17e4:	bb 0f       	add	r27, r27
    17e6:	11 f4       	brne	.+4      	; 0x17ec <__floatsisf+0x36>
    17e8:	60 ff       	sbrs	r22, 0
    17ea:	1b c0       	rjmp	.+54     	; 0x1822 <__floatsisf+0x6c>
    17ec:	6f 5f       	subi	r22, 0xFF	; 255
    17ee:	7f 4f       	sbci	r23, 0xFF	; 255
    17f0:	8f 4f       	sbci	r24, 0xFF	; 255
    17f2:	9f 4f       	sbci	r25, 0xFF	; 255
    17f4:	16 c0       	rjmp	.+44     	; 0x1822 <__floatsisf+0x6c>
    17f6:	88 23       	and	r24, r24
    17f8:	11 f0       	breq	.+4      	; 0x17fe <__floatsisf+0x48>
    17fa:	96 e9       	ldi	r25, 0x96	; 150
    17fc:	11 c0       	rjmp	.+34     	; 0x1820 <__floatsisf+0x6a>
    17fe:	77 23       	and	r23, r23
    1800:	21 f0       	breq	.+8      	; 0x180a <__floatsisf+0x54>
    1802:	9e e8       	ldi	r25, 0x8E	; 142
    1804:	87 2f       	mov	r24, r23
    1806:	76 2f       	mov	r23, r22
    1808:	05 c0       	rjmp	.+10     	; 0x1814 <__floatsisf+0x5e>
    180a:	66 23       	and	r22, r22
    180c:	71 f0       	breq	.+28     	; 0x182a <__floatsisf+0x74>
    180e:	96 e8       	ldi	r25, 0x86	; 134
    1810:	86 2f       	mov	r24, r22
    1812:	70 e0       	ldi	r23, 0x00	; 0
    1814:	60 e0       	ldi	r22, 0x00	; 0
    1816:	2a f0       	brmi	.+10     	; 0x1822 <__floatsisf+0x6c>
    1818:	9a 95       	dec	r25
    181a:	66 0f       	add	r22, r22
    181c:	77 1f       	adc	r23, r23
    181e:	88 1f       	adc	r24, r24
    1820:	da f7       	brpl	.-10     	; 0x1818 <__floatsisf+0x62>
    1822:	88 0f       	add	r24, r24
    1824:	96 95       	lsr	r25
    1826:	87 95       	ror	r24
    1828:	97 f9       	bld	r25, 7
    182a:	08 95       	ret

0000182c <__fp_cmp>:
    182c:	99 0f       	add	r25, r25
    182e:	00 08       	sbc	r0, r0
    1830:	55 0f       	add	r21, r21
    1832:	aa 0b       	sbc	r26, r26
    1834:	e0 e8       	ldi	r30, 0x80	; 128
    1836:	fe ef       	ldi	r31, 0xFE	; 254
    1838:	16 16       	cp	r1, r22
    183a:	17 06       	cpc	r1, r23
    183c:	e8 07       	cpc	r30, r24
    183e:	f9 07       	cpc	r31, r25
    1840:	c0 f0       	brcs	.+48     	; 0x1872 <__fp_cmp+0x46>
    1842:	12 16       	cp	r1, r18
    1844:	13 06       	cpc	r1, r19
    1846:	e4 07       	cpc	r30, r20
    1848:	f5 07       	cpc	r31, r21
    184a:	98 f0       	brcs	.+38     	; 0x1872 <__fp_cmp+0x46>
    184c:	62 1b       	sub	r22, r18
    184e:	73 0b       	sbc	r23, r19
    1850:	84 0b       	sbc	r24, r20
    1852:	95 0b       	sbc	r25, r21
    1854:	39 f4       	brne	.+14     	; 0x1864 <__fp_cmp+0x38>
    1856:	0a 26       	eor	r0, r26
    1858:	61 f0       	breq	.+24     	; 0x1872 <__fp_cmp+0x46>
    185a:	23 2b       	or	r18, r19
    185c:	24 2b       	or	r18, r20
    185e:	25 2b       	or	r18, r21
    1860:	21 f4       	brne	.+8      	; 0x186a <__fp_cmp+0x3e>
    1862:	08 95       	ret
    1864:	0a 26       	eor	r0, r26
    1866:	09 f4       	brne	.+2      	; 0x186a <__fp_cmp+0x3e>
    1868:	a1 40       	sbci	r26, 0x01	; 1
    186a:	a6 95       	lsr	r26
    186c:	8f ef       	ldi	r24, 0xFF	; 255
    186e:	81 1d       	adc	r24, r1
    1870:	81 1d       	adc	r24, r1
    1872:	08 95       	ret

00001874 <__fp_inf>:
    1874:	97 f9       	bld	r25, 7
    1876:	9f 67       	ori	r25, 0x7F	; 127
    1878:	80 e8       	ldi	r24, 0x80	; 128
    187a:	70 e0       	ldi	r23, 0x00	; 0
    187c:	60 e0       	ldi	r22, 0x00	; 0
    187e:	08 95       	ret

00001880 <__fp_nan>:
    1880:	9f ef       	ldi	r25, 0xFF	; 255
    1882:	80 ec       	ldi	r24, 0xC0	; 192
    1884:	08 95       	ret

00001886 <__fp_pscA>:
    1886:	00 24       	eor	r0, r0
    1888:	0a 94       	dec	r0
    188a:	16 16       	cp	r1, r22
    188c:	17 06       	cpc	r1, r23
    188e:	18 06       	cpc	r1, r24
    1890:	09 06       	cpc	r0, r25
    1892:	08 95       	ret

00001894 <__fp_pscB>:
    1894:	00 24       	eor	r0, r0
    1896:	0a 94       	dec	r0
    1898:	12 16       	cp	r1, r18
    189a:	13 06       	cpc	r1, r19
    189c:	14 06       	cpc	r1, r20
    189e:	05 06       	cpc	r0, r21
    18a0:	08 95       	ret

000018a2 <__fp_round>:
    18a2:	09 2e       	mov	r0, r25
    18a4:	03 94       	inc	r0
    18a6:	00 0c       	add	r0, r0
    18a8:	11 f4       	brne	.+4      	; 0x18ae <__fp_round+0xc>
    18aa:	88 23       	and	r24, r24
    18ac:	52 f0       	brmi	.+20     	; 0x18c2 <__fp_round+0x20>
    18ae:	bb 0f       	add	r27, r27
    18b0:	40 f4       	brcc	.+16     	; 0x18c2 <__fp_round+0x20>
    18b2:	bf 2b       	or	r27, r31
    18b4:	11 f4       	brne	.+4      	; 0x18ba <__fp_round+0x18>
    18b6:	60 ff       	sbrs	r22, 0
    18b8:	04 c0       	rjmp	.+8      	; 0x18c2 <__fp_round+0x20>
    18ba:	6f 5f       	subi	r22, 0xFF	; 255
    18bc:	7f 4f       	sbci	r23, 0xFF	; 255
    18be:	8f 4f       	sbci	r24, 0xFF	; 255
    18c0:	9f 4f       	sbci	r25, 0xFF	; 255
    18c2:	08 95       	ret

000018c4 <__fp_split3>:
    18c4:	57 fd       	sbrc	r21, 7
    18c6:	90 58       	subi	r25, 0x80	; 128
    18c8:	44 0f       	add	r20, r20
    18ca:	55 1f       	adc	r21, r21
    18cc:	59 f0       	breq	.+22     	; 0x18e4 <__fp_splitA+0x10>
    18ce:	5f 3f       	cpi	r21, 0xFF	; 255
    18d0:	71 f0       	breq	.+28     	; 0x18ee <__fp_splitA+0x1a>
    18d2:	47 95       	ror	r20

000018d4 <__fp_splitA>:
    18d4:	88 0f       	add	r24, r24
    18d6:	97 fb       	bst	r25, 7
    18d8:	99 1f       	adc	r25, r25
    18da:	61 f0       	breq	.+24     	; 0x18f4 <__fp_splitA+0x20>
    18dc:	9f 3f       	cpi	r25, 0xFF	; 255
    18de:	79 f0       	breq	.+30     	; 0x18fe <__fp_splitA+0x2a>
    18e0:	87 95       	ror	r24
    18e2:	08 95       	ret
    18e4:	12 16       	cp	r1, r18
    18e6:	13 06       	cpc	r1, r19
    18e8:	14 06       	cpc	r1, r20
    18ea:	55 1f       	adc	r21, r21
    18ec:	f2 cf       	rjmp	.-28     	; 0x18d2 <__fp_split3+0xe>
    18ee:	46 95       	lsr	r20
    18f0:	f1 df       	rcall	.-30     	; 0x18d4 <__fp_splitA>
    18f2:	08 c0       	rjmp	.+16     	; 0x1904 <__fp_splitA+0x30>
    18f4:	16 16       	cp	r1, r22
    18f6:	17 06       	cpc	r1, r23
    18f8:	18 06       	cpc	r1, r24
    18fa:	99 1f       	adc	r25, r25
    18fc:	f1 cf       	rjmp	.-30     	; 0x18e0 <__fp_splitA+0xc>
    18fe:	86 95       	lsr	r24
    1900:	71 05       	cpc	r23, r1
    1902:	61 05       	cpc	r22, r1
    1904:	08 94       	sec
    1906:	08 95       	ret

00001908 <__fp_zero>:
    1908:	e8 94       	clt

0000190a <__fp_szero>:
    190a:	bb 27       	eor	r27, r27
    190c:	66 27       	eor	r22, r22
    190e:	77 27       	eor	r23, r23
    1910:	cb 01       	movw	r24, r22
    1912:	97 f9       	bld	r25, 7
    1914:	08 95       	ret

00001916 <__gesf2>:
    1916:	0e 94 16 0c 	call	0x182c	; 0x182c <__fp_cmp>
    191a:	08 f4       	brcc	.+2      	; 0x191e <__gesf2+0x8>
    191c:	8f ef       	ldi	r24, 0xFF	; 255
    191e:	08 95       	ret

00001920 <__tablejump2__>:
    1920:	ee 0f       	add	r30, r30
    1922:	ff 1f       	adc	r31, r31
    1924:	05 90       	lpm	r0, Z+
    1926:	f4 91       	lpm	r31, Z
    1928:	e0 2d       	mov	r30, r0
    192a:	09 94       	ijmp

0000192c <_exit>:
    192c:	f8 94       	cli

0000192e <__stop_program>:
    192e:	ff cf       	rjmp	.-2      	; 0x192e <__stop_program>
