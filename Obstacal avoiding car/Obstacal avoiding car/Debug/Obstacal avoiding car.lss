
Obstacal avoiding car.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
<<<<<<< HEAD
  0 .text         000015fe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000062  00800060  000015fe  00001692  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002a  008000c2  008000c2  000016f4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000016f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001724  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000318  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000034cb  00000000  00000000  00001a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001292  00000000  00000000  00004f43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002181  00000000  00000000  000061d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000794  00000000  00000000  00008358  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001089  00000000  00000000  00008aec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002336  00000000  00000000  00009b75  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000278  00000000  00000000  0000beab  2**0
=======
  0 .text         00001756  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000062  00800060  00001756  000017ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002a  008000c2  008000c2  0000184c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000184c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000187c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000318  00000000  00000000  000018b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003535  00000000  00000000  00001bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000127a  00000000  00000000  00005105  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002187  00000000  00000000  0000637f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000794  00000000  00000000  00008508  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001114  00000000  00000000  00008c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002336  00000000  00000000  00009db0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000278  00000000  00000000  0000c0e6  2**0
>>>>>>> main
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
<<<<<<< HEAD
       4:	0c 94 46 06 	jmp	0xc8c	; 0xc8c <__vector_1>
       8:	0c 94 6d 06 	jmp	0xcda	; 0xcda <__vector_2>
       c:	0c 94 94 06 	jmp	0xd28	; 0xd28 <__vector_3>
      10:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      14:	0c 94 56 09 	jmp	0x12ac	; 0x12ac <__vector_5>
      18:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      1c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      20:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      24:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__vector_9>
      28:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      2c:	0c 94 bb 06 	jmp	0xd76	; 0xd76 <__vector_11>
=======
       4:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <__vector_1>
       8:	0c 94 a2 06 	jmp	0xd44	; 0xd44 <__vector_2>
       c:	0c 94 c9 06 	jmp	0xd92	; 0xd92 <__vector_3>
      10:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      14:	0c 94 02 0a 	jmp	0x1404	; 0x1404 <__vector_5>
      18:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      1c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      20:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      24:	0c 94 20 07 	jmp	0xe40	; 0xe40 <__vector_9>
      28:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      2c:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <__vector_11>
>>>>>>> main
      30:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      34:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      38:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      3c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      40:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      44:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      48:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      4c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      50:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
<<<<<<< HEAD
      54:	c4 07       	cpc	r28, r20
      56:	cf 07       	cpc	r28, r31
      58:	da 07       	cpc	r29, r26
      5a:	ea 08       	sbc	r14, r10
      5c:	e5 07       	cpc	r30, r21
      5e:	ea 08       	sbc	r14, r10
      60:	f0 07       	cpc	r31, r16
      62:	fb 07       	cpc	r31, r27
      64:	06 08       	sbc	r0, r6
      66:	11 08       	sbc	r1, r1
      68:	27 08       	sbc	r2, r7
      6a:	32 08       	sbc	r3, r2
      6c:	3d 08       	sbc	r3, r13
      6e:	ec 08       	sbc	r14, r12
      70:	48 08       	sbc	r4, r8
      72:	ec 08       	sbc	r14, r12
      74:	53 08       	sbc	r5, r3
      76:	5e 08       	sbc	r5, r14
      78:	69 08       	sbc	r6, r9
      7a:	74 08       	sbc	r7, r4
      7c:	8a 08       	sbc	r8, r10
      7e:	95 08       	sbc	r9, r5
      80:	a0 08       	sbc	r10, r0
      82:	ab 08       	sbc	r10, r11
      84:	b6 08       	sbc	r11, r6
      86:	c1 08       	sbc	r12, r1
      88:	cc 08       	sbc	r12, r12
      8a:	d7 08       	sbc	r13, r7
=======
      54:	f9 07       	cpc	r31, r25
      56:	04 08       	sbc	r0, r4
      58:	0f 08       	sbc	r0, r15
      5a:	1f 09       	sbc	r17, r15
      5c:	1a 08       	sbc	r1, r10
      5e:	1f 09       	sbc	r17, r15
      60:	25 08       	sbc	r2, r5
      62:	30 08       	sbc	r3, r0
      64:	3b 08       	sbc	r3, r11
      66:	46 08       	sbc	r4, r6
      68:	5c 08       	sbc	r5, r12
      6a:	67 08       	sbc	r6, r7
      6c:	72 08       	sbc	r7, r2
      6e:	21 09       	sbc	r18, r1
      70:	7d 08       	sbc	r7, r13
      72:	21 09       	sbc	r18, r1
      74:	88 08       	sbc	r8, r8
      76:	93 08       	sbc	r9, r3
      78:	9e 08       	sbc	r9, r14
      7a:	a9 08       	sbc	r10, r9
      7c:	bf 08       	sbc	r11, r15
      7e:	ca 08       	sbc	r12, r10
      80:	d5 08       	sbc	r13, r5
      82:	e0 08       	sbc	r14, r0
      84:	eb 08       	sbc	r14, r11
      86:	f6 08       	sbc	r15, r6
      88:	01 09       	sbc	r16, r1
      8a:	0c 09       	sbc	r16, r12
>>>>>>> main

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf e5       	ldi	r28, 0x5F	; 95
      92:	d8 e0       	ldi	r29, 0x08	; 8
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	10 e0       	ldi	r17, 0x00	; 0
      9a:	a0 e6       	ldi	r26, 0x60	; 96
      9c:	b0 e0       	ldi	r27, 0x00	; 0
<<<<<<< HEAD
      9e:	ee ef       	ldi	r30, 0xFE	; 254
      a0:	f5 e1       	ldi	r31, 0x15	; 21
=======
      9e:	e6 e5       	ldi	r30, 0x56	; 86
      a0:	f7 e1       	ldi	r31, 0x17	; 23
>>>>>>> main
      a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
      a4:	05 90       	lpm	r0, Z+
      a6:	0d 92       	st	X+, r0
      a8:	a2 3c       	cpi	r26, 0xC2	; 194
      aa:	b1 07       	cpc	r27, r17
      ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>

000000ae <__do_clear_bss>:
      ae:	20 e0       	ldi	r18, 0x00	; 0
      b0:	a2 ec       	ldi	r26, 0xC2	; 194
      b2:	b0 e0       	ldi	r27, 0x00	; 0
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <.do_clear_bss_start>

000000b6 <.do_clear_bss_loop>:
      b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
      b8:	ac 3e       	cpi	r26, 0xEC	; 236
      ba:	b2 07       	cpc	r27, r18
      bc:	e1 f7       	brne	.-8      	; 0xb6 <.do_clear_bss_loop>
<<<<<<< HEAD
      be:	0e 94 89 04 	call	0x912	; 0x912 <main>
      c2:	0c 94 fd 0a 	jmp	0x15fa	; 0x15fa <_exit>
=======
      be:	0e 94 be 04 	call	0x97c	; 0x97c <main>
      c2:	0c 94 a9 0b 	jmp	0x1752	; 0x1752 <_exit>
>>>>>>> main

000000c6 <__bad_interrupt>:
      c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ca <BUTTON_vidChangeDir>:
/************************************************************************************************/

void BUTTON_vidChangeDir(void)
{
	static Uint16_t counter = 0, L_flag = 0;
	counter += 2;
      ca:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <counter.1958>
      ce:	90 91 c5 00 	lds	r25, 0x00C5	; 0x8000c5 <counter.1958+0x1>
      d2:	02 96       	adiw	r24, 0x02	; 2
      d4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <counter.1958+0x1>
      d8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <counter.1958>
	if (counter % 2 == 0) {HLCD_ClrDisplay();}
<<<<<<< HEAD
      e8:	80 ff       	sbrs	r24, 0
      ea:	0e 94 bc 02 	call	0x578	; 0x578 <HLCD_ClrDisplay>
=======
      dc:	80 ff       	sbrs	r24, 0
      de:	0e 94 c1 02 	call	0x582	; 0x582 <HLCD_ClrDisplay>
>>>>>>> main
		
		if (L_flag == 0)
      e2:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <__data_end>
      e6:	90 91 c3 00 	lds	r25, 0x00C3	; 0x8000c3 <__data_end+0x1>
      ea:	00 97       	sbiw	r24, 0x00	; 0
      ec:	69 f4       	brne	.+26     	; 0x108 <BUTTON_vidChangeDir+0x3e>
			{g_u8_motorDir = "Left"; L_flag = 1;}
      ee:	81 e8       	ldi	r24, 0x81	; 129
      f0:	90 e0       	ldi	r25, 0x00	; 0
      f2:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <g_u8_motorDir+0x1>
      f6:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <g_u8_motorDir>
      fa:	81 e0       	ldi	r24, 0x01	; 1
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	90 93 c3 00 	sts	0x00C3, r25	; 0x8000c3 <__data_end+0x1>
     102:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__data_end>
     106:	08 95       	ret
		else if (L_flag == 1)
     108:	01 97       	sbiw	r24, 0x01	; 1
     10a:	51 f4       	brne	.+20     	; 0x120 <BUTTON_vidChangeDir+0x56>
		{
			g_u8_motorDir = "Right"; L_flag = 0;
     10c:	86 e8       	ldi	r24, 0x86	; 134
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <g_u8_motorDir+0x1>
     114:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <g_u8_motorDir>
     118:	10 92 c3 00 	sts	0x00C3, r1	; 0x8000c3 <__data_end+0x1>
     11c:	10 92 c2 00 	sts	0x00C2, r1	; 0x8000c2 <__data_end>
     120:	08 95       	ret

<<<<<<< HEAD
0000012e <APP_vidInit>:
=======
00000122 <TIMER1_callBackFunc>:
}


void TIMER1_callBackFunc(void)
{
	u8_g_OneSecTicks++;
     122:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <u8_g_OneSecTicks>
     126:	8f 5f       	subi	r24, 0xFF	; 255
     128:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <u8_g_OneSecTicks>
	TIMER_Manager_reset(&st_timer1Config);
     12c:	80 e6       	ldi	r24, 0x60	; 96
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	0e 94 00 04 	call	0x800	; 0x800 <TIMER_Manager_reset>
     134:	08 95       	ret

00000136 <APP_vidInit>:
/************************************************************************************************/
>>>>>>> main
/*									Function Implementation										*/
/************************************************************************************************/
void APP_vidInit(void)
{
<<<<<<< HEAD
/*    HULTRASONIC_vidInit();*/
	(void) HLCD_vidInit();
     12e:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <HLCD_vidInit>
	(void) KEYPAD_init(&st_gs_keypadConfig);
     132:	87 e6       	ldi	r24, 0x67	; 103
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	0e 94 08 03 	call	0x610	; 0x610 <KEYPAD_init>
	(void) HExtInt_enInit(INT_0, RISE_EDGE);
     13a:	63 e0       	ldi	r22, 0x03	; 3
     13c:	80 e0       	ldi	r24, 0x00	; 0
     13e:	0e 94 43 01 	call	0x286	; 0x286 <HExtInt_enInit>
	(void) TIMER_Manager_init (&st_timer1Config);
     142:	80 e6       	ldi	r24, 0x60	; 96
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	0e 94 c2 03 	call	0x784	; 0x784 <TIMER_Manager_init>
	
	HULTRASONIC_vidCBF_TIM(HULTRASONIC_vidTimerCBF);
     14a:	8b ef       	ldi	r24, 0xFB	; 251
     14c:	93 e0       	ldi	r25, 0x03	; 3
     14e:	0e 94 83 04 	call	0x906	; 0x906 <HULTRASONIC_vidCBF_TIM>
	HULTRASONIC_vidCBF_INT(HULTRASONIC_vidSigCalc);
     152:	8f e0       	ldi	r24, 0x0F	; 15
     154:	94 e0       	ldi	r25, 0x04	; 4
     156:	0e 94 86 04 	call	0x90c	; 0x90c <HULTRASONIC_vidCBF_INT>
	(void) HExtInt_enCBFInt0(BUTTON_vidChangeDir);
     15a:	8b e6       	ldi	r24, 0x6B	; 107
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HExtInt_enCBFInt0>
	
	DDRA = 0xFF;
     162:	8f ef       	ldi	r24, 0xFF	; 255
     164:	8a bb       	out	0x1a, r24	; 26
     166:	08 95       	ret

00000168 <APP_updateDirection>:
	u8_g_OneSecTicks++;
=======
    HULTRASONIC_vidInit();
     136:	0e 94 9a 04 	call	0x934	; 0x934 <HULTRASONIC_vidInit>
	(void) HLCD_vidInit();
     13a:	0e 94 e6 01 	call	0x3cc	; 0x3cc <HLCD_vidInit>
	(void) KEYPAD_init(&st_gs_keypadConfig);
     13e:	87 e6       	ldi	r24, 0x67	; 103
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	0e 94 0d 03 	call	0x61a	; 0x61a <KEYPAD_init>
	(void) HExtInt_enInit(INT_0, RISE_EDGE);
     146:	63 e0       	ldi	r22, 0x03	; 3
     148:	80 e0       	ldi	r24, 0x00	; 0
     14a:	0e 94 48 01 	call	0x290	; 0x290 <HExtInt_enInit>
	(void) TIMER_Manager_init (&st_timer1Config);
     14e:	80 e6       	ldi	r24, 0x60	; 96
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	0e 94 c7 03 	call	0x78e	; 0x78e <TIMER_Manager_init>
	
	HULTRASONIC_vidCBF_TIM(HULTRASONIC_vidTimerCBF);
     156:	82 e1       	ldi	r24, 0x12	; 18
     158:	94 e0       	ldi	r25, 0x04	; 4
     15a:	0e 94 b8 04 	call	0x970	; 0x970 <HULTRASONIC_vidCBF_TIM>
	HULTRASONIC_vidCBF_INT(HULTRASONIC_vidSigCalc);
     15e:	86 e2       	ldi	r24, 0x26	; 38
     160:	94 e0       	ldi	r25, 0x04	; 4
     162:	0e 94 bb 04 	call	0x976	; 0x976 <HULTRASONIC_vidCBF_INT>
	(void) HExtInt_enCBFInt0(BUTTON_vidChangeDir);
     166:	85 e6       	ldi	r24, 0x65	; 101
     168:	90 e0       	ldi	r25, 0x00	; 0
     16a:	0e 94 5e 01 	call	0x2bc	; 0x2bc <HExtInt_enCBFInt0>
	//sei();
	DDRA = 0xFF;
     16e:	8f ef       	ldi	r24, 0xFF	; 255
     170:	8a bb       	out	0x1a, r24	; 26
     172:	08 95       	ret

00000174 <APP_updateDirection>:
	TIMER_Manager_reset(&st_timer1Config);
>>>>>>> main
}

void APP_updateDirection(void)
{
	TIMER_Manager_start (&st_timer1Config);
<<<<<<< HEAD
     168:	80 e6       	ldi	r24, 0x60	; 96
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <TIMER_Manager_start>
	HExtInt0_enIntEnable();
     170:	0e 94 64 01 	call	0x2c8	; 0x2c8 <HExtInt0_enIntEnable>
	while(u8_g_OneSecTicks <= 5)
     174:	12 c0       	rjmp	.+36     	; 0x19a <APP_updateDirection+0x32>
	{
		HLCD_gotoXY(0,0);
     176:	60 e0       	ldi	r22, 0x00	; 0
     178:	80 e0       	ldi	r24, 0x00	; 0
     17a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <HLCD_gotoXY>
		HLCD_WriteString( (uint8_t*) "Set Def. Rot.");
     17e:	8c e8       	ldi	r24, 0x8C	; 140
     180:	90 e0       	ldi	r25, 0x00	; 0
     182:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <HLCD_WriteString>
		HLCD_gotoXY(1,0);
     186:	60 e0       	ldi	r22, 0x00	; 0
     188:	81 e0       	ldi	r24, 0x01	; 1
     18a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <HLCD_gotoXY>
		HLCD_WriteString(g_u8_motorDir);
     18e:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <g_u8_motorDir>
     192:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <g_u8_motorDir+0x1>
     196:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <HLCD_WriteString>
=======
     174:	80 e6       	ldi	r24, 0x60	; 96
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	0e 94 e7 03 	call	0x7ce	; 0x7ce <TIMER_Manager_start>
	HExtInt0_enIntEnable();
     17c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <HExtInt0_enIntEnable>
	while(u8_g_OneSecTicks <= 5)
     180:	12 c0       	rjmp	.+36     	; 0x1a6 <APP_updateDirection+0x32>
	{
		HLCD_gotoXY(0,0);
     182:	60 e0       	ldi	r22, 0x00	; 0
     184:	80 e0       	ldi	r24, 0x00	; 0
     186:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <HLCD_gotoXY>
		HLCD_WriteString( (uint8_t*) "Set Def. Rot.");
     18a:	8c e8       	ldi	r24, 0x8C	; 140
     18c:	90 e0       	ldi	r25, 0x00	; 0
     18e:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <HLCD_WriteString>
		HLCD_gotoXY(1,0);
     192:	60 e0       	ldi	r22, 0x00	; 0
     194:	81 e0       	ldi	r24, 0x01	; 1
     196:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <HLCD_gotoXY>
		HLCD_WriteString(g_u8_motorDir);
     19a:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <g_u8_motorDir>
     19e:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <g_u8_motorDir+0x1>
     1a2:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <HLCD_WriteString>
>>>>>>> main

void APP_updateDirection(void)
{
	TIMER_Manager_start (&st_timer1Config);
	HExtInt0_enIntEnable();
	while(u8_g_OneSecTicks <= 5)
<<<<<<< HEAD
     19a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <u8_g_OneSecTicks>
     19e:	86 30       	cpi	r24, 0x06	; 6
     1a0:	50 f3       	brcs	.-44     	; 0x176 <APP_updateDirection+0xe>
		HLCD_gotoXY(0,0);
		HLCD_WriteString( (uint8_t*) "Set Def. Rot.");
=======
     1a6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <u8_g_OneSecTicks>
     1aa:	86 30       	cpi	r24, 0x06	; 6
     1ac:	50 f3       	brcs	.-44     	; 0x182 <APP_updateDirection+0xe>
>>>>>>> main
		HLCD_gotoXY(1,0);
		HLCD_WriteString(g_u8_motorDir);
		//PORTA = u8_g_OneSecTicks;
	}
<<<<<<< HEAD
	PORTA = u8_g_OneSecTicks;
     1a2:	8b bb       	out	0x1b, r24	; 27
	HLCD_ClrDisplay();
     1a4:	0e 94 bc 02 	call	0x578	; 0x578 <HLCD_ClrDisplay>
	(void) TIMER_Manager_stop (st_timer1Config.u8_timerNum);
     1a8:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     1ac:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <TIMER_Manager_stop>
	HExtInt0_enIntDisable();
     1b0:	0e 94 61 01 	call	0x2c2	; 0x2c2 <HExtInt0_enIntDisable>
     1b4:	08 95       	ret

000001b6 <APP_vidStart>:
=======
	
	HLCD_ClrDisplay();
     1ae:	0e 94 c1 02 	call	0x582	; 0x582 <HLCD_ClrDisplay>
	(void) TIMER_Manager_stop (st_timer1Config.u8_timerNum);
     1b2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     1b6:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <TIMER_Manager_stop>
	HExtInt0_enIntDisable();
     1ba:	0e 94 66 01 	call	0x2cc	; 0x2cc <HExtInt0_enIntDisable>
     1be:	08 95       	ret

000001c0 <APP_vidStart>:
>>>>>>> main
	DDRA = 0xFF;
}

void APP_vidStart(void)
{
	(void) KEYPAD_read(&u8KeyRead);
<<<<<<< HEAD
     1b6:	82 ee       	ldi	r24, 0xE2	; 226
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	0e 94 45 03 	call	0x68a	; 0x68a <KEYPAD_read>
	
	 if (u8KeyRead != 'N')
     1be:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <u8KeyRead>
     1c2:	8e 34       	cpi	r24, 0x4E	; 78
     1c4:	f1 f0       	breq	.+60     	; 0x202 <APP_vidStart+0x4c>
	 {
		 switch(u8KeyRead)
     1c6:	81 33       	cpi	r24, 0x31	; 49
     1c8:	19 f0       	breq	.+6      	; 0x1d0 <APP_vidStart+0x1a>
     1ca:	82 33       	cpi	r24, 0x32	; 50
     1cc:	61 f0       	breq	.+24     	; 0x1e6 <APP_vidStart+0x30>
     1ce:	16 c0       	rjmp	.+44     	; 0x1fc <APP_vidStart+0x46>
		 {
			 case '1' : {
				 en_motorSel = EN_MOTOR_START; HLCD_gotoXY(1,0); HLCD_vidWriteChar(u8KeyRead); 				 
     1d0:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <en_motorSel>
     1d4:	60 e0       	ldi	r22, 0x00	; 0
     1d6:	81 e0       	ldi	r24, 0x01	; 1
     1d8:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <HLCD_gotoXY>
     1dc:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <u8KeyRead>
     1e0:	0e 94 42 02 	call	0x484	; 0x484 <HLCD_vidWriteChar>
				 break;
     1e4:	0e c0       	rjmp	.+28     	; 0x202 <APP_vidStart+0x4c>
				 }	 
			 case '2' : {
				 en_motorSel = EN_MOTOR_STOP; HLCD_gotoXY(1,0); HLCD_vidWriteChar(u8KeyRead); 
     1e6:	81 e0       	ldi	r24, 0x01	; 1
     1e8:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <en_motorSel>
     1ec:	60 e0       	ldi	r22, 0x00	; 0
     1ee:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <HLCD_gotoXY>
     1f2:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <u8KeyRead>
     1f6:	0e 94 42 02 	call	0x484	; 0x484 <HLCD_vidWriteChar>
				 break;
     1fa:	03 c0       	rjmp	.+6      	; 0x202 <APP_vidStart+0x4c>
=======
     1c0:	82 ee       	ldi	r24, 0xE2	; 226
     1c2:	90 e0       	ldi	r25, 0x00	; 0
     1c4:	0e 94 4a 03 	call	0x694	; 0x694 <KEYPAD_read>
	
	 if (u8KeyRead != 'N')
     1c8:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <u8KeyRead>
     1cc:	8e 34       	cpi	r24, 0x4E	; 78
     1ce:	f1 f0       	breq	.+60     	; 0x20c <APP_vidStart+0x4c>
	 {
		 switch(u8KeyRead)
     1d0:	81 33       	cpi	r24, 0x31	; 49
     1d2:	19 f0       	breq	.+6      	; 0x1da <APP_vidStart+0x1a>
     1d4:	82 33       	cpi	r24, 0x32	; 50
     1d6:	61 f0       	breq	.+24     	; 0x1f0 <APP_vidStart+0x30>
     1d8:	16 c0       	rjmp	.+44     	; 0x206 <APP_vidStart+0x46>
		 {
			 case '1' : {
				 en_motorSel = EN_MOTOR_START; HLCD_gotoXY(1,0); HLCD_vidWriteChar(u8KeyRead); 				 
     1da:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <en_motorSel>
     1de:	60 e0       	ldi	r22, 0x00	; 0
     1e0:	81 e0       	ldi	r24, 0x01	; 1
     1e2:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <HLCD_gotoXY>
     1e6:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <u8KeyRead>
     1ea:	0e 94 47 02 	call	0x48e	; 0x48e <HLCD_vidWriteChar>
				 break;
     1ee:	0e c0       	rjmp	.+28     	; 0x20c <APP_vidStart+0x4c>
				 }	 
			 case '2' : {
				 en_motorSel = EN_MOTOR_STOP; HLCD_gotoXY(1,0); HLCD_vidWriteChar(u8KeyRead); 
     1f0:	81 e0       	ldi	r24, 0x01	; 1
     1f2:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <en_motorSel>
     1f6:	60 e0       	ldi	r22, 0x00	; 0
     1f8:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <HLCD_gotoXY>
     1fc:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <u8KeyRead>
     200:	0e 94 47 02 	call	0x48e	; 0x48e <HLCD_vidWriteChar>
				 break;
     204:	03 c0       	rjmp	.+6      	; 0x20c <APP_vidStart+0x4c>
>>>>>>> main
				 }
				 default :
				 {
					 en_motorSel = EN_MOTOR_IDLE;
<<<<<<< HEAD
     1fc:	82 e0       	ldi	r24, 0x02	; 2
     1fe:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <en_motorSel>
=======
     206:	82 e0       	ldi	r24, 0x02	; 2
     208:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <en_motorSel>
>>>>>>> main
					 break;
				 }
		 } 
	 }
	 
	  if (en_motorSel == EN_MOTOR_START)
<<<<<<< HEAD
     202:	80 91 75 00 	lds	r24, 0x0075	; 0x800075 <en_motorSel>
     206:	81 11       	cpse	r24, r1
     208:	10 c0       	rjmp	.+32     	; 0x22a <APP_vidStart+0x74>
	  {
// 		global_f64Dist = HULTRASONIC_u8Read();
// 		_delay_ms(15);
		if (flag3 == 0) {HLCD_ClrDisplay();  flag1 = 0; flag2 = 0; flag3 = 1; }		
     20a:	80 91 c7 00 	lds	r24, 0x00C7	; 0x8000c7 <flag3>
     20e:	81 11       	cpse	r24, r1
     210:	09 c0       	rjmp	.+18     	; 0x224 <APP_vidStart+0x6e>
     212:	0e 94 bc 02 	call	0x578	; 0x578 <HLCD_ClrDisplay>
     216:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <flag1>
     21a:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <flag2>
     21e:	81 e0       	ldi	r24, 0x01	; 1
     220:	80 93 c7 00 	sts	0x00C7, r24	; 0x8000c7 <flag3>
		APP_updateDirection();
     224:	0e 94 b4 00 	call	0x168	; 0x168 <APP_updateDirection>
     228:	08 95       	ret
=======
     20c:	80 91 75 00 	lds	r24, 0x0075	; 0x800075 <en_motorSel>
     210:	81 11       	cpse	r24, r1
     212:	10 c0       	rjmp	.+32     	; 0x234 <APP_vidStart+0x74>
	  {
		//global_f64Dist = HULTRASONIC_u8Read();
		//_delay_ms(15);
		if (flag3 == 0) {HLCD_ClrDisplay();  flag1 = 0; flag2 = 0; flag3 = 1; }		
     214:	80 91 c7 00 	lds	r24, 0x00C7	; 0x8000c7 <flag3>
     218:	81 11       	cpse	r24, r1
     21a:	09 c0       	rjmp	.+18     	; 0x22e <APP_vidStart+0x6e>
     21c:	0e 94 c1 02 	call	0x582	; 0x582 <HLCD_ClrDisplay>
     220:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <flag1>
     224:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <flag2>
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	80 93 c7 00 	sts	0x00C7, r24	; 0x8000c7 <flag3>
		APP_updateDirection();
     22e:	0e 94 ba 00 	call	0x174	; 0x174 <APP_updateDirection>
     232:	08 95       	ret
>>>>>>> main
		
		
		
		
	  }
	  else if (en_motorSel == EN_MOTOR_STOP)
<<<<<<< HEAD
     22a:	81 30       	cpi	r24, 0x01	; 1
     22c:	b1 f4       	brne	.+44     	; 0x25a <APP_vidStart+0xa4>
	  {
		  if (flag2 == 0){HLCD_ClrDisplay();  flag1 = 0; flag2 = 1; flag3 = 0; }		  
     22e:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <flag2>
     232:	81 11       	cpse	r24, r1
     234:	09 c0       	rjmp	.+18     	; 0x248 <APP_vidStart+0x92>
     236:	0e 94 bc 02 	call	0x578	; 0x578 <HLCD_ClrDisplay>
     23a:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <flag1>
     23e:	81 e0       	ldi	r24, 0x01	; 1
     240:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <flag2>
     244:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <flag3>
		  HLCD_gotoXY(0,0);
     248:	60 e0       	ldi	r22, 0x00	; 0
     24a:	80 e0       	ldi	r24, 0x00	; 0
     24c:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <HLCD_gotoXY>
		  HLCD_WriteString( (uint8_t*) "Motor Stopped");   
     250:	8a e9       	ldi	r24, 0x9A	; 154
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <HLCD_WriteString>
     258:	08 95       	ret
=======
     234:	81 30       	cpi	r24, 0x01	; 1
     236:	b1 f4       	brne	.+44     	; 0x264 <APP_vidStart+0xa4>
	  {
		  if (flag2 == 0){HLCD_ClrDisplay();  flag1 = 0; flag2 = 1; flag3 = 0; }		  
     238:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <flag2>
     23c:	81 11       	cpse	r24, r1
     23e:	09 c0       	rjmp	.+18     	; 0x252 <APP_vidStart+0x92>
     240:	0e 94 c1 02 	call	0x582	; 0x582 <HLCD_ClrDisplay>
     244:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <flag1>
     248:	81 e0       	ldi	r24, 0x01	; 1
     24a:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <flag2>
     24e:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <flag3>
		  HLCD_gotoXY(0,0);
     252:	60 e0       	ldi	r22, 0x00	; 0
     254:	80 e0       	ldi	r24, 0x00	; 0
     256:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <HLCD_gotoXY>
		  HLCD_WriteString( (uint8_t*) "Motor Stopped");   
     25a:	8a e9       	ldi	r24, 0x9A	; 154
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <HLCD_WriteString>
     262:	08 95       	ret
>>>>>>> main
	  }
	  else 
	  {
		  if (flag1 == 0) {HLCD_ClrDisplay();  flag1 = 1; flag2 = 0; flag3 = 0; }
<<<<<<< HEAD
     25a:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <flag1>
     25e:	81 11       	cpse	r24, r1
     260:	09 c0       	rjmp	.+18     	; 0x274 <APP_vidStart+0xbe>
     262:	0e 94 bc 02 	call	0x578	; 0x578 <HLCD_ClrDisplay>
     266:	81 e0       	ldi	r24, 0x01	; 1
     268:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <flag1>
     26c:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <flag2>
     270:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <flag3>
		  HLCD_gotoXY(0,0);
     274:	60 e0       	ldi	r22, 0x00	; 0
     276:	80 e0       	ldi	r24, 0x00	; 0
     278:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <HLCD_gotoXY>
		  HLCD_WriteString( (uint8_t*) "MOTOR in IDLE");  
     27c:	88 ea       	ldi	r24, 0xA8	; 168
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <HLCD_WriteString>
     284:	08 95       	ret

00000286 <HExtInt_enInit>:
		errorStatus = HEXTINT_NOK;
	}
=======
     264:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <flag1>
     268:	81 11       	cpse	r24, r1
     26a:	09 c0       	rjmp	.+18     	; 0x27e <APP_vidStart+0xbe>
     26c:	0e 94 c1 02 	call	0x582	; 0x582 <HLCD_ClrDisplay>
     270:	81 e0       	ldi	r24, 0x01	; 1
     272:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <flag1>
     276:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <flag2>
     27a:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <flag3>
		  HLCD_gotoXY(0,0);
     27e:	60 e0       	ldi	r22, 0x00	; 0
     280:	80 e0       	ldi	r24, 0x00	; 0
     282:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <HLCD_gotoXY>
		  HLCD_WriteString( (uint8_t*) "MOTOR in IDLE");  
     286:	88 ea       	ldi	r24, 0xA8	; 168
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <HLCD_WriteString>
     28e:	08 95       	ret

00000290 <HExtInt_enInit>:
     290:	cf 93       	push	r28
     292:	df 93       	push	r29
     294:	c8 2f       	mov	r28, r24
     296:	d6 2f       	mov	r29, r22
     298:	40 e0       	ldi	r20, 0x00	; 0
     29a:	62 e0       	ldi	r22, 0x02	; 2
     29c:	83 e0       	ldi	r24, 0x03	; 3
     29e:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     2a2:	40 e0       	ldi	r20, 0x00	; 0
     2a4:	62 e0       	ldi	r22, 0x02	; 2
     2a6:	83 e0       	ldi	r24, 0x03	; 3
     2a8:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     2ac:	6d 2f       	mov	r22, r29
     2ae:	8c 2f       	mov	r24, r28
     2b0:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <vidExtInt_init>
     2b4:	81 e0       	ldi	r24, 0x01	; 1
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	08 95       	ret
>>>>>>> main

000002bc <HExtInt_enCBFInt0>:
     2bc:	00 97       	sbiw	r24, 0x00	; 0
     2be:	21 f0       	breq	.+8      	; 0x2c8 <HExtInt_enCBFInt0+0xc>
     2c0:	0e 94 66 06 	call	0xccc	; 0xccc <MEXTINT_vidCallBackFuncInt0>
     2c4:	81 e0       	ldi	r24, 0x01	; 1
     2c6:	08 95       	ret
     2c8:	80 e0       	ldi	r24, 0x00	; 0
     2ca:	08 95       	ret

<<<<<<< HEAD
	return errorStatus;
}
     286:	cf 93       	push	r28
     288:	df 93       	push	r29
     28a:	c8 2f       	mov	r28, r24
     28c:	d6 2f       	mov	r29, r22
     28e:	40 e0       	ldi	r20, 0x00	; 0
     290:	62 e0       	ldi	r22, 0x02	; 2
     292:	83 e0       	ldi	r24, 0x03	; 3
     294:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
     298:	40 e0       	ldi	r20, 0x00	; 0
     29a:	62 e0       	ldi	r22, 0x02	; 2
     29c:	83 e0       	ldi	r24, 0x03	; 3
     29e:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     2a2:	6d 2f       	mov	r22, r29
     2a4:	8c 2f       	mov	r24, r28
     2a6:	0e 94 ae 05 	call	0xb5c	; 0xb5c <vidExtInt_init>
     2aa:	81 e0       	ldi	r24, 0x01	; 1
     2ac:	df 91       	pop	r29
     2ae:	cf 91       	pop	r28
     2b0:	08 95       	ret

000002b2 <HExtInt_enCBFInt0>:
     2b2:	00 97       	sbiw	r24, 0x00	; 0
     2b4:	21 f0       	breq	.+8      	; 0x2be <HExtInt_enCBFInt0+0xc>
     2b6:	0e 94 31 06 	call	0xc62	; 0xc62 <MEXTINT_vidCallBackFuncInt0>
     2ba:	81 e0       	ldi	r24, 0x01	; 1
     2bc:	08 95       	ret
     2be:	80 e0       	ldi	r24, 0x00	; 0
     2c0:	08 95       	ret

000002c2 <HExtInt0_enIntDisable>:

void HExtInt0_enIntDisable(void)
{
	MEXTINT_vidDisableInterrupt();
     2c2:	0e 94 3b 06 	call	0xc76	; 0xc76 <MEXTINT_vidDisableInterrupt>
     2c6:	08 95       	ret

000002c8 <HExtInt0_enIntEnable>:
}

void HExtInt0_enIntEnable(void)
{
	 MEXTINT_vidEnableInterrupt();
     2c8:	0e 94 3f 06 	call	0xc7e	; 0xc7e <MEXTINT_vidEnableInterrupt>
     2cc:	08 95       	ret

000002ce <HLCD_vidWritecmd>:
	u8_en_lcdErrorsType errorStatus = LCD_E_OK;
	errorStatus = HLCD_vidWritecmd(HLCD_DISPLAY_SHIFT_LEFT);
	_delay_ms(1);
	return errorStatus;

}
     2ce:	0f 93       	push	r16
     2d0:	1f 93       	push	r17
     2d2:	cf 93       	push	r28
     2d4:	df 93       	push	r29
     2d6:	18 2f       	mov	r17, r24
     2d8:	40 e0       	ldi	r20, 0x00	; 0
     2da:	60 e0       	ldi	r22, 0x00	; 0
     2dc:	83 e0       	ldi	r24, 0x03	; 3
     2de:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     2e2:	c8 2f       	mov	r28, r24
     2e4:	40 e0       	ldi	r20, 0x00	; 0
     2e6:	67 e0       	ldi	r22, 0x07	; 7
     2e8:	82 e0       	ldi	r24, 0x02	; 2
     2ea:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     2ee:	c8 2b       	or	r28, r24
     2f0:	01 2f       	mov	r16, r17
     2f2:	02 95       	swap	r16
     2f4:	0f 70       	andi	r16, 0x0F	; 15
     2f6:	d0 e0       	ldi	r29, 0x00	; 0
     2f8:	15 c0       	rjmp	.+42     	; 0x324 <HLCD_vidWritecmd+0x56>
     2fa:	ed 2f       	mov	r30, r29
     2fc:	f0 e0       	ldi	r31, 0x00	; 0
     2fe:	40 2f       	mov	r20, r16
     300:	50 e0       	ldi	r21, 0x00	; 0
     302:	0d 2e       	mov	r0, r29
     304:	02 c0       	rjmp	.+4      	; 0x30a <HLCD_vidWritecmd+0x3c>
     306:	55 95       	asr	r21
     308:	47 95       	ror	r20
     30a:	0a 94       	dec	r0
     30c:	e2 f7       	brpl	.-8      	; 0x306 <HLCD_vidWritecmd+0x38>
     30e:	41 70       	andi	r20, 0x01	; 1
     310:	ee 0f       	add	r30, r30
     312:	ff 1f       	adc	r31, r31
     314:	e8 58       	subi	r30, 0x88	; 136
     316:	ff 4f       	sbci	r31, 0xFF	; 255
     318:	61 81       	ldd	r22, Z+1	; 0x01
     31a:	80 81       	ld	r24, Z
     31c:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     320:	c8 2b       	or	r28, r24
     322:	df 5f       	subi	r29, 0xFF	; 255
     324:	d4 30       	cpi	r29, 0x04	; 4
     326:	48 f3       	brcs	.-46     	; 0x2fa <HLCD_vidWritecmd+0x2c>
     328:	41 e0       	ldi	r20, 0x01	; 1
     32a:	61 e0       	ldi	r22, 0x01	; 1
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     332:	c8 2b       	or	r28, r24
     334:	89 ef       	ldi	r24, 0xF9	; 249
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	01 97       	sbiw	r24, 0x01	; 1
     33a:	f1 f7       	brne	.-4      	; 0x338 <HLCD_vidWritecmd+0x6a>
     33c:	00 c0       	rjmp	.+0      	; 0x33e <HLCD_vidWritecmd+0x70>
     33e:	00 00       	nop
     340:	40 e0       	ldi	r20, 0x00	; 0
     342:	61 e0       	ldi	r22, 0x01	; 1
     344:	83 e0       	ldi	r24, 0x03	; 3
     346:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     34a:	c8 2b       	or	r28, r24
     34c:	92 e4       	ldi	r25, 0x42	; 66
     34e:	9a 95       	dec	r25
     350:	f1 f7       	brne	.-4      	; 0x34e <HLCD_vidWritecmd+0x80>
     352:	00 c0       	rjmp	.+0      	; 0x354 <HLCD_vidWritecmd+0x86>
     354:	1f 70       	andi	r17, 0x0F	; 15
     356:	d0 e0       	ldi	r29, 0x00	; 0
     358:	15 c0       	rjmp	.+42     	; 0x384 <HLCD_vidWritecmd+0xb6>
     35a:	ed 2f       	mov	r30, r29
     35c:	f0 e0       	ldi	r31, 0x00	; 0
     35e:	41 2f       	mov	r20, r17
     360:	50 e0       	ldi	r21, 0x00	; 0
     362:	0d 2e       	mov	r0, r29
     364:	02 c0       	rjmp	.+4      	; 0x36a <HLCD_vidWritecmd+0x9c>
     366:	55 95       	asr	r21
     368:	47 95       	ror	r20
     36a:	0a 94       	dec	r0
     36c:	e2 f7       	brpl	.-8      	; 0x366 <HLCD_vidWritecmd+0x98>
     36e:	41 70       	andi	r20, 0x01	; 1
     370:	ee 0f       	add	r30, r30
     372:	ff 1f       	adc	r31, r31
     374:	e8 58       	subi	r30, 0x88	; 136
     376:	ff 4f       	sbci	r31, 0xFF	; 255
     378:	61 81       	ldd	r22, Z+1	; 0x01
     37a:	80 81       	ld	r24, Z
     37c:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     380:	c8 2b       	or	r28, r24
     382:	df 5f       	subi	r29, 0xFF	; 255
     384:	d4 30       	cpi	r29, 0x04	; 4
     386:	48 f3       	brcs	.-46     	; 0x35a <HLCD_vidWritecmd+0x8c>
     388:	41 e0       	ldi	r20, 0x01	; 1
     38a:	61 e0       	ldi	r22, 0x01	; 1
     38c:	83 e0       	ldi	r24, 0x03	; 3
     38e:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     392:	c8 2b       	or	r28, r24
     394:	e9 ef       	ldi	r30, 0xF9	; 249
     396:	f0 e0       	ldi	r31, 0x00	; 0
     398:	31 97       	sbiw	r30, 0x01	; 1
     39a:	f1 f7       	brne	.-4      	; 0x398 <HLCD_vidWritecmd+0xca>
     39c:	00 c0       	rjmp	.+0      	; 0x39e <HLCD_vidWritecmd+0xd0>
     39e:	00 00       	nop
     3a0:	40 e0       	ldi	r20, 0x00	; 0
     3a2:	61 e0       	ldi	r22, 0x01	; 1
     3a4:	83 e0       	ldi	r24, 0x03	; 3
     3a6:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     3aa:	8c 2b       	or	r24, r28
     3ac:	e3 ef       	ldi	r30, 0xF3	; 243
     3ae:	f1 e0       	ldi	r31, 0x01	; 1
     3b0:	31 97       	sbiw	r30, 0x01	; 1
     3b2:	f1 f7       	brne	.-4      	; 0x3b0 <HLCD_vidWritecmd+0xe2>
     3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <HLCD_vidWritecmd+0xe8>
     3b6:	00 00       	nop
     3b8:	df 91       	pop	r29
     3ba:	cf 91       	pop	r28
     3bc:	1f 91       	pop	r17
     3be:	0f 91       	pop	r16
     3c0:	08 95       	ret

000003c2 <HLCD_vidInit>:
     3c2:	cf 93       	push	r28
     3c4:	df 93       	push	r29
     3c6:	d0 e0       	ldi	r29, 0x00	; 0
     3c8:	c0 e0       	ldi	r28, 0x00	; 0
     3ca:	0d c0       	rjmp	.+26     	; 0x3e6 <HLCD_vidInit+0x24>
     3cc:	ed 2f       	mov	r30, r29
     3ce:	f0 e0       	ldi	r31, 0x00	; 0
     3d0:	ee 0f       	add	r30, r30
     3d2:	ff 1f       	adc	r31, r31
     3d4:	e8 58       	subi	r30, 0x88	; 136
     3d6:	ff 4f       	sbci	r31, 0xFF	; 255
     3d8:	41 e0       	ldi	r20, 0x01	; 1
     3da:	61 81       	ldd	r22, Z+1	; 0x01
     3dc:	80 81       	ld	r24, Z
     3de:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
     3e2:	c8 2b       	or	r28, r24
     3e4:	df 5f       	subi	r29, 0xFF	; 255
     3e6:	d4 30       	cpi	r29, 0x04	; 4
     3e8:	88 f3       	brcs	.-30     	; 0x3cc <HLCD_vidInit+0xa>
     3ea:	41 e0       	ldi	r20, 0x01	; 1
     3ec:	67 e0       	ldi	r22, 0x07	; 7
     3ee:	82 e0       	ldi	r24, 0x02	; 2
     3f0:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
     3f4:	c8 2b       	or	r28, r24
     3f6:	41 e0       	ldi	r20, 0x01	; 1
     3f8:	60 e0       	ldi	r22, 0x00	; 0
     3fa:	83 e0       	ldi	r24, 0x03	; 3
     3fc:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
     400:	c8 2b       	or	r28, r24
     402:	41 e0       	ldi	r20, 0x01	; 1
     404:	61 e0       	ldi	r22, 0x01	; 1
     406:	83 e0       	ldi	r24, 0x03	; 3
     408:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
     40c:	c8 2b       	or	r28, r24
     40e:	8f e0       	ldi	r24, 0x0F	; 15
     410:	97 e2       	ldi	r25, 0x27	; 39
     412:	01 97       	sbiw	r24, 0x01	; 1
     414:	f1 f7       	brne	.-4      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
     416:	00 c0       	rjmp	.+0      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
     418:	00 00       	nop
     41a:	82 e0       	ldi	r24, 0x02	; 2
     41c:	0e 94 67 01 	call	0x2ce	; 0x2ce <HLCD_vidWritecmd>
     420:	c8 2b       	or	r28, r24
     422:	e9 ef       	ldi	r30, 0xF9	; 249
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	31 97       	sbiw	r30, 0x01	; 1
     428:	f1 f7       	brne	.-4      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
     42a:	00 c0       	rjmp	.+0      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
     42c:	00 00       	nop
     42e:	88 e2       	ldi	r24, 0x28	; 40
     430:	0e 94 67 01 	call	0x2ce	; 0x2ce <HLCD_vidWritecmd>
     434:	c8 2b       	or	r28, r24
     436:	89 ef       	ldi	r24, 0xF9	; 249
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	01 97       	sbiw	r24, 0x01	; 1
     43c:	f1 f7       	brne	.-4      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
     43e:	00 c0       	rjmp	.+0      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
     440:	00 00       	nop
     442:	81 e0       	ldi	r24, 0x01	; 1
     444:	0e 94 67 01 	call	0x2ce	; 0x2ce <HLCD_vidWritecmd>
     448:	c8 2b       	or	r28, r24
     44a:	e7 ee       	ldi	r30, 0xE7	; 231
     44c:	f3 e0       	ldi	r31, 0x03	; 3
     44e:	31 97       	sbiw	r30, 0x01	; 1
     450:	f1 f7       	brne	.-4      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
     452:	00 c0       	rjmp	.+0      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
     454:	00 00       	nop
     456:	86 e0       	ldi	r24, 0x06	; 6
     458:	0e 94 67 01 	call	0x2ce	; 0x2ce <HLCD_vidWritecmd>
     45c:	c8 2b       	or	r28, r24
     45e:	89 ef       	ldi	r24, 0xF9	; 249
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	01 97       	sbiw	r24, 0x01	; 1
     464:	f1 f7       	brne	.-4      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     466:	00 c0       	rjmp	.+0      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     468:	00 00       	nop
     46a:	8c e0       	ldi	r24, 0x0C	; 12
     46c:	0e 94 67 01 	call	0x2ce	; 0x2ce <HLCD_vidWritecmd>
     470:	8c 2b       	or	r24, r28
     472:	e9 ef       	ldi	r30, 0xF9	; 249
     474:	f0 e0       	ldi	r31, 0x00	; 0
     476:	31 97       	sbiw	r30, 0x01	; 1
     478:	f1 f7       	brne	.-4      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
     47a:	00 c0       	rjmp	.+0      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
     47c:	00 00       	nop
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	08 95       	ret

00000484 <HLCD_vidWriteChar>:
     484:	0f 93       	push	r16
     486:	1f 93       	push	r17
     488:	cf 93       	push	r28
     48a:	df 93       	push	r29
     48c:	18 2f       	mov	r17, r24
     48e:	40 e0       	ldi	r20, 0x00	; 0
     490:	60 e0       	ldi	r22, 0x00	; 0
     492:	83 e0       	ldi	r24, 0x03	; 3
     494:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     498:	c8 2f       	mov	r28, r24
     49a:	41 e0       	ldi	r20, 0x01	; 1
     49c:	67 e0       	ldi	r22, 0x07	; 7
     49e:	82 e0       	ldi	r24, 0x02	; 2
     4a0:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     4a4:	c8 2b       	or	r28, r24
     4a6:	01 2f       	mov	r16, r17
     4a8:	02 95       	swap	r16
     4aa:	0f 70       	andi	r16, 0x0F	; 15
     4ac:	d0 e0       	ldi	r29, 0x00	; 0
     4ae:	15 c0       	rjmp	.+42     	; 0x4da <HLCD_vidWriteChar+0x56>
     4b0:	ed 2f       	mov	r30, r29
     4b2:	f0 e0       	ldi	r31, 0x00	; 0
     4b4:	40 2f       	mov	r20, r16
     4b6:	50 e0       	ldi	r21, 0x00	; 0
     4b8:	0d 2e       	mov	r0, r29
     4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <HLCD_vidWriteChar+0x3c>
     4bc:	55 95       	asr	r21
     4be:	47 95       	ror	r20
     4c0:	0a 94       	dec	r0
     4c2:	e2 f7       	brpl	.-8      	; 0x4bc <HLCD_vidWriteChar+0x38>
     4c4:	41 70       	andi	r20, 0x01	; 1
     4c6:	ee 0f       	add	r30, r30
     4c8:	ff 1f       	adc	r31, r31
     4ca:	e8 58       	subi	r30, 0x88	; 136
     4cc:	ff 4f       	sbci	r31, 0xFF	; 255
     4ce:	61 81       	ldd	r22, Z+1	; 0x01
     4d0:	80 81       	ld	r24, Z
     4d2:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     4d6:	c8 2b       	or	r28, r24
     4d8:	df 5f       	subi	r29, 0xFF	; 255
     4da:	d4 30       	cpi	r29, 0x04	; 4
     4dc:	48 f3       	brcs	.-46     	; 0x4b0 <HLCD_vidWriteChar+0x2c>
     4de:	41 e0       	ldi	r20, 0x01	; 1
     4e0:	61 e0       	ldi	r22, 0x01	; 1
     4e2:	83 e0       	ldi	r24, 0x03	; 3
     4e4:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     4e8:	c8 2b       	or	r28, r24
     4ea:	89 ef       	ldi	r24, 0xF9	; 249
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	01 97       	sbiw	r24, 0x01	; 1
     4f0:	f1 f7       	brne	.-4      	; 0x4ee <HLCD_vidWriteChar+0x6a>
     4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <HLCD_vidWriteChar+0x70>
     4f4:	00 00       	nop
     4f6:	40 e0       	ldi	r20, 0x00	; 0
     4f8:	61 e0       	ldi	r22, 0x01	; 1
     4fa:	83 e0       	ldi	r24, 0x03	; 3
     4fc:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     500:	c8 2b       	or	r28, r24
     502:	92 e4       	ldi	r25, 0x42	; 66
     504:	9a 95       	dec	r25
     506:	f1 f7       	brne	.-4      	; 0x504 <HLCD_vidWriteChar+0x80>
     508:	00 c0       	rjmp	.+0      	; 0x50a <HLCD_vidWriteChar+0x86>
     50a:	1f 70       	andi	r17, 0x0F	; 15
     50c:	d0 e0       	ldi	r29, 0x00	; 0
     50e:	15 c0       	rjmp	.+42     	; 0x53a <HLCD_vidWriteChar+0xb6>
     510:	ed 2f       	mov	r30, r29
     512:	f0 e0       	ldi	r31, 0x00	; 0
     514:	41 2f       	mov	r20, r17
     516:	50 e0       	ldi	r21, 0x00	; 0
     518:	0d 2e       	mov	r0, r29
     51a:	02 c0       	rjmp	.+4      	; 0x520 <HLCD_vidWriteChar+0x9c>
     51c:	55 95       	asr	r21
     51e:	47 95       	ror	r20
     520:	0a 94       	dec	r0
     522:	e2 f7       	brpl	.-8      	; 0x51c <HLCD_vidWriteChar+0x98>
     524:	41 70       	andi	r20, 0x01	; 1
     526:	ee 0f       	add	r30, r30
     528:	ff 1f       	adc	r31, r31
     52a:	e8 58       	subi	r30, 0x88	; 136
     52c:	ff 4f       	sbci	r31, 0xFF	; 255
     52e:	61 81       	ldd	r22, Z+1	; 0x01
     530:	80 81       	ld	r24, Z
     532:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     536:	c8 2b       	or	r28, r24
     538:	df 5f       	subi	r29, 0xFF	; 255
     53a:	d4 30       	cpi	r29, 0x04	; 4
     53c:	48 f3       	brcs	.-46     	; 0x510 <HLCD_vidWriteChar+0x8c>
     53e:	41 e0       	ldi	r20, 0x01	; 1
     540:	61 e0       	ldi	r22, 0x01	; 1
     542:	83 e0       	ldi	r24, 0x03	; 3
     544:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     548:	c8 2b       	or	r28, r24
     54a:	e9 ef       	ldi	r30, 0xF9	; 249
     54c:	f0 e0       	ldi	r31, 0x00	; 0
     54e:	31 97       	sbiw	r30, 0x01	; 1
     550:	f1 f7       	brne	.-4      	; 0x54e <HLCD_vidWriteChar+0xca>
     552:	00 c0       	rjmp	.+0      	; 0x554 <HLCD_vidWriteChar+0xd0>
     554:	00 00       	nop
     556:	40 e0       	ldi	r20, 0x00	; 0
     558:	61 e0       	ldi	r22, 0x01	; 1
     55a:	83 e0       	ldi	r24, 0x03	; 3
     55c:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
     560:	8c 2b       	or	r24, r28
     562:	e3 ef       	ldi	r30, 0xF3	; 243
     564:	f1 e0       	ldi	r31, 0x01	; 1
     566:	31 97       	sbiw	r30, 0x01	; 1
     568:	f1 f7       	brne	.-4      	; 0x566 <HLCD_vidWriteChar+0xe2>
     56a:	00 c0       	rjmp	.+0      	; 0x56c <HLCD_vidWriteChar+0xe8>
     56c:	00 00       	nop
     56e:	df 91       	pop	r29
     570:	cf 91       	pop	r28
     572:	1f 91       	pop	r17
     574:	0f 91       	pop	r16
     576:	08 95       	ret

00000578 <HLCD_ClrDisplay>:
     578:	cf 93       	push	r28
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	0e 94 67 01 	call	0x2ce	; 0x2ce <HLCD_vidWritecmd>
     580:	c8 2f       	mov	r28, r24
     582:	87 ee       	ldi	r24, 0xE7	; 231
     584:	93 e0       	ldi	r25, 0x03	; 3
     586:	01 97       	sbiw	r24, 0x01	; 1
     588:	f1 f7       	brne	.-4      	; 0x586 <HLCD_ClrDisplay+0xe>
     58a:	00 c0       	rjmp	.+0      	; 0x58c <HLCD_ClrDisplay+0x14>
     58c:	00 00       	nop
     58e:	82 e0       	ldi	r24, 0x02	; 2
     590:	0e 94 67 01 	call	0x2ce	; 0x2ce <HLCD_vidWritecmd>
     594:	8c 2b       	or	r24, r28
     596:	e7 ee       	ldi	r30, 0xE7	; 231
     598:	f3 e0       	ldi	r31, 0x03	; 3
     59a:	31 97       	sbiw	r30, 0x01	; 1
     59c:	f1 f7       	brne	.-4      	; 0x59a <HLCD_ClrDisplay+0x22>
     59e:	00 c0       	rjmp	.+0      	; 0x5a0 <HLCD_ClrDisplay+0x28>
     5a0:	00 00       	nop
     5a2:	cf 91       	pop	r28
     5a4:	08 95       	ret

000005a6 <HLCD_gotoXY>:
 * return		: u8_en_lcdErrorsType
 * */
u8_en_lcdErrorsType HLCD_gotoXY(uint8_t row, uint8_t pos)
{
	u8_en_lcdErrorsType errorStatus = LCD_E_OK;
	if (row==0 && pos < 16)
     5a6:	81 11       	cpse	r24, r1
     5a8:	08 c0       	rjmp	.+16     	; 0x5ba <HLCD_gotoXY+0x14>
     5aa:	60 31       	cpi	r22, 0x10	; 16
     5ac:	30 f4       	brcc	.+12     	; 0x5ba <HLCD_gotoXY+0x14>
	{
		errorStatus |= HLCD_vidWritecmd((pos & 0x0F)| 0x80);
     5ae:	86 2f       	mov	r24, r22
     5b0:	8f 70       	andi	r24, 0x0F	; 15
     5b2:	80 68       	ori	r24, 0x80	; 128
     5b4:	0e 94 67 01 	call	0x2ce	; 0x2ce <HLCD_vidWritecmd>
     5b8:	08 95       	ret
	}
	else if (row==1 && pos < 16)
     5ba:	81 30       	cpi	r24, 0x01	; 1
     5bc:	41 f4       	brne	.+16     	; 0x5ce <HLCD_gotoXY+0x28>
     5be:	60 31       	cpi	r22, 0x10	; 16
     5c0:	40 f4       	brcc	.+16     	; 0x5d2 <HLCD_gotoXY+0x2c>
	{
		errorStatus |= HLCD_vidWritecmd((pos & 0x0F)| 0xC0);
     5c2:	86 2f       	mov	r24, r22
     5c4:	8f 70       	andi	r24, 0x0F	; 15
     5c6:	80 6c       	ori	r24, 0xC0	; 192
     5c8:	0e 94 67 01 	call	0x2ce	; 0x2ce <HLCD_vidWritecmd>
     5cc:	08 95       	ret
	}
	else
	{
		errorStatus |= LCD_E_NOT_OK;
     5ce:	85 e0       	ldi	r24, 0x05	; 5
     5d0:	08 95       	ret
     5d2:	85 e0       	ldi	r24, 0x05	; 5
	}
	return errorStatus;
}
     5d4:	08 95       	ret

000005d6 <HLCD_WriteString>:
 * description 	: func to write string on lcd
 * input param 	: str --> which take string as argument
 * return		: u8_en_lcdErrorsType
 * */
u8_en_lcdErrorsType HLCD_WriteString(uint8_t* str)
{
     5d6:	ef 92       	push	r14
     5d8:	ff 92       	push	r15
     5da:	1f 93       	push	r17
     5dc:	cf 93       	push	r28
     5de:	df 93       	push	r29
     5e0:	7c 01       	movw	r14, r24
	u8_en_lcdErrorsType errorStatus = LCD_E_OK;
	Uint16_t count = 0;
	uint8_t string = str[count];
     5e2:	fc 01       	movw	r30, r24
     5e4:	80 81       	ld	r24, Z
 * return		: u8_en_lcdErrorsType
 * */
u8_en_lcdErrorsType HLCD_WriteString(uint8_t* str)
{
	u8_en_lcdErrorsType errorStatus = LCD_E_OK;
	Uint16_t count = 0;
     5e6:	c0 e0       	ldi	r28, 0x00	; 0
     5e8:	d0 e0       	ldi	r29, 0x00	; 0
 * input param 	: str --> which take string as argument
 * return		: u8_en_lcdErrorsType
 * */
u8_en_lcdErrorsType HLCD_WriteString(uint8_t* str)
{
	u8_en_lcdErrorsType errorStatus = LCD_E_OK;
     5ea:	10 e0       	ldi	r17, 0x00	; 0
	Uint16_t count = 0;
	uint8_t string = str[count];
	while(string)
     5ec:	08 c0       	rjmp	.+16     	; 0x5fe <HLCD_WriteString+0x28>
	{
		errorStatus |= HLCD_vidWriteChar(string);
     5ee:	0e 94 42 02 	call	0x484	; 0x484 <HLCD_vidWriteChar>
     5f2:	18 2b       	or	r17, r24
		string = str[++count];
     5f4:	21 96       	adiw	r28, 0x01	; 1
     5f6:	f7 01       	movw	r30, r14
     5f8:	ec 0f       	add	r30, r28
     5fa:	fd 1f       	adc	r31, r29
     5fc:	80 81       	ld	r24, Z
u8_en_lcdErrorsType HLCD_WriteString(uint8_t* str)
{
	u8_en_lcdErrorsType errorStatus = LCD_E_OK;
	Uint16_t count = 0;
	uint8_t string = str[count];
	while(string)
     5fe:	81 11       	cpse	r24, r1
     600:	f6 cf       	rjmp	.-20     	; 0x5ee <HLCD_WriteString+0x18>
	{
		errorStatus |= HLCD_vidWriteChar(string);
		string = str[++count];
	}
	return errorStatus;
}
     602:	81 2f       	mov	r24, r17
     604:	df 91       	pop	r29
     606:	cf 91       	pop	r28
     608:	1f 91       	pop	r17
     60a:	ff 90       	pop	r15
     60c:	ef 90       	pop	r14
     60e:	08 95       	ret

00000610 <KEYPAD_init>:
#define F_CPU 8000000U
#include<util/delay.h>
static uint8_t keypad[4][3]={{'1','2','3'},{'4','5','6'},{'7','8','9'},{'*','0','#'}};
extern st_keypadConfigType st_gs_keypadConfig;
u8_en_keypadErrorsType KEYPAD_init (st_keypadConfigType* st_config)
{
     610:	cf 93       	push	r28
     612:	df 93       	push	r29
	u8_en_keypadErrorsType ret_val=KEYPAD_E_OK;
	if(st_config==(void*)0)
     614:	00 97       	sbiw	r24, 0x00	; 0
     616:	a9 f1       	breq	.+106    	; 0x682 <KEYPAD_init+0x72>
     618:	ec 01       	movw	r28, r24
	{
		ret_val=KEYPAD_E_NOT_OK;
	}
	else
	{
		DIO_init(st_config->u8_row1Pin[0],st_config->u8_row1Pin[1],STD_INPUT);
     61a:	69 81       	ldd	r22, Y+1	; 0x01
     61c:	40 e0       	ldi	r20, 0x00	; 0
     61e:	88 81       	ld	r24, Y
     620:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
		DIO_init(st_config->u8_row2Pin[0],st_config->u8_row2Pin[1],STD_INPUT);
     624:	6b 81       	ldd	r22, Y+3	; 0x03
     626:	40 e0       	ldi	r20, 0x00	; 0
     628:	8a 81       	ldd	r24, Y+2	; 0x02
     62a:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
		DIO_init(st_config->u8_row3Pin[0],st_config->u8_row3Pin[1],STD_INPUT);
     62e:	6d 81       	ldd	r22, Y+5	; 0x05
     630:	40 e0       	ldi	r20, 0x00	; 0
     632:	8c 81       	ldd	r24, Y+4	; 0x04
     634:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
		DIO_writePIN(st_config->u8_row1Pin[0],st_config->u8_row1Pin[1],STD_HIGH);
     638:	69 81       	ldd	r22, Y+1	; 0x01
     63a:	41 e0       	ldi	r20, 0x01	; 1
     63c:	88 81       	ld	r24, Y
     63e:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
		DIO_writePIN(st_config->u8_row2Pin[0],st_config->u8_row2Pin[1],STD_HIGH);
     642:	6b 81       	ldd	r22, Y+3	; 0x03
     644:	41 e0       	ldi	r20, 0x01	; 1
     646:	8a 81       	ldd	r24, Y+2	; 0x02
     648:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
		DIO_writePIN(st_config->u8_row3Pin[0],st_config->u8_row3Pin[1],STD_HIGH);
     64c:	6d 81       	ldd	r22, Y+5	; 0x05
     64e:	41 e0       	ldi	r20, 0x01	; 1
     650:	8c 81       	ldd	r24, Y+4	; 0x04
     652:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
		
		DIO_init(st_config->u8_col1Pin[0],st_config->u8_col1Pin[1],STD_OUTPUT);
     656:	6f 81       	ldd	r22, Y+7	; 0x07
     658:	41 e0       	ldi	r20, 0x01	; 1
     65a:	8e 81       	ldd	r24, Y+6	; 0x06
     65c:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
		DIO_init(st_config->u8_col2Pin[0],st_config->u8_col2Pin[1],STD_OUTPUT);
     660:	69 85       	ldd	r22, Y+9	; 0x09
     662:	41 e0       	ldi	r20, 0x01	; 1
     664:	88 85       	ldd	r24, Y+8	; 0x08
     666:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
		DIO_init(st_config->u8_col3Pin[0],st_config->u8_col3Pin[1],STD_OUTPUT);
     66a:	6b 85       	ldd	r22, Y+11	; 0x0b
     66c:	41 e0       	ldi	r20, 0x01	; 1
     66e:	8a 85       	ldd	r24, Y+10	; 0x0a
     670:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
		DIO_init(st_config->u8_col4Pin[0],st_config->u8_col4Pin[1],STD_OUTPUT);
     674:	6d 85       	ldd	r22, Y+13	; 0x0d
     676:	41 e0       	ldi	r20, 0x01	; 1
     678:	8c 85       	ldd	r24, Y+12	; 0x0c
     67a:	0e 94 8e 04 	call	0x91c	; 0x91c <DIO_init>
#include<util/delay.h>
static uint8_t keypad[4][3]={{'1','2','3'},{'4','5','6'},{'7','8','9'},{'*','0','#'}};
extern st_keypadConfigType st_gs_keypadConfig;
u8_en_keypadErrorsType KEYPAD_init (st_keypadConfigType* st_config)
{
	u8_en_keypadErrorsType ret_val=KEYPAD_E_OK;
     67e:	80 e0       	ldi	r24, 0x00	; 0
     680:	01 c0       	rjmp	.+2      	; 0x684 <KEYPAD_init+0x74>
	if(st_config==(void*)0)
	{
		ret_val=KEYPAD_E_NOT_OK;
     682:	87 e0       	ldi	r24, 0x07	; 7
		DIO_init(st_config->u8_col2Pin[0],st_config->u8_col2Pin[1],STD_OUTPUT);
		DIO_init(st_config->u8_col3Pin[0],st_config->u8_col3Pin[1],STD_OUTPUT);
		DIO_init(st_config->u8_col4Pin[0],st_config->u8_col4Pin[1],STD_OUTPUT);
	}
	return ret_val;
}
     684:	df 91       	pop	r29
     686:	cf 91       	pop	r28
     688:	08 95       	ret

0000068a <KEYPAD_read>:

u8_en_keypadErrorsType KEYPAD_read (uint8_t * u8_data)
{   u8_en_keypadErrorsType ret_val=KEYPAD_E_OK;
     68a:	df 92       	push	r13
     68c:	ef 92       	push	r14
     68e:	ff 92       	push	r15
     690:	0f 93       	push	r16
     692:	1f 93       	push	r17
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
     698:	1f 92       	push	r1
     69a:	cd b7       	in	r28, 0x3d	; 61
     69c:	de b7       	in	r29, 0x3e	; 62
     69e:	7c 01       	movw	r14, r24
	uint8_t value,flag=0;
	DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1],STD_HIGH);
     6a0:	07 e6       	ldi	r16, 0x67	; 103
     6a2:	10 e0       	ldi	r17, 0x00	; 0
     6a4:	f8 01       	movw	r30, r16
     6a6:	67 81       	ldd	r22, Z+7	; 0x07
     6a8:	41 e0       	ldi	r20, 0x01	; 1
     6aa:	86 81       	ldd	r24, Z+6	; 0x06
     6ac:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
	DIO_writePIN(st_gs_keypadConfig.u8_col2Pin[0],st_gs_keypadConfig.u8_col2Pin[1],STD_HIGH);
     6b0:	f8 01       	movw	r30, r16
     6b2:	61 85       	ldd	r22, Z+9	; 0x09
     6b4:	41 e0       	ldi	r20, 0x01	; 1
     6b6:	80 85       	ldd	r24, Z+8	; 0x08
     6b8:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
	DIO_writePIN(st_gs_keypadConfig.u8_col3Pin[0],st_gs_keypadConfig.u8_col3Pin[1],STD_HIGH);
     6bc:	f8 01       	movw	r30, r16
     6be:	63 85       	ldd	r22, Z+11	; 0x0b
     6c0:	41 e0       	ldi	r20, 0x01	; 1
     6c2:	82 85       	ldd	r24, Z+10	; 0x0a
     6c4:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
	DIO_writePIN(st_gs_keypadConfig.u8_col4Pin[0],st_gs_keypadConfig.u8_col4Pin[1],STD_HIGH);
     6c8:	f8 01       	movw	r30, r16
     6ca:	65 85       	ldd	r22, Z+13	; 0x0d
     6cc:	41 e0       	ldi	r20, 0x01	; 1
     6ce:	84 85       	ldd	r24, Z+12	; 0x0c
     6d0:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
	uint8_t i,j;
	for(i=0;i<4;i++)
     6d4:	00 e0       	ldi	r16, 0x00	; 0
	return ret_val;
}

u8_en_keypadErrorsType KEYPAD_read (uint8_t * u8_data)
{   u8_en_keypadErrorsType ret_val=KEYPAD_E_OK;
	uint8_t value,flag=0;
     6d6:	d1 2c       	mov	r13, r1
	DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col2Pin[0],st_gs_keypadConfig.u8_col2Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col3Pin[0],st_gs_keypadConfig.u8_col3Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col4Pin[0],st_gs_keypadConfig.u8_col4Pin[1],STD_HIGH);
	uint8_t i,j;
	for(i=0;i<4;i++)
     6d8:	42 c0       	rjmp	.+132    	; 0x75e <KEYPAD_read+0xd4>
	{
		DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1]+i,STD_LOW);
     6da:	e7 e6       	ldi	r30, 0x67	; 103
     6dc:	f0 e0       	ldi	r31, 0x00	; 0
     6de:	67 81       	ldd	r22, Z+7	; 0x07
     6e0:	60 0f       	add	r22, r16
     6e2:	40 e0       	ldi	r20, 0x00	; 0
     6e4:	86 81       	ldd	r24, Z+6	; 0x06
     6e6:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
		for(j=0;j<3;j++)
     6ea:	10 e0       	ldi	r17, 0x00	; 0
     6ec:	2d c0       	rjmp	.+90     	; 0x748 <KEYPAD_read+0xbe>
		{
			DIO_readPIN(st_gs_keypadConfig.u8_row1Pin[0],st_gs_keypadConfig.u8_row1Pin[1]+j,&value);
     6ee:	e7 e6       	ldi	r30, 0x67	; 103
     6f0:	f0 e0       	ldi	r31, 0x00	; 0
     6f2:	61 81       	ldd	r22, Z+1	; 0x01
     6f4:	61 0f       	add	r22, r17
     6f6:	ae 01       	movw	r20, r28
     6f8:	4f 5f       	subi	r20, 0xFF	; 255
     6fa:	5f 4f       	sbci	r21, 0xFF	; 255
     6fc:	80 81       	ld	r24, Z
     6fe:	0e 94 43 05 	call	0xa86	; 0xa86 <DIO_readPIN>
			if(value==0)
     702:	89 81       	ldd	r24, Y+1	; 0x01
     704:	81 11       	cpse	r24, r1
     706:	1f c0       	rjmp	.+62     	; 0x746 <KEYPAD_read+0xbc>
     708:	0a c0       	rjmp	.+20     	; 0x71e <KEYPAD_read+0x94>
			{  
				 while(value==0)
				 {
					 DIO_readPIN(st_gs_keypadConfig.u8_row1Pin[0],st_gs_keypadConfig.u8_row1Pin[1]+j,&value);
     70a:	e7 e6       	ldi	r30, 0x67	; 103
     70c:	f0 e0       	ldi	r31, 0x00	; 0
     70e:	61 81       	ldd	r22, Z+1	; 0x01
     710:	61 0f       	add	r22, r17
     712:	ae 01       	movw	r20, r28
     714:	4f 5f       	subi	r20, 0xFF	; 255
     716:	5f 4f       	sbci	r21, 0xFF	; 255
     718:	80 81       	ld	r24, Z
     71a:	0e 94 43 05 	call	0xa86	; 0xa86 <DIO_readPIN>
		for(j=0;j<3;j++)
		{
			DIO_readPIN(st_gs_keypadConfig.u8_row1Pin[0],st_gs_keypadConfig.u8_row1Pin[1]+j,&value);
			if(value==0)
			{  
				 while(value==0)
     71e:	89 81       	ldd	r24, Y+1	; 0x01
     720:	88 23       	and	r24, r24
     722:	99 f3       	breq	.-26     	; 0x70a <KEYPAD_read+0x80>
				 {
					 DIO_readPIN(st_gs_keypadConfig.u8_row1Pin[0],st_gs_keypadConfig.u8_row1Pin[1]+j,&value);
				 }
				*u8_data=keypad[i][j];
     724:	80 2f       	mov	r24, r16
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	fc 01       	movw	r30, r24
     72a:	ee 0f       	add	r30, r30
     72c:	ff 1f       	adc	r31, r31
     72e:	e8 0f       	add	r30, r24
     730:	f9 1f       	adc	r31, r25
     732:	ea 54       	subi	r30, 0x4A	; 74
     734:	ff 4f       	sbci	r31, 0xFF	; 255
     736:	e1 0f       	add	r30, r17
     738:	f1 1d       	adc	r31, r1
     73a:	80 81       	ld	r24, Z
     73c:	f7 01       	movw	r30, r14
     73e:	80 83       	st	Z, r24
				flag=1;
     740:	dd 24       	eor	r13, r13
     742:	d3 94       	inc	r13
				
				break;
     744:	03 c0       	rjmp	.+6      	; 0x74c <KEYPAD_read+0xc2>
	DIO_writePIN(st_gs_keypadConfig.u8_col4Pin[0],st_gs_keypadConfig.u8_col4Pin[1],STD_HIGH);
	uint8_t i,j;
	for(i=0;i<4;i++)
	{
		DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1]+i,STD_LOW);
		for(j=0;j<3;j++)
     746:	1f 5f       	subi	r17, 0xFF	; 255
     748:	13 30       	cpi	r17, 0x03	; 3
     74a:	88 f2       	brcs	.-94     	; 0x6ee <KEYPAD_read+0x64>
				
				break;
			}
			
		}
		DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1]+i,STD_HIGH);
     74c:	e7 e6       	ldi	r30, 0x67	; 103
     74e:	f0 e0       	ldi	r31, 0x00	; 0
     750:	67 81       	ldd	r22, Z+7	; 0x07
     752:	60 0f       	add	r22, r16
     754:	41 e0       	ldi	r20, 0x01	; 1
     756:	86 81       	ldd	r24, Z+6	; 0x06
     758:	0e 94 c8 04 	call	0x990	; 0x990 <DIO_writePIN>
	DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col2Pin[0],st_gs_keypadConfig.u8_col2Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col3Pin[0],st_gs_keypadConfig.u8_col3Pin[1],STD_HIGH);
	DIO_writePIN(st_gs_keypadConfig.u8_col4Pin[0],st_gs_keypadConfig.u8_col4Pin[1],STD_HIGH);
	uint8_t i,j;
	for(i=0;i<4;i++)
     75c:	0f 5f       	subi	r16, 0xFF	; 255
     75e:	04 30       	cpi	r16, 0x04	; 4
     760:	08 f4       	brcc	.+2      	; 0x764 <KEYPAD_read+0xda>
     762:	bb cf       	rjmp	.-138    	; 0x6da <KEYPAD_read+0x50>
		DIO_writePIN(st_gs_keypadConfig.u8_col1Pin[0],st_gs_keypadConfig.u8_col1Pin[1]+i,STD_HIGH);
	}
	
	
	
	if(flag==1)
     764:	f1 e0       	ldi	r31, 0x01	; 1
     766:	df 16       	cp	r13, r31
     768:	19 f0       	breq	.+6      	; 0x770 <KEYPAD_read+0xe6>
		
		return ret_val;
	}
	else
	{
		*u8_data='N';
     76a:	8e e4       	ldi	r24, 0x4E	; 78
     76c:	f7 01       	movw	r30, r14
     76e:	80 83       	st	Z, r24
		return ret_val;
	}
	
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	0f 90       	pop	r0
     774:	df 91       	pop	r29
     776:	cf 91       	pop	r28
     778:	1f 91       	pop	r17
     77a:	0f 91       	pop	r16
     77c:	ff 90       	pop	r15
     77e:	ef 90       	pop	r14
     780:	df 90       	pop	r13
     782:	08 95       	ret

00000784 <TIMER_Manager_init>:
#include "timer_manager.h"
#include "../../MCAL/timer/timer.h"


u8_en_timerErrorsType TIMER_Manager_init (st_timerConfigType* st_config)
{
     784:	1f 93       	push	r17
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if(NULL==st_config || st_config->u8_timerNum >= TIMER_INVALID_NUM || st_config->u8_timerClock >= TIMER_INVALID_CLOCK)
     78a:	00 97       	sbiw	r24, 0x00	; 0
     78c:	91 f0       	breq	.+36     	; 0x7b2 <TIMER_Manager_init+0x2e>
     78e:	fc 01       	movw	r30, r24
     790:	20 81       	ld	r18, Z
     792:	23 30       	cpi	r18, 0x03	; 3
     794:	80 f4       	brcc	.+32     	; 0x7b6 <TIMER_Manager_init+0x32>
     796:	21 81       	ldd	r18, Z+1	; 0x01
     798:	2a 30       	cpi	r18, 0x0A	; 10
     79a:	78 f4       	brcc	.+30     	; 0x7ba <TIMER_Manager_init+0x36>
     79c:	ec 01       	movw	r28, r24
	{
		l_ret = TIMER_E_NOT_OK;
	}
	else
	{
		l_ret  = TIMER_init(st_config);
     79e:	0e 94 1b 07 	call	0xe36	; 0xe36 <TIMER_init>
     7a2:	18 2f       	mov	r17, r24
		l_ret |= TIMER_setCallBack(st_config->callBackFunction,st_config->u8_timerNum);
     7a4:	68 81       	ld	r22, Y
     7a6:	8d 81       	ldd	r24, Y+5	; 0x05
     7a8:	9e 81       	ldd	r25, Y+6	; 0x06
     7aa:	0e 94 1d 09 	call	0x123a	; 0x123a <TIMER_setCallBack>
     7ae:	81 2b       	or	r24, r17
     7b0:	05 c0       	rjmp	.+10     	; 0x7bc <TIMER_Manager_init+0x38>
u8_en_timerErrorsType TIMER_Manager_init (st_timerConfigType* st_config)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if(NULL==st_config || st_config->u8_timerNum >= TIMER_INVALID_NUM || st_config->u8_timerClock >= TIMER_INVALID_CLOCK)
	{
		l_ret = TIMER_E_NOT_OK;
     7b2:	83 e0       	ldi	r24, 0x03	; 3
     7b4:	03 c0       	rjmp	.+6      	; 0x7bc <TIMER_Manager_init+0x38>
     7b6:	83 e0       	ldi	r24, 0x03	; 3
     7b8:	01 c0       	rjmp	.+2      	; 0x7bc <TIMER_Manager_init+0x38>
     7ba:	83 e0       	ldi	r24, 0x03	; 3
	{
		l_ret  = TIMER_init(st_config);
		l_ret |= TIMER_setCallBack(st_config->callBackFunction,st_config->u8_timerNum);
	}
	return l_ret;
}
     7bc:	df 91       	pop	r29
     7be:	cf 91       	pop	r28
     7c0:	1f 91       	pop	r17
     7c2:	08 95       	ret

000007c4 <TIMER_Manager_start>:
u8_en_timerErrorsType TIMER_Manager_start (st_timerConfigType* st_config)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if(NULL==st_config || st_config->u8_timerNum >= TIMER_INVALID_NUM || st_config->u8_timerClock >= TIMER_INVALID_CLOCK)
     7c4:	00 97       	sbiw	r24, 0x00	; 0
     7c6:	51 f0       	breq	.+20     	; 0x7dc <TIMER_Manager_start+0x18>
     7c8:	fc 01       	movw	r30, r24
     7ca:	20 81       	ld	r18, Z
     7cc:	23 30       	cpi	r18, 0x03	; 3
     7ce:	40 f4       	brcc	.+16     	; 0x7e0 <TIMER_Manager_start+0x1c>
     7d0:	21 81       	ldd	r18, Z+1	; 0x01
     7d2:	2a 30       	cpi	r18, 0x0A	; 10
     7d4:	38 f4       	brcc	.+14     	; 0x7e4 <TIMER_Manager_start+0x20>
	{
		l_ret = TIMER_E_NOT_OK;
	}
	else
	{
		l_ret = TIMER_start(st_config);
     7d6:	0e 94 a4 07 	call	0xf48	; 0xf48 <TIMER_start>
     7da:	08 95       	ret
u8_en_timerErrorsType TIMER_Manager_start (st_timerConfigType* st_config)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if(NULL==st_config || st_config->u8_timerNum >= TIMER_INVALID_NUM || st_config->u8_timerClock >= TIMER_INVALID_CLOCK)
	{
		l_ret = TIMER_E_NOT_OK;
     7dc:	83 e0       	ldi	r24, 0x03	; 3
     7de:	08 95       	ret
     7e0:	83 e0       	ldi	r24, 0x03	; 3
     7e2:	08 95       	ret
     7e4:	83 e0       	ldi	r24, 0x03	; 3
	else
	{
		l_ret = TIMER_start(st_config);
	}
	return l_ret;
}
     7e6:	08 95       	ret

000007e8 <TIMER_Manager_stop>:
u8_en_timerErrorsType TIMER_Manager_stop (u8_en_timerNumberType u8_en_timerNum)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if( u8_en_timerNum >= TIMER_INVALID_NUM )
     7e8:	83 30       	cpi	r24, 0x03	; 3
     7ea:	18 f4       	brcc	.+6      	; 0x7f2 <TIMER_Manager_stop+0xa>
	{
		l_ret = TIMER_E_NOT_OK;
	}
	else
	{
		l_ret = TIMER_stop(u8_en_timerNum);
     7ec:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <TIMER_stop>
     7f0:	08 95       	ret
u8_en_timerErrorsType TIMER_Manager_stop (u8_en_timerNumberType u8_en_timerNum)
{
	u8_en_timerErrorsType l_ret = TIMER_E_OK;
	if( u8_en_timerNum >= TIMER_INVALID_NUM )
	{
		l_ret = TIMER_E_NOT_OK;
     7f2:	83 e0       	ldi	r24, 0x03	; 3
	else
	{
		l_ret = TIMER_stop(u8_en_timerNum);
	}
	return l_ret;
}
     7f4:	08 95       	ret

000007f6 <HULTRASONIC_vidTimerCBF>:
float64_t HULTRASONIC_u8Read(void)
{
	HULTRASONIC_vidTrigger();
	
	return global_f64distance;
}
     7f6:	80 91 cf 00 	lds	r24, 0x00CF	; 0x8000cf <g_v_u16_ovfCounts>
     7fa:	90 91 d0 00 	lds	r25, 0x00D0	; 0x8000d0 <g_v_u16_ovfCounts+0x1>
     7fe:	a0 91 d1 00 	lds	r26, 0x00D1	; 0x8000d1 <g_v_u16_ovfCounts+0x2>
     802:	b0 91 d2 00 	lds	r27, 0x00D2	; 0x8000d2 <g_v_u16_ovfCounts+0x3>
     806:	01 96       	adiw	r24, 0x01	; 1
     808:	a1 1d       	adc	r26, r1
     80a:	b1 1d       	adc	r27, r1
     80c:	80 93 cf 00 	sts	0x00CF, r24	; 0x8000cf <g_v_u16_ovfCounts>
     810:	90 93 d0 00 	sts	0x00D0, r25	; 0x8000d0 <g_v_u16_ovfCounts+0x1>
     814:	a0 93 d1 00 	sts	0x00D1, r26	; 0x8000d1 <g_v_u16_ovfCounts+0x2>
     818:	b0 93 d2 00 	sts	0x00D2, r27	; 0x8000d2 <g_v_u16_ovfCounts+0x3>
     81c:	08 95       	ret

0000081e <HULTRASONIC_vidSigCalc>:
     81e:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <g_v_u8_flag>
     822:	81 11       	cpse	r24, r1
     824:	14 c0       	rjmp	.+40     	; 0x84e <HULTRASONIC_vidSigCalc+0x30>
     826:	0e 94 52 09 	call	0x12a4	; 0x12a4 <MTIMER_vidResetTCNT>
     82a:	62 e0       	ldi	r22, 0x02	; 2
     82c:	82 e0       	ldi	r24, 0x02	; 2
     82e:	0e 94 ae 05 	call	0xb5c	; 0xb5c <vidExtInt_init>
     832:	81 e0       	ldi	r24, 0x01	; 1
     834:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <g_v_u8_flag>
     838:	10 92 cf 00 	sts	0x00CF, r1	; 0x8000cf <g_v_u16_ovfCounts>
     83c:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <g_v_u16_ovfCounts+0x1>
     840:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <g_v_u16_ovfCounts+0x2>
     844:	10 92 d2 00 	sts	0x00D2, r1	; 0x8000d2 <g_v_u16_ovfCounts+0x3>
     848:	0e 94 3a 09 	call	0x1274	; 0x1274 <vidTimer2_start>
     84c:	08 95       	ret
     84e:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <g_v_u8_flag>
     852:	81 30       	cpi	r24, 0x01	; 1
     854:	09 f0       	breq	.+2      	; 0x858 <HULTRASONIC_vidSigCalc+0x3a>
     856:	56 c0       	rjmp	.+172    	; 0x904 <__stack+0xa5>
     858:	0e 94 44 09 	call	0x1288	; 0x1288 <vidTimer2_stop>
     85c:	0e 94 54 09 	call	0x12a8	; 0x12a8 <MTIMER_u8GetTCNT>
     860:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <g_v_u8_cap>
     864:	80 91 cf 00 	lds	r24, 0x00CF	; 0x8000cf <g_v_u16_ovfCounts>
     868:	90 91 d0 00 	lds	r25, 0x00D0	; 0x8000d0 <g_v_u16_ovfCounts+0x1>
     86c:	a0 91 d1 00 	lds	r26, 0x00D1	; 0x8000d1 <g_v_u16_ovfCounts+0x2>
     870:	b0 91 d2 00 	lds	r27, 0x00D2	; 0x8000d2 <g_v_u16_ovfCounts+0x3>
     874:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <g_v_u16_ovf>
     878:	90 93 e9 00 	sts	0x00E9, r25	; 0x8000e9 <g_v_u16_ovf+0x1>
     87c:	a0 93 ea 00 	sts	0x00EA, r26	; 0x8000ea <g_v_u16_ovf+0x2>
     880:	b0 93 eb 00 	sts	0x00EB, r27	; 0x8000eb <g_v_u16_ovf+0x3>
     884:	20 91 e7 00 	lds	r18, 0x00E7	; 0x8000e7 <g_v_u8_cap>
     888:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <g_v_u16_ovf>
     88c:	90 91 e9 00 	lds	r25, 0x00E9	; 0x8000e9 <g_v_u16_ovf+0x1>
     890:	a0 91 ea 00 	lds	r26, 0x00EA	; 0x8000ea <g_v_u16_ovf+0x2>
     894:	b0 91 eb 00 	lds	r27, 0x00EB	; 0x8000eb <g_v_u16_ovf+0x3>
     898:	ba 2f       	mov	r27, r26
     89a:	a9 2f       	mov	r26, r25
     89c:	98 2f       	mov	r25, r24
     89e:	88 27       	eor	r24, r24
     8a0:	bc 01       	movw	r22, r24
     8a2:	cd 01       	movw	r24, r26
     8a4:	62 0f       	add	r22, r18
     8a6:	71 1d       	adc	r23, r1
     8a8:	81 1d       	adc	r24, r1
     8aa:	91 1d       	adc	r25, r1
     8ac:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <__floatunsisf>
     8b0:	2d ec       	ldi	r18, 0xCD	; 205
     8b2:	3c e3       	ldi	r19, 0x3C	; 60
     8b4:	49 e6       	ldi	r20, 0x69	; 105
     8b6:	54 e4       	ldi	r21, 0x44	; 68
     8b8:	0e 94 f7 09 	call	0x13ee	; 0x13ee <__divsf3>
     8bc:	20 e0       	ldi	r18, 0x00	; 0
     8be:	30 e0       	ldi	r19, 0x00	; 0
     8c0:	40 e0       	ldi	r20, 0x00	; 0
     8c2:	50 e4       	ldi	r21, 0x40	; 64
     8c4:	0e 94 8a 09 	call	0x1314	; 0x1314 <__subsf3>
     8c8:	60 93 ca 00 	sts	0x00CA, r22	; 0x8000ca <global_f64distance>
     8cc:	70 93 cb 00 	sts	0x00CB, r23	; 0x8000cb <global_f64distance+0x1>
     8d0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <global_f64distance+0x2>
     8d4:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <global_f64distance+0x3>
     8d8:	10 92 e8 00 	sts	0x00E8, r1	; 0x8000e8 <g_v_u16_ovf>
     8dc:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <g_v_u16_ovf+0x1>
     8e0:	10 92 ea 00 	sts	0x00EA, r1	; 0x8000ea <g_v_u16_ovf+0x2>
     8e4:	10 92 eb 00 	sts	0x00EB, r1	; 0x8000eb <g_v_u16_ovf+0x3>
     8e8:	10 92 cf 00 	sts	0x00CF, r1	; 0x8000cf <g_v_u16_ovfCounts>
     8ec:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <g_v_u16_ovfCounts+0x1>
     8f0:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <g_v_u16_ovfCounts+0x2>
     8f4:	10 92 d2 00 	sts	0x00D2, r1	; 0x8000d2 <g_v_u16_ovfCounts+0x3>
     8f8:	10 92 ce 00 	sts	0x00CE, r1	; 0x8000ce <g_v_u8_flag>
     8fc:	63 e0       	ldi	r22, 0x03	; 3
     8fe:	82 e0       	ldi	r24, 0x02	; 2
     900:	0e 94 ae 05 	call	0xb5c	; 0xb5c <vidExtInt_init>
     904:	08 95       	ret

00000906 <HULTRASONIC_vidCBF_TIM>:
 * input param 	: void
 * return		: void
 * */
void HULTRASONIC_vidCBF_TIM(HULTRASONIC_ptr_func TIMER_ptrFunction2)
{
	vidTimer2_setcbf_OVF(TIMER_ptrFunction2);
     906:	0e 94 4b 09 	call	0x1296	; 0x1296 <vidTimer2_setcbf_OVF>
     90a:	08 95       	ret

0000090c <HULTRASONIC_vidCBF_INT>:
 * input param 	: void
 * return		: void
 * */
void HULTRASONIC_vidCBF_INT(HULTRASONIC_ptr_func EXTINT_ptrFunction2)
{
	MEXTINT_vidCallBackFunc(EXTINT_ptrFunction2);
     90c:	0e 94 36 06 	call	0xc6c	; 0xc6c <MEXTINT_vidCallBackFunc>
     910:	08 95       	ret

00000912 <main>:
=======
000002cc <HExtInt0_enIntDisable>:
     2cc:	0e 94 70 06 	call	0xce0	; 0xce0 <MEXTINT_vidDisableInterrupt>
     2d0:	08 95       	ret

000002d2 <HExtInt0_enIntEnable>:
     2d2:	0e 94 74 06 	call	0xce8	; 0xce8 <MEXTINT_vidEnableInterrupt>
     2d6:	08 95       	ret

000002d8 <HLCD_vidWritecmd>:
     2d8:	0f 93       	push	r16
     2da:	1f 93       	push	r17
     2dc:	cf 93       	push	r28
     2de:	df 93       	push	r29
     2e0:	18 2f       	mov	r17, r24
     2e2:	40 e0       	ldi	r20, 0x00	; 0
     2e4:	60 e0       	ldi	r22, 0x00	; 0
     2e6:	83 e0       	ldi	r24, 0x03	; 3
     2e8:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     2ec:	c8 2f       	mov	r28, r24
     2ee:	40 e0       	ldi	r20, 0x00	; 0
     2f0:	67 e0       	ldi	r22, 0x07	; 7
     2f2:	82 e0       	ldi	r24, 0x02	; 2
     2f4:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     2f8:	c8 2b       	or	r28, r24
     2fa:	01 2f       	mov	r16, r17
     2fc:	02 95       	swap	r16
     2fe:	0f 70       	andi	r16, 0x0F	; 15
     300:	d0 e0       	ldi	r29, 0x00	; 0
     302:	15 c0       	rjmp	.+42     	; 0x32e <HLCD_vidWritecmd+0x56>
     304:	ed 2f       	mov	r30, r29
     306:	f0 e0       	ldi	r31, 0x00	; 0
     308:	40 2f       	mov	r20, r16
     30a:	50 e0       	ldi	r21, 0x00	; 0
     30c:	0d 2e       	mov	r0, r29
     30e:	02 c0       	rjmp	.+4      	; 0x314 <HLCD_vidWritecmd+0x3c>
     310:	55 95       	asr	r21
     312:	47 95       	ror	r20
     314:	0a 94       	dec	r0
     316:	e2 f7       	brpl	.-8      	; 0x310 <HLCD_vidWritecmd+0x38>
     318:	41 70       	andi	r20, 0x01	; 1
     31a:	ee 0f       	add	r30, r30
     31c:	ff 1f       	adc	r31, r31
     31e:	e8 58       	subi	r30, 0x88	; 136
     320:	ff 4f       	sbci	r31, 0xFF	; 255
     322:	61 81       	ldd	r22, Z+1	; 0x01
     324:	80 81       	ld	r24, Z
     326:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     32a:	c8 2b       	or	r28, r24
     32c:	df 5f       	subi	r29, 0xFF	; 255
     32e:	d4 30       	cpi	r29, 0x04	; 4
     330:	48 f3       	brcs	.-46     	; 0x304 <HLCD_vidWritecmd+0x2c>
     332:	41 e0       	ldi	r20, 0x01	; 1
     334:	61 e0       	ldi	r22, 0x01	; 1
     336:	83 e0       	ldi	r24, 0x03	; 3
     338:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     33c:	c8 2b       	or	r28, r24
     33e:	89 ef       	ldi	r24, 0xF9	; 249
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	01 97       	sbiw	r24, 0x01	; 1
     344:	f1 f7       	brne	.-4      	; 0x342 <HLCD_vidWritecmd+0x6a>
     346:	00 c0       	rjmp	.+0      	; 0x348 <HLCD_vidWritecmd+0x70>
     348:	00 00       	nop
     34a:	40 e0       	ldi	r20, 0x00	; 0
     34c:	61 e0       	ldi	r22, 0x01	; 1
     34e:	83 e0       	ldi	r24, 0x03	; 3
     350:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     354:	c8 2b       	or	r28, r24
     356:	92 e4       	ldi	r25, 0x42	; 66
     358:	9a 95       	dec	r25
     35a:	f1 f7       	brne	.-4      	; 0x358 <HLCD_vidWritecmd+0x80>
     35c:	00 c0       	rjmp	.+0      	; 0x35e <HLCD_vidWritecmd+0x86>
     35e:	1f 70       	andi	r17, 0x0F	; 15
     360:	d0 e0       	ldi	r29, 0x00	; 0
     362:	15 c0       	rjmp	.+42     	; 0x38e <HLCD_vidWritecmd+0xb6>
     364:	ed 2f       	mov	r30, r29
     366:	f0 e0       	ldi	r31, 0x00	; 0
     368:	41 2f       	mov	r20, r17
     36a:	50 e0       	ldi	r21, 0x00	; 0
     36c:	0d 2e       	mov	r0, r29
     36e:	02 c0       	rjmp	.+4      	; 0x374 <HLCD_vidWritecmd+0x9c>
     370:	55 95       	asr	r21
     372:	47 95       	ror	r20
     374:	0a 94       	dec	r0
     376:	e2 f7       	brpl	.-8      	; 0x370 <HLCD_vidWritecmd+0x98>
     378:	41 70       	andi	r20, 0x01	; 1
     37a:	ee 0f       	add	r30, r30
     37c:	ff 1f       	adc	r31, r31
     37e:	e8 58       	subi	r30, 0x88	; 136
     380:	ff 4f       	sbci	r31, 0xFF	; 255
     382:	61 81       	ldd	r22, Z+1	; 0x01
     384:	80 81       	ld	r24, Z
     386:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     38a:	c8 2b       	or	r28, r24
     38c:	df 5f       	subi	r29, 0xFF	; 255
     38e:	d4 30       	cpi	r29, 0x04	; 4
     390:	48 f3       	brcs	.-46     	; 0x364 <HLCD_vidWritecmd+0x8c>
     392:	41 e0       	ldi	r20, 0x01	; 1
     394:	61 e0       	ldi	r22, 0x01	; 1
     396:	83 e0       	ldi	r24, 0x03	; 3
     398:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     39c:	c8 2b       	or	r28, r24
     39e:	e9 ef       	ldi	r30, 0xF9	; 249
     3a0:	f0 e0       	ldi	r31, 0x00	; 0
     3a2:	31 97       	sbiw	r30, 0x01	; 1
     3a4:	f1 f7       	brne	.-4      	; 0x3a2 <HLCD_vidWritecmd+0xca>
     3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <HLCD_vidWritecmd+0xd0>
     3a8:	00 00       	nop
     3aa:	40 e0       	ldi	r20, 0x00	; 0
     3ac:	61 e0       	ldi	r22, 0x01	; 1
     3ae:	83 e0       	ldi	r24, 0x03	; 3
     3b0:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     3b4:	8c 2b       	or	r24, r28
     3b6:	e3 ef       	ldi	r30, 0xF3	; 243
     3b8:	f1 e0       	ldi	r31, 0x01	; 1
     3ba:	31 97       	sbiw	r30, 0x01	; 1
     3bc:	f1 f7       	brne	.-4      	; 0x3ba <HLCD_vidWritecmd+0xe2>
     3be:	00 c0       	rjmp	.+0      	; 0x3c0 <HLCD_vidWritecmd+0xe8>
     3c0:	00 00       	nop
     3c2:	df 91       	pop	r29
     3c4:	cf 91       	pop	r28
     3c6:	1f 91       	pop	r17
     3c8:	0f 91       	pop	r16
     3ca:	08 95       	ret

000003cc <HLCD_vidInit>:
     3cc:	cf 93       	push	r28
     3ce:	df 93       	push	r29
     3d0:	d0 e0       	ldi	r29, 0x00	; 0
     3d2:	c0 e0       	ldi	r28, 0x00	; 0
     3d4:	0d c0       	rjmp	.+26     	; 0x3f0 <HLCD_vidInit+0x24>
     3d6:	ed 2f       	mov	r30, r29
     3d8:	f0 e0       	ldi	r31, 0x00	; 0
     3da:	ee 0f       	add	r30, r30
     3dc:	ff 1f       	adc	r31, r31
     3de:	e8 58       	subi	r30, 0x88	; 136
     3e0:	ff 4f       	sbci	r31, 0xFF	; 255
     3e2:	41 e0       	ldi	r20, 0x01	; 1
     3e4:	61 81       	ldd	r22, Z+1	; 0x01
     3e6:	80 81       	ld	r24, Z
     3e8:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     3ec:	c8 2b       	or	r28, r24
     3ee:	df 5f       	subi	r29, 0xFF	; 255
     3f0:	d4 30       	cpi	r29, 0x04	; 4
     3f2:	88 f3       	brcs	.-30     	; 0x3d6 <HLCD_vidInit+0xa>
     3f4:	41 e0       	ldi	r20, 0x01	; 1
     3f6:	67 e0       	ldi	r22, 0x07	; 7
     3f8:	82 e0       	ldi	r24, 0x02	; 2
     3fa:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     3fe:	c8 2b       	or	r28, r24
     400:	41 e0       	ldi	r20, 0x01	; 1
     402:	60 e0       	ldi	r22, 0x00	; 0
     404:	83 e0       	ldi	r24, 0x03	; 3
     406:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     40a:	c8 2b       	or	r28, r24
     40c:	41 e0       	ldi	r20, 0x01	; 1
     40e:	61 e0       	ldi	r22, 0x01	; 1
     410:	83 e0       	ldi	r24, 0x03	; 3
     412:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     416:	c8 2b       	or	r28, r24
     418:	8f e0       	ldi	r24, 0x0F	; 15
     41a:	97 e2       	ldi	r25, 0x27	; 39
     41c:	01 97       	sbiw	r24, 0x01	; 1
     41e:	f1 f7       	brne	.-4      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
     420:	00 c0       	rjmp	.+0      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
     422:	00 00       	nop
     424:	82 e0       	ldi	r24, 0x02	; 2
     426:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <HLCD_vidWritecmd>
     42a:	c8 2b       	or	r28, r24
     42c:	e9 ef       	ldi	r30, 0xF9	; 249
     42e:	f0 e0       	ldi	r31, 0x00	; 0
     430:	31 97       	sbiw	r30, 0x01	; 1
     432:	f1 f7       	brne	.-4      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
     434:	00 c0       	rjmp	.+0      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
     436:	00 00       	nop
     438:	88 e2       	ldi	r24, 0x28	; 40
     43a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <HLCD_vidWritecmd>
     43e:	c8 2b       	or	r28, r24
     440:	89 ef       	ldi	r24, 0xF9	; 249
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	01 97       	sbiw	r24, 0x01	; 1
     446:	f1 f7       	brne	.-4      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
     448:	00 c0       	rjmp	.+0      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     44a:	00 00       	nop
     44c:	81 e0       	ldi	r24, 0x01	; 1
     44e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <HLCD_vidWritecmd>
     452:	c8 2b       	or	r28, r24
     454:	e7 ee       	ldi	r30, 0xE7	; 231
     456:	f3 e0       	ldi	r31, 0x03	; 3
     458:	31 97       	sbiw	r30, 0x01	; 1
     45a:	f1 f7       	brne	.-4      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     45c:	00 c0       	rjmp	.+0      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
     45e:	00 00       	nop
     460:	86 e0       	ldi	r24, 0x06	; 6
     462:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <HLCD_vidWritecmd>
     466:	c8 2b       	or	r28, r24
     468:	89 ef       	ldi	r24, 0xF9	; 249
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	01 97       	sbiw	r24, 0x01	; 1
     46e:	f1 f7       	brne	.-4      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
     470:	00 c0       	rjmp	.+0      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
     472:	00 00       	nop
     474:	8c e0       	ldi	r24, 0x0C	; 12
     476:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <HLCD_vidWritecmd>
     47a:	8c 2b       	or	r24, r28
     47c:	e9 ef       	ldi	r30, 0xF9	; 249
     47e:	f0 e0       	ldi	r31, 0x00	; 0
     480:	31 97       	sbiw	r30, 0x01	; 1
     482:	f1 f7       	brne	.-4      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     484:	00 c0       	rjmp	.+0      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
     486:	00 00       	nop
     488:	df 91       	pop	r29
     48a:	cf 91       	pop	r28
     48c:	08 95       	ret

0000048e <HLCD_vidWriteChar>:
     48e:	0f 93       	push	r16
     490:	1f 93       	push	r17
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	18 2f       	mov	r17, r24
     498:	40 e0       	ldi	r20, 0x00	; 0
     49a:	60 e0       	ldi	r22, 0x00	; 0
     49c:	83 e0       	ldi	r24, 0x03	; 3
     49e:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     4a2:	c8 2f       	mov	r28, r24
     4a4:	41 e0       	ldi	r20, 0x01	; 1
     4a6:	67 e0       	ldi	r22, 0x07	; 7
     4a8:	82 e0       	ldi	r24, 0x02	; 2
     4aa:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     4ae:	c8 2b       	or	r28, r24
     4b0:	01 2f       	mov	r16, r17
     4b2:	02 95       	swap	r16
     4b4:	0f 70       	andi	r16, 0x0F	; 15
     4b6:	d0 e0       	ldi	r29, 0x00	; 0
     4b8:	15 c0       	rjmp	.+42     	; 0x4e4 <HLCD_vidWriteChar+0x56>
     4ba:	ed 2f       	mov	r30, r29
     4bc:	f0 e0       	ldi	r31, 0x00	; 0
     4be:	40 2f       	mov	r20, r16
     4c0:	50 e0       	ldi	r21, 0x00	; 0
     4c2:	0d 2e       	mov	r0, r29
     4c4:	02 c0       	rjmp	.+4      	; 0x4ca <HLCD_vidWriteChar+0x3c>
     4c6:	55 95       	asr	r21
     4c8:	47 95       	ror	r20
     4ca:	0a 94       	dec	r0
     4cc:	e2 f7       	brpl	.-8      	; 0x4c6 <HLCD_vidWriteChar+0x38>
     4ce:	41 70       	andi	r20, 0x01	; 1
     4d0:	ee 0f       	add	r30, r30
     4d2:	ff 1f       	adc	r31, r31
     4d4:	e8 58       	subi	r30, 0x88	; 136
     4d6:	ff 4f       	sbci	r31, 0xFF	; 255
     4d8:	61 81       	ldd	r22, Z+1	; 0x01
     4da:	80 81       	ld	r24, Z
     4dc:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     4e0:	c8 2b       	or	r28, r24
     4e2:	df 5f       	subi	r29, 0xFF	; 255
     4e4:	d4 30       	cpi	r29, 0x04	; 4
     4e6:	48 f3       	brcs	.-46     	; 0x4ba <HLCD_vidWriteChar+0x2c>
     4e8:	41 e0       	ldi	r20, 0x01	; 1
     4ea:	61 e0       	ldi	r22, 0x01	; 1
     4ec:	83 e0       	ldi	r24, 0x03	; 3
     4ee:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     4f2:	c8 2b       	or	r28, r24
     4f4:	89 ef       	ldi	r24, 0xF9	; 249
     4f6:	90 e0       	ldi	r25, 0x00	; 0
     4f8:	01 97       	sbiw	r24, 0x01	; 1
     4fa:	f1 f7       	brne	.-4      	; 0x4f8 <HLCD_vidWriteChar+0x6a>
     4fc:	00 c0       	rjmp	.+0      	; 0x4fe <HLCD_vidWriteChar+0x70>
     4fe:	00 00       	nop
     500:	40 e0       	ldi	r20, 0x00	; 0
     502:	61 e0       	ldi	r22, 0x01	; 1
     504:	83 e0       	ldi	r24, 0x03	; 3
     506:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     50a:	c8 2b       	or	r28, r24
     50c:	92 e4       	ldi	r25, 0x42	; 66
     50e:	9a 95       	dec	r25
     510:	f1 f7       	brne	.-4      	; 0x50e <HLCD_vidWriteChar+0x80>
     512:	00 c0       	rjmp	.+0      	; 0x514 <HLCD_vidWriteChar+0x86>
     514:	1f 70       	andi	r17, 0x0F	; 15
     516:	d0 e0       	ldi	r29, 0x00	; 0
     518:	15 c0       	rjmp	.+42     	; 0x544 <HLCD_vidWriteChar+0xb6>
     51a:	ed 2f       	mov	r30, r29
     51c:	f0 e0       	ldi	r31, 0x00	; 0
     51e:	41 2f       	mov	r20, r17
     520:	50 e0       	ldi	r21, 0x00	; 0
     522:	0d 2e       	mov	r0, r29
     524:	02 c0       	rjmp	.+4      	; 0x52a <HLCD_vidWriteChar+0x9c>
     526:	55 95       	asr	r21
     528:	47 95       	ror	r20
     52a:	0a 94       	dec	r0
     52c:	e2 f7       	brpl	.-8      	; 0x526 <HLCD_vidWriteChar+0x98>
     52e:	41 70       	andi	r20, 0x01	; 1
     530:	ee 0f       	add	r30, r30
     532:	ff 1f       	adc	r31, r31
     534:	e8 58       	subi	r30, 0x88	; 136
     536:	ff 4f       	sbci	r31, 0xFF	; 255
     538:	61 81       	ldd	r22, Z+1	; 0x01
     53a:	80 81       	ld	r24, Z
     53c:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     540:	c8 2b       	or	r28, r24
     542:	df 5f       	subi	r29, 0xFF	; 255
     544:	d4 30       	cpi	r29, 0x04	; 4
     546:	48 f3       	brcs	.-46     	; 0x51a <HLCD_vidWriteChar+0x8c>
     548:	41 e0       	ldi	r20, 0x01	; 1
     54a:	61 e0       	ldi	r22, 0x01	; 1
     54c:	83 e0       	ldi	r24, 0x03	; 3
     54e:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     552:	c8 2b       	or	r28, r24
     554:	e9 ef       	ldi	r30, 0xF9	; 249
     556:	f0 e0       	ldi	r31, 0x00	; 0
     558:	31 97       	sbiw	r30, 0x01	; 1
     55a:	f1 f7       	brne	.-4      	; 0x558 <HLCD_vidWriteChar+0xca>
     55c:	00 c0       	rjmp	.+0      	; 0x55e <HLCD_vidWriteChar+0xd0>
     55e:	00 00       	nop
     560:	40 e0       	ldi	r20, 0x00	; 0
     562:	61 e0       	ldi	r22, 0x01	; 1
     564:	83 e0       	ldi	r24, 0x03	; 3
     566:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     56a:	8c 2b       	or	r24, r28
     56c:	e3 ef       	ldi	r30, 0xF3	; 243
     56e:	f1 e0       	ldi	r31, 0x01	; 1
     570:	31 97       	sbiw	r30, 0x01	; 1
     572:	f1 f7       	brne	.-4      	; 0x570 <HLCD_vidWriteChar+0xe2>
     574:	00 c0       	rjmp	.+0      	; 0x576 <HLCD_vidWriteChar+0xe8>
     576:	00 00       	nop
     578:	df 91       	pop	r29
     57a:	cf 91       	pop	r28
     57c:	1f 91       	pop	r17
     57e:	0f 91       	pop	r16
     580:	08 95       	ret

00000582 <HLCD_ClrDisplay>:
     582:	cf 93       	push	r28
     584:	81 e0       	ldi	r24, 0x01	; 1
     586:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <HLCD_vidWritecmd>
     58a:	c8 2f       	mov	r28, r24
     58c:	87 ee       	ldi	r24, 0xE7	; 231
     58e:	93 e0       	ldi	r25, 0x03	; 3
     590:	01 97       	sbiw	r24, 0x01	; 1
     592:	f1 f7       	brne	.-4      	; 0x590 <HLCD_ClrDisplay+0xe>
     594:	00 c0       	rjmp	.+0      	; 0x596 <HLCD_ClrDisplay+0x14>
     596:	00 00       	nop
     598:	82 e0       	ldi	r24, 0x02	; 2
     59a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <HLCD_vidWritecmd>
     59e:	8c 2b       	or	r24, r28
     5a0:	e7 ee       	ldi	r30, 0xE7	; 231
     5a2:	f3 e0       	ldi	r31, 0x03	; 3
     5a4:	31 97       	sbiw	r30, 0x01	; 1
     5a6:	f1 f7       	brne	.-4      	; 0x5a4 <HLCD_ClrDisplay+0x22>
     5a8:	00 c0       	rjmp	.+0      	; 0x5aa <HLCD_ClrDisplay+0x28>
     5aa:	00 00       	nop
     5ac:	cf 91       	pop	r28
     5ae:	08 95       	ret

000005b0 <HLCD_gotoXY>:
     5b0:	81 11       	cpse	r24, r1
     5b2:	08 c0       	rjmp	.+16     	; 0x5c4 <HLCD_gotoXY+0x14>
     5b4:	60 31       	cpi	r22, 0x10	; 16
     5b6:	30 f4       	brcc	.+12     	; 0x5c4 <HLCD_gotoXY+0x14>
     5b8:	86 2f       	mov	r24, r22
     5ba:	8f 70       	andi	r24, 0x0F	; 15
     5bc:	80 68       	ori	r24, 0x80	; 128
     5be:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <HLCD_vidWritecmd>
     5c2:	08 95       	ret
     5c4:	81 30       	cpi	r24, 0x01	; 1
     5c6:	41 f4       	brne	.+16     	; 0x5d8 <HLCD_gotoXY+0x28>
     5c8:	60 31       	cpi	r22, 0x10	; 16
     5ca:	40 f4       	brcc	.+16     	; 0x5dc <HLCD_gotoXY+0x2c>
     5cc:	86 2f       	mov	r24, r22
     5ce:	8f 70       	andi	r24, 0x0F	; 15
     5d0:	80 6c       	ori	r24, 0xC0	; 192
     5d2:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <HLCD_vidWritecmd>
     5d6:	08 95       	ret
     5d8:	85 e0       	ldi	r24, 0x05	; 5
     5da:	08 95       	ret
     5dc:	85 e0       	ldi	r24, 0x05	; 5
     5de:	08 95       	ret

000005e0 <HLCD_WriteString>:
     5e0:	ef 92       	push	r14
     5e2:	ff 92       	push	r15
     5e4:	1f 93       	push	r17
     5e6:	cf 93       	push	r28
     5e8:	df 93       	push	r29
     5ea:	7c 01       	movw	r14, r24
     5ec:	fc 01       	movw	r30, r24
     5ee:	80 81       	ld	r24, Z
     5f0:	c0 e0       	ldi	r28, 0x00	; 0
     5f2:	d0 e0       	ldi	r29, 0x00	; 0
     5f4:	10 e0       	ldi	r17, 0x00	; 0
     5f6:	08 c0       	rjmp	.+16     	; 0x608 <HLCD_WriteString+0x28>
     5f8:	0e 94 47 02 	call	0x48e	; 0x48e <HLCD_vidWriteChar>
     5fc:	18 2b       	or	r17, r24
     5fe:	21 96       	adiw	r28, 0x01	; 1
     600:	f7 01       	movw	r30, r14
     602:	ec 0f       	add	r30, r28
     604:	fd 1f       	adc	r31, r29
     606:	80 81       	ld	r24, Z
     608:	81 11       	cpse	r24, r1
     60a:	f6 cf       	rjmp	.-20     	; 0x5f8 <HLCD_WriteString+0x18>
     60c:	81 2f       	mov	r24, r17
     60e:	df 91       	pop	r29
     610:	cf 91       	pop	r28
     612:	1f 91       	pop	r17
     614:	ff 90       	pop	r15
     616:	ef 90       	pop	r14
     618:	08 95       	ret

0000061a <KEYPAD_init>:
     61a:	cf 93       	push	r28
     61c:	df 93       	push	r29
     61e:	00 97       	sbiw	r24, 0x00	; 0
     620:	a9 f1       	breq	.+106    	; 0x68c <KEYPAD_init+0x72>
     622:	ec 01       	movw	r28, r24
     624:	69 81       	ldd	r22, Y+1	; 0x01
     626:	40 e0       	ldi	r20, 0x00	; 0
     628:	88 81       	ld	r24, Y
     62a:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     62e:	6b 81       	ldd	r22, Y+3	; 0x03
     630:	40 e0       	ldi	r20, 0x00	; 0
     632:	8a 81       	ldd	r24, Y+2	; 0x02
     634:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     638:	6d 81       	ldd	r22, Y+5	; 0x05
     63a:	40 e0       	ldi	r20, 0x00	; 0
     63c:	8c 81       	ldd	r24, Y+4	; 0x04
     63e:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     642:	69 81       	ldd	r22, Y+1	; 0x01
     644:	41 e0       	ldi	r20, 0x01	; 1
     646:	88 81       	ld	r24, Y
     648:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     64c:	6b 81       	ldd	r22, Y+3	; 0x03
     64e:	41 e0       	ldi	r20, 0x01	; 1
     650:	8a 81       	ldd	r24, Y+2	; 0x02
     652:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     656:	6d 81       	ldd	r22, Y+5	; 0x05
     658:	41 e0       	ldi	r20, 0x01	; 1
     65a:	8c 81       	ldd	r24, Y+4	; 0x04
     65c:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     660:	6f 81       	ldd	r22, Y+7	; 0x07
     662:	41 e0       	ldi	r20, 0x01	; 1
     664:	8e 81       	ldd	r24, Y+6	; 0x06
     666:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     66a:	69 85       	ldd	r22, Y+9	; 0x09
     66c:	41 e0       	ldi	r20, 0x01	; 1
     66e:	88 85       	ldd	r24, Y+8	; 0x08
     670:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     674:	6b 85       	ldd	r22, Y+11	; 0x0b
     676:	41 e0       	ldi	r20, 0x01	; 1
     678:	8a 85       	ldd	r24, Y+10	; 0x0a
     67a:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     67e:	6d 85       	ldd	r22, Y+13	; 0x0d
     680:	41 e0       	ldi	r20, 0x01	; 1
     682:	8c 85       	ldd	r24, Y+12	; 0x0c
     684:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	01 c0       	rjmp	.+2      	; 0x68e <KEYPAD_init+0x74>
     68c:	87 e0       	ldi	r24, 0x07	; 7
     68e:	df 91       	pop	r29
     690:	cf 91       	pop	r28
     692:	08 95       	ret

00000694 <KEYPAD_read>:
     694:	df 92       	push	r13
     696:	ef 92       	push	r14
     698:	ff 92       	push	r15
     69a:	0f 93       	push	r16
     69c:	1f 93       	push	r17
     69e:	cf 93       	push	r28
     6a0:	df 93       	push	r29
     6a2:	1f 92       	push	r1
     6a4:	cd b7       	in	r28, 0x3d	; 61
     6a6:	de b7       	in	r29, 0x3e	; 62
     6a8:	7c 01       	movw	r14, r24
     6aa:	07 e6       	ldi	r16, 0x67	; 103
     6ac:	10 e0       	ldi	r17, 0x00	; 0
     6ae:	f8 01       	movw	r30, r16
     6b0:	67 81       	ldd	r22, Z+7	; 0x07
     6b2:	41 e0       	ldi	r20, 0x01	; 1
     6b4:	86 81       	ldd	r24, Z+6	; 0x06
     6b6:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     6ba:	f8 01       	movw	r30, r16
     6bc:	61 85       	ldd	r22, Z+9	; 0x09
     6be:	41 e0       	ldi	r20, 0x01	; 1
     6c0:	80 85       	ldd	r24, Z+8	; 0x08
     6c2:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     6c6:	f8 01       	movw	r30, r16
     6c8:	63 85       	ldd	r22, Z+11	; 0x0b
     6ca:	41 e0       	ldi	r20, 0x01	; 1
     6cc:	82 85       	ldd	r24, Z+10	; 0x0a
     6ce:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     6d2:	f8 01       	movw	r30, r16
     6d4:	65 85       	ldd	r22, Z+13	; 0x0d
     6d6:	41 e0       	ldi	r20, 0x01	; 1
     6d8:	84 85       	ldd	r24, Z+12	; 0x0c
     6da:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     6de:	00 e0       	ldi	r16, 0x00	; 0
     6e0:	d1 2c       	mov	r13, r1
     6e2:	42 c0       	rjmp	.+132    	; 0x768 <KEYPAD_read+0xd4>
     6e4:	e7 e6       	ldi	r30, 0x67	; 103
     6e6:	f0 e0       	ldi	r31, 0x00	; 0
     6e8:	67 81       	ldd	r22, Z+7	; 0x07
     6ea:	60 0f       	add	r22, r16
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	86 81       	ldd	r24, Z+6	; 0x06
     6f0:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     6f4:	10 e0       	ldi	r17, 0x00	; 0
     6f6:	2d c0       	rjmp	.+90     	; 0x752 <KEYPAD_read+0xbe>
     6f8:	e7 e6       	ldi	r30, 0x67	; 103
     6fa:	f0 e0       	ldi	r31, 0x00	; 0
     6fc:	61 81       	ldd	r22, Z+1	; 0x01
     6fe:	61 0f       	add	r22, r17
     700:	ae 01       	movw	r20, r28
     702:	4f 5f       	subi	r20, 0xFF	; 255
     704:	5f 4f       	sbci	r21, 0xFF	; 255
     706:	80 81       	ld	r24, Z
     708:	0e 94 78 05 	call	0xaf0	; 0xaf0 <DIO_readPIN>
     70c:	89 81       	ldd	r24, Y+1	; 0x01
     70e:	81 11       	cpse	r24, r1
     710:	1f c0       	rjmp	.+62     	; 0x750 <KEYPAD_read+0xbc>
     712:	0a c0       	rjmp	.+20     	; 0x728 <KEYPAD_read+0x94>
     714:	e7 e6       	ldi	r30, 0x67	; 103
     716:	f0 e0       	ldi	r31, 0x00	; 0
     718:	61 81       	ldd	r22, Z+1	; 0x01
     71a:	61 0f       	add	r22, r17
     71c:	ae 01       	movw	r20, r28
     71e:	4f 5f       	subi	r20, 0xFF	; 255
     720:	5f 4f       	sbci	r21, 0xFF	; 255
     722:	80 81       	ld	r24, Z
     724:	0e 94 78 05 	call	0xaf0	; 0xaf0 <DIO_readPIN>
     728:	89 81       	ldd	r24, Y+1	; 0x01
     72a:	88 23       	and	r24, r24
     72c:	99 f3       	breq	.-26     	; 0x714 <KEYPAD_read+0x80>
     72e:	80 2f       	mov	r24, r16
     730:	90 e0       	ldi	r25, 0x00	; 0
     732:	fc 01       	movw	r30, r24
     734:	ee 0f       	add	r30, r30
     736:	ff 1f       	adc	r31, r31
     738:	e8 0f       	add	r30, r24
     73a:	f9 1f       	adc	r31, r25
     73c:	ea 54       	subi	r30, 0x4A	; 74
     73e:	ff 4f       	sbci	r31, 0xFF	; 255
     740:	e1 0f       	add	r30, r17
     742:	f1 1d       	adc	r31, r1
     744:	80 81       	ld	r24, Z
     746:	f7 01       	movw	r30, r14
     748:	80 83       	st	Z, r24
     74a:	dd 24       	eor	r13, r13
     74c:	d3 94       	inc	r13
     74e:	03 c0       	rjmp	.+6      	; 0x756 <KEYPAD_read+0xc2>
     750:	1f 5f       	subi	r17, 0xFF	; 255
     752:	13 30       	cpi	r17, 0x03	; 3
     754:	88 f2       	brcs	.-94     	; 0x6f8 <KEYPAD_read+0x64>
     756:	e7 e6       	ldi	r30, 0x67	; 103
     758:	f0 e0       	ldi	r31, 0x00	; 0
     75a:	67 81       	ldd	r22, Z+7	; 0x07
     75c:	60 0f       	add	r22, r16
     75e:	41 e0       	ldi	r20, 0x01	; 1
     760:	86 81       	ldd	r24, Z+6	; 0x06
     762:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     766:	0f 5f       	subi	r16, 0xFF	; 255
     768:	04 30       	cpi	r16, 0x04	; 4
     76a:	08 f4       	brcc	.+2      	; 0x76e <KEYPAD_read+0xda>
     76c:	bb cf       	rjmp	.-138    	; 0x6e4 <KEYPAD_read+0x50>
     76e:	f1 e0       	ldi	r31, 0x01	; 1
     770:	df 16       	cp	r13, r31
     772:	19 f0       	breq	.+6      	; 0x77a <KEYPAD_read+0xe6>
     774:	8e e4       	ldi	r24, 0x4E	; 78
     776:	f7 01       	movw	r30, r14
     778:	80 83       	st	Z, r24
     77a:	80 e0       	ldi	r24, 0x00	; 0
     77c:	0f 90       	pop	r0
     77e:	df 91       	pop	r29
     780:	cf 91       	pop	r28
     782:	1f 91       	pop	r17
     784:	0f 91       	pop	r16
     786:	ff 90       	pop	r15
     788:	ef 90       	pop	r14
     78a:	df 90       	pop	r13
     78c:	08 95       	ret

0000078e <TIMER_Manager_init>:
     78e:	1f 93       	push	r17
     790:	cf 93       	push	r28
     792:	df 93       	push	r29
     794:	00 97       	sbiw	r24, 0x00	; 0
     796:	91 f0       	breq	.+36     	; 0x7bc <TIMER_Manager_init+0x2e>
     798:	fc 01       	movw	r30, r24
     79a:	20 81       	ld	r18, Z
     79c:	23 30       	cpi	r18, 0x03	; 3
     79e:	80 f4       	brcc	.+32     	; 0x7c0 <TIMER_Manager_init+0x32>
     7a0:	21 81       	ldd	r18, Z+1	; 0x01
     7a2:	2a 30       	cpi	r18, 0x0A	; 10
     7a4:	78 f4       	brcc	.+30     	; 0x7c4 <TIMER_Manager_init+0x36>
     7a6:	ec 01       	movw	r28, r24
     7a8:	0e 94 50 07 	call	0xea0	; 0xea0 <TIMER_init>
     7ac:	18 2f       	mov	r17, r24
     7ae:	68 81       	ld	r22, Y
     7b0:	8d 81       	ldd	r24, Y+5	; 0x05
     7b2:	9e 81       	ldd	r25, Y+6	; 0x06
     7b4:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <TIMER_setCallBack>
     7b8:	81 2b       	or	r24, r17
     7ba:	05 c0       	rjmp	.+10     	; 0x7c6 <TIMER_Manager_init+0x38>
     7bc:	83 e0       	ldi	r24, 0x03	; 3
     7be:	03 c0       	rjmp	.+6      	; 0x7c6 <TIMER_Manager_init+0x38>
     7c0:	83 e0       	ldi	r24, 0x03	; 3
     7c2:	01 c0       	rjmp	.+2      	; 0x7c6 <TIMER_Manager_init+0x38>
     7c4:	83 e0       	ldi	r24, 0x03	; 3
     7c6:	df 91       	pop	r29
     7c8:	cf 91       	pop	r28
     7ca:	1f 91       	pop	r17
     7cc:	08 95       	ret

000007ce <TIMER_Manager_start>:
     7ce:	00 97       	sbiw	r24, 0x00	; 0
     7d0:	51 f0       	breq	.+20     	; 0x7e6 <TIMER_Manager_start+0x18>
     7d2:	fc 01       	movw	r30, r24
     7d4:	20 81       	ld	r18, Z
     7d6:	23 30       	cpi	r18, 0x03	; 3
     7d8:	40 f4       	brcc	.+16     	; 0x7ea <TIMER_Manager_start+0x1c>
     7da:	21 81       	ldd	r18, Z+1	; 0x01
     7dc:	2a 30       	cpi	r18, 0x0A	; 10
     7de:	38 f4       	brcc	.+14     	; 0x7ee <TIMER_Manager_start+0x20>
     7e0:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <TIMER_start>
     7e4:	08 95       	ret
     7e6:	83 e0       	ldi	r24, 0x03	; 3
     7e8:	08 95       	ret
     7ea:	83 e0       	ldi	r24, 0x03	; 3
     7ec:	08 95       	ret
     7ee:	83 e0       	ldi	r24, 0x03	; 3
     7f0:	08 95       	ret

000007f2 <TIMER_Manager_stop>:
     7f2:	83 30       	cpi	r24, 0x03	; 3
     7f4:	18 f4       	brcc	.+6      	; 0x7fc <TIMER_Manager_stop+0xa>
     7f6:	0e 94 25 09 	call	0x124a	; 0x124a <TIMER_stop>
     7fa:	08 95       	ret
     7fc:	83 e0       	ldi	r24, 0x03	; 3
     7fe:	08 95       	ret

00000800 <TIMER_Manager_reset>:
     800:	00 97       	sbiw	r24, 0x00	; 0
     802:	51 f0       	breq	.+20     	; 0x818 <TIMER_Manager_reset+0x18>
     804:	fc 01       	movw	r30, r24
     806:	20 81       	ld	r18, Z
     808:	23 30       	cpi	r18, 0x03	; 3
     80a:	40 f4       	brcc	.+16     	; 0x81c <TIMER_Manager_reset+0x1c>
     80c:	21 81       	ldd	r18, Z+1	; 0x01
     80e:	2a 30       	cpi	r18, 0x0A	; 10
     810:	38 f4       	brcc	.+14     	; 0x820 <TIMER_Manager_reset+0x20>
     812:	0e 94 52 09 	call	0x12a4	; 0x12a4 <TIMER_reset>
     816:	08 95       	ret
     818:	83 e0       	ldi	r24, 0x03	; 3
     81a:	08 95       	ret
     81c:	83 e0       	ldi	r24, 0x03	; 3
     81e:	08 95       	ret
     820:	83 e0       	ldi	r24, 0x03	; 3
     822:	08 95       	ret

00000824 <HULTRASONIC_vidTimerCBF>:
     824:	80 91 cf 00 	lds	r24, 0x00CF	; 0x8000cf <g_v_u16_ovfCounts>
     828:	90 91 d0 00 	lds	r25, 0x00D0	; 0x8000d0 <g_v_u16_ovfCounts+0x1>
     82c:	a0 91 d1 00 	lds	r26, 0x00D1	; 0x8000d1 <g_v_u16_ovfCounts+0x2>
     830:	b0 91 d2 00 	lds	r27, 0x00D2	; 0x8000d2 <g_v_u16_ovfCounts+0x3>
     834:	01 96       	adiw	r24, 0x01	; 1
     836:	a1 1d       	adc	r26, r1
     838:	b1 1d       	adc	r27, r1
     83a:	80 93 cf 00 	sts	0x00CF, r24	; 0x8000cf <g_v_u16_ovfCounts>
     83e:	90 93 d0 00 	sts	0x00D0, r25	; 0x8000d0 <g_v_u16_ovfCounts+0x1>
     842:	a0 93 d1 00 	sts	0x00D1, r26	; 0x8000d1 <g_v_u16_ovfCounts+0x2>
     846:	b0 93 d2 00 	sts	0x00D2, r27	; 0x8000d2 <g_v_u16_ovfCounts+0x3>
     84a:	08 95       	ret

0000084c <HULTRASONIC_vidSigCalc>:
     84c:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <g_v_u8_flag>
     850:	81 11       	cpse	r24, r1
     852:	14 c0       	rjmp	.+40     	; 0x87c <__stack+0x1d>
     854:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <MTIMER_vidResetTCNT>
     858:	62 e0       	ldi	r22, 0x02	; 2
     85a:	82 e0       	ldi	r24, 0x02	; 2
     85c:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <vidExtInt_init>
     860:	81 e0       	ldi	r24, 0x01	; 1
     862:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <g_v_u8_flag>
     866:	10 92 cf 00 	sts	0x00CF, r1	; 0x8000cf <g_v_u16_ovfCounts>
     86a:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <g_v_u16_ovfCounts+0x1>
     86e:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <g_v_u16_ovfCounts+0x2>
     872:	10 92 d2 00 	sts	0x00D2, r1	; 0x8000d2 <g_v_u16_ovfCounts+0x3>
     876:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <vidTimer2_start>
     87a:	08 95       	ret
     87c:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <g_v_u8_flag>
     880:	81 30       	cpi	r24, 0x01	; 1
     882:	09 f0       	breq	.+2      	; 0x886 <__stack+0x27>
     884:	56 c0       	rjmp	.+172    	; 0x932 <__stack+0xd3>
     886:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <vidTimer2_stop>
     88a:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <MTIMER_u8GetTCNT>
     88e:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <g_v_u8_cap>
     892:	80 91 cf 00 	lds	r24, 0x00CF	; 0x8000cf <g_v_u16_ovfCounts>
     896:	90 91 d0 00 	lds	r25, 0x00D0	; 0x8000d0 <g_v_u16_ovfCounts+0x1>
     89a:	a0 91 d1 00 	lds	r26, 0x00D1	; 0x8000d1 <g_v_u16_ovfCounts+0x2>
     89e:	b0 91 d2 00 	lds	r27, 0x00D2	; 0x8000d2 <g_v_u16_ovfCounts+0x3>
     8a2:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <g_v_u16_ovf>
     8a6:	90 93 e9 00 	sts	0x00E9, r25	; 0x8000e9 <g_v_u16_ovf+0x1>
     8aa:	a0 93 ea 00 	sts	0x00EA, r26	; 0x8000ea <g_v_u16_ovf+0x2>
     8ae:	b0 93 eb 00 	sts	0x00EB, r27	; 0x8000eb <g_v_u16_ovf+0x3>
     8b2:	20 91 e7 00 	lds	r18, 0x00E7	; 0x8000e7 <g_v_u8_cap>
     8b6:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <g_v_u16_ovf>
     8ba:	90 91 e9 00 	lds	r25, 0x00E9	; 0x8000e9 <g_v_u16_ovf+0x1>
     8be:	a0 91 ea 00 	lds	r26, 0x00EA	; 0x8000ea <g_v_u16_ovf+0x2>
     8c2:	b0 91 eb 00 	lds	r27, 0x00EB	; 0x8000eb <g_v_u16_ovf+0x3>
     8c6:	ba 2f       	mov	r27, r26
     8c8:	a9 2f       	mov	r26, r25
     8ca:	98 2f       	mov	r25, r24
     8cc:	88 27       	eor	r24, r24
     8ce:	bc 01       	movw	r22, r24
     8d0:	cd 01       	movw	r24, r26
     8d2:	62 0f       	add	r22, r18
     8d4:	71 1d       	adc	r23, r1
     8d6:	81 1d       	adc	r24, r1
     8d8:	91 1d       	adc	r25, r1
     8da:	0e 94 15 0b 	call	0x162a	; 0x162a <__floatunsisf>
     8de:	2d ec       	ldi	r18, 0xCD	; 205
     8e0:	3c e3       	ldi	r19, 0x3C	; 60
     8e2:	49 e6       	ldi	r20, 0x69	; 105
     8e4:	54 e4       	ldi	r21, 0x44	; 68
     8e6:	0e 94 a3 0a 	call	0x1546	; 0x1546 <__divsf3>
     8ea:	20 e0       	ldi	r18, 0x00	; 0
     8ec:	30 e0       	ldi	r19, 0x00	; 0
     8ee:	40 e0       	ldi	r20, 0x00	; 0
     8f0:	50 e4       	ldi	r21, 0x40	; 64
     8f2:	0e 94 36 0a 	call	0x146c	; 0x146c <__subsf3>
     8f6:	60 93 ca 00 	sts	0x00CA, r22	; 0x8000ca <global_f64distance>
     8fa:	70 93 cb 00 	sts	0x00CB, r23	; 0x8000cb <global_f64distance+0x1>
     8fe:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <global_f64distance+0x2>
     902:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <global_f64distance+0x3>
     906:	10 92 e8 00 	sts	0x00E8, r1	; 0x8000e8 <g_v_u16_ovf>
     90a:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <g_v_u16_ovf+0x1>
     90e:	10 92 ea 00 	sts	0x00EA, r1	; 0x8000ea <g_v_u16_ovf+0x2>
     912:	10 92 eb 00 	sts	0x00EB, r1	; 0x8000eb <g_v_u16_ovf+0x3>
     916:	10 92 cf 00 	sts	0x00CF, r1	; 0x8000cf <g_v_u16_ovfCounts>
     91a:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <g_v_u16_ovfCounts+0x1>
     91e:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <g_v_u16_ovfCounts+0x2>
     922:	10 92 d2 00 	sts	0x00D2, r1	; 0x8000d2 <g_v_u16_ovfCounts+0x3>
     926:	10 92 ce 00 	sts	0x00CE, r1	; 0x8000ce <g_v_u8_flag>
     92a:	63 e0       	ldi	r22, 0x03	; 3
     92c:	82 e0       	ldi	r24, 0x02	; 2
     92e:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <vidExtInt_init>
     932:	08 95       	ret

00000934 <HULTRASONIC_vidInit>:
     934:	41 e0       	ldi	r20, 0x01	; 1
     936:	63 e0       	ldi	r22, 0x03	; 3
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     93e:	40 e0       	ldi	r20, 0x00	; 0
     940:	62 e0       	ldi	r22, 0x02	; 2
     942:	81 e0       	ldi	r24, 0x01	; 1
     944:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_init>
     948:	40 e0       	ldi	r20, 0x00	; 0
     94a:	62 e0       	ldi	r22, 0x02	; 2
     94c:	81 e0       	ldi	r24, 0x01	; 1
     94e:	0e 94 fd 04 	call	0x9fa	; 0x9fa <DIO_writePIN>
     952:	63 e0       	ldi	r22, 0x03	; 3
     954:	82 e0       	ldi	r24, 0x02	; 2
     956:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <vidExtInt_init>
     95a:	80 e0       	ldi	r24, 0x00	; 0
     95c:	0e 94 97 09 	call	0x132e	; 0x132e <enuTimer2_init>
     960:	81 e0       	ldi	r24, 0x01	; 1
     962:	0e 94 c6 09 	call	0x138c	; 0x138c <u8Timer2_setPrescallar>
     966:	0e 94 da 09 	call	0x13b4	; 0x13b4 <vidTimer2_OvfIrqEnable>
     96a:	0e 94 fe 09 	call	0x13fc	; 0x13fc <MTIMER_vidEnableGlobalInterrupt>
     96e:	08 95       	ret

00000970 <HULTRASONIC_vidCBF_TIM>:
     970:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <vidTimer2_setcbf_OVF>
     974:	08 95       	ret

00000976 <HULTRASONIC_vidCBF_INT>:
     976:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <MEXTINT_vidCallBackFunc>
     97a:	08 95       	ret

0000097c <main>:
>>>>>>> main

#include "APP/app.h"

int main(void)
{
    APP_vidInit();
<<<<<<< HEAD
     912:	0e 94 97 00 	call	0x12e	; 0x12e <APP_vidInit>
=======
     97c:	0e 94 9b 00 	call	0x136	; 0x136 <APP_vidInit>
>>>>>>> main
    /* Replace with your application code */
    while (1) 
    {
        APP_vidStart();
<<<<<<< HEAD
     916:	0e 94 db 00 	call	0x1b6	; 0x1b6 <APP_vidStart>
     91a:	fd cf       	rjmp	.-6      	; 0x916 <main+0x4>

0000091c <DIO_init>:
#include "dio.h"

u8_en_dioErrors DIO_init (en_dioPortsType port, en_dioPinsType pin, u8_en_dioDirType direction)
{
	
	if (pin < DIO_MAX_PINS)
     91c:	68 30       	cpi	r22, 0x08	; 8
     91e:	a0 f5       	brcc	.+104    	; 0x988 <DIO_init+0x6c>
	{
		if (port == porta)
     920:	81 11       	cpse	r24, r1
     922:	0b c0       	rjmp	.+22     	; 0x93a <DIO_init+0x1e>
		{
			DATA_DIRECTION_PORTA |= direction << pin;
     924:	8a b3       	in	r24, 0x1a	; 26
     926:	50 e0       	ldi	r21, 0x00	; 0
     928:	02 c0       	rjmp	.+4      	; 0x92e <DIO_init+0x12>
     92a:	44 0f       	add	r20, r20
     92c:	55 1f       	adc	r21, r21
     92e:	6a 95       	dec	r22
     930:	e2 f7       	brpl	.-8      	; 0x92a <DIO_init+0xe>
     932:	48 2b       	or	r20, r24
     934:	4a bb       	out	0x1a, r20	; 26
			return DIO_E_OK;
     936:	80 e0       	ldi	r24, 0x00	; 0
     938:	08 95       	ret
		}
		else if (port == portb)
     93a:	81 30       	cpi	r24, 0x01	; 1
     93c:	59 f4       	brne	.+22     	; 0x954 <DIO_init+0x38>
		{
			DATA_DIRECTION_PORTB |= direction << pin;
     93e:	87 b3       	in	r24, 0x17	; 23
     940:	50 e0       	ldi	r21, 0x00	; 0
     942:	02 c0       	rjmp	.+4      	; 0x948 <DIO_init+0x2c>
     944:	44 0f       	add	r20, r20
     946:	55 1f       	adc	r21, r21
     948:	6a 95       	dec	r22
     94a:	e2 f7       	brpl	.-8      	; 0x944 <DIO_init+0x28>
     94c:	48 2b       	or	r20, r24
     94e:	47 bb       	out	0x17, r20	; 23
			return DIO_E_OK;
     950:	80 e0       	ldi	r24, 0x00	; 0
     952:	08 95       	ret
		}
		else if (port == portc)
     954:	82 30       	cpi	r24, 0x02	; 2
     956:	59 f4       	brne	.+22     	; 0x96e <DIO_init+0x52>
		{
			DATA_DIRECTION_PORTC |= direction << pin;
     958:	84 b3       	in	r24, 0x14	; 20
     95a:	50 e0       	ldi	r21, 0x00	; 0
     95c:	02 c0       	rjmp	.+4      	; 0x962 <DIO_init+0x46>
     95e:	44 0f       	add	r20, r20
     960:	55 1f       	adc	r21, r21
     962:	6a 95       	dec	r22
     964:	e2 f7       	brpl	.-8      	; 0x95e <DIO_init+0x42>
     966:	48 2b       	or	r20, r24
     968:	44 bb       	out	0x14, r20	; 20
			return DIO_E_OK;
     96a:	80 e0       	ldi	r24, 0x00	; 0
     96c:	08 95       	ret
		}
		else if (port == portd)
     96e:	83 30       	cpi	r24, 0x03	; 3
     970:	69 f4       	brne	.+26     	; 0x98c <DIO_init+0x70>
		{
			DATA_DIRECTION_PORTD |= direction << pin;
     972:	81 b3       	in	r24, 0x11	; 17
     974:	50 e0       	ldi	r21, 0x00	; 0
     976:	02 c0       	rjmp	.+4      	; 0x97c <DIO_init+0x60>
     978:	44 0f       	add	r20, r20
     97a:	55 1f       	adc	r21, r21
     97c:	6a 95       	dec	r22
     97e:	e2 f7       	brpl	.-8      	; 0x978 <DIO_init+0x5c>
     980:	48 2b       	or	r20, r24
     982:	41 bb       	out	0x11, r20	; 17
			return DIO_E_OK;
     984:	80 e0       	ldi	r24, 0x00	; 0
     986:	08 95       	ret
			return DIO_InvalidPort;
		}
		
	}
	else{
		return DIO_InvalidPin;
     988:	81 e0       	ldi	r24, 0x01	; 1
     98a:	08 95       	ret
			DATA_DIRECTION_PORTD |= direction << pin;
			return DIO_E_OK;
		}
		else
		{
			return DIO_InvalidPort;
     98c:	82 e0       	ldi	r24, 0x02	; 2
		
	}
	else{
		return DIO_InvalidPin;
	}
}
     98e:	08 95       	ret

00000990 <DIO_writePIN>:
u8_en_dioErrors DIO_writePIN (en_dioPortsType port, en_dioPinsType pin, u8_en_dioLevelType state)
{
	if (pin < DIO_MAX_PINS)
     990:	68 30       	cpi	r22, 0x08	; 8
     992:	08 f0       	brcs	.+2      	; 0x996 <DIO_writePIN+0x6>
     994:	74 c0       	rjmp	.+232    	; 0xa7e <DIO_writePIN+0xee>
	{
		if (port == porta)
     996:	81 11       	cpse	r24, r1
     998:	1b c0       	rjmp	.+54     	; 0x9d0 <DIO_writePIN+0x40>
		{
			if (state == STD_HIGH)
     99a:	41 30       	cpi	r20, 0x01	; 1
     99c:	61 f4       	brne	.+24     	; 0x9b6 <DIO_writePIN+0x26>
			{
				WR_PORT_A |= (1U << pin);
     99e:	2b b3       	in	r18, 0x1b	; 27
     9a0:	81 e0       	ldi	r24, 0x01	; 1
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	02 c0       	rjmp	.+4      	; 0x9aa <DIO_writePIN+0x1a>
     9a6:	88 0f       	add	r24, r24
     9a8:	99 1f       	adc	r25, r25
     9aa:	6a 95       	dec	r22
     9ac:	e2 f7       	brpl	.-8      	; 0x9a6 <DIO_writePIN+0x16>
     9ae:	82 2b       	or	r24, r18
     9b0:	8b bb       	out	0x1b, r24	; 27
			}
			else{
				WR_PORT_A &= ~(1U << pin);
			}
			return DIO_E_OK;
     9b2:	80 e0       	ldi	r24, 0x00	; 0
     9b4:	08 95       	ret
			if (state == STD_HIGH)
			{
				WR_PORT_A |= (1U << pin);
			}
			else{
				WR_PORT_A &= ~(1U << pin);
     9b6:	2b b3       	in	r18, 0x1b	; 27
     9b8:	81 e0       	ldi	r24, 0x01	; 1
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <DIO_writePIN+0x32>
     9be:	88 0f       	add	r24, r24
     9c0:	99 1f       	adc	r25, r25
     9c2:	6a 95       	dec	r22
     9c4:	e2 f7       	brpl	.-8      	; 0x9be <DIO_writePIN+0x2e>
     9c6:	80 95       	com	r24
     9c8:	82 23       	and	r24, r18
     9ca:	8b bb       	out	0x1b, r24	; 27
			}
			return DIO_E_OK;
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	08 95       	ret
		}
		else if (port == portb)
     9d0:	81 30       	cpi	r24, 0x01	; 1
     9d2:	d9 f4       	brne	.+54     	; 0xa0a <DIO_writePIN+0x7a>
		{
			if (state == STD_HIGH)
     9d4:	41 30       	cpi	r20, 0x01	; 1
     9d6:	61 f4       	brne	.+24     	; 0x9f0 <DIO_writePIN+0x60>
			{
				WR_PORT_B |= (1U << pin);
     9d8:	28 b3       	in	r18, 0x18	; 24
     9da:	81 e0       	ldi	r24, 0x01	; 1
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	02 c0       	rjmp	.+4      	; 0x9e4 <DIO_writePIN+0x54>
     9e0:	88 0f       	add	r24, r24
     9e2:	99 1f       	adc	r25, r25
     9e4:	6a 95       	dec	r22
     9e6:	e2 f7       	brpl	.-8      	; 0x9e0 <DIO_writePIN+0x50>
     9e8:	82 2b       	or	r24, r18
     9ea:	88 bb       	out	0x18, r24	; 24
			}
			else{
				WR_PORT_B &= ~(1U << pin);
			}
			return DIO_E_OK;
     9ec:	80 e0       	ldi	r24, 0x00	; 0
     9ee:	08 95       	ret
			if (state == STD_HIGH)
			{
				WR_PORT_B |= (1U << pin);
			}
			else{
				WR_PORT_B &= ~(1U << pin);
     9f0:	28 b3       	in	r18, 0x18	; 24
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	02 c0       	rjmp	.+4      	; 0x9fc <DIO_writePIN+0x6c>
     9f8:	88 0f       	add	r24, r24
     9fa:	99 1f       	adc	r25, r25
     9fc:	6a 95       	dec	r22
     9fe:	e2 f7       	brpl	.-8      	; 0x9f8 <DIO_writePIN+0x68>
     a00:	80 95       	com	r24
     a02:	82 23       	and	r24, r18
     a04:	88 bb       	out	0x18, r24	; 24
			}
			return DIO_E_OK;
     a06:	80 e0       	ldi	r24, 0x00	; 0
     a08:	08 95       	ret
		}
		else if (port == portc)
     a0a:	82 30       	cpi	r24, 0x02	; 2
     a0c:	d9 f4       	brne	.+54     	; 0xa44 <DIO_writePIN+0xb4>
		{
			if (state == STD_HIGH)
     a0e:	41 30       	cpi	r20, 0x01	; 1
     a10:	61 f4       	brne	.+24     	; 0xa2a <DIO_writePIN+0x9a>
			{
				WR_PORT_C |= (1U << pin);
     a12:	25 b3       	in	r18, 0x15	; 21
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	02 c0       	rjmp	.+4      	; 0xa1e <DIO_writePIN+0x8e>
     a1a:	88 0f       	add	r24, r24
     a1c:	99 1f       	adc	r25, r25
     a1e:	6a 95       	dec	r22
     a20:	e2 f7       	brpl	.-8      	; 0xa1a <DIO_writePIN+0x8a>
     a22:	82 2b       	or	r24, r18
     a24:	85 bb       	out	0x15, r24	; 21
			}
			else{
				WR_PORT_C &= ~(1U << pin);
			}
			return DIO_E_OK;
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	08 95       	ret
			if (state == STD_HIGH)
			{
				WR_PORT_C |= (1U << pin);
			}
			else{
				WR_PORT_C &= ~(1U << pin);
     a2a:	25 b3       	in	r18, 0x15	; 21
     a2c:	81 e0       	ldi	r24, 0x01	; 1
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	02 c0       	rjmp	.+4      	; 0xa36 <DIO_writePIN+0xa6>
     a32:	88 0f       	add	r24, r24
     a34:	99 1f       	adc	r25, r25
     a36:	6a 95       	dec	r22
     a38:	e2 f7       	brpl	.-8      	; 0xa32 <DIO_writePIN+0xa2>
     a3a:	80 95       	com	r24
     a3c:	82 23       	and	r24, r18
     a3e:	85 bb       	out	0x15, r24	; 21
			}
			return DIO_E_OK;
     a40:	80 e0       	ldi	r24, 0x00	; 0
     a42:	08 95       	ret
		}
		else if (port == portd)
     a44:	83 30       	cpi	r24, 0x03	; 3
     a46:	e9 f4       	brne	.+58     	; 0xa82 <DIO_writePIN+0xf2>
		{
			if (state == STD_HIGH)
     a48:	41 30       	cpi	r20, 0x01	; 1
     a4a:	61 f4       	brne	.+24     	; 0xa64 <DIO_writePIN+0xd4>
			{
				WR_PORT_D |= (1U << pin);
     a4c:	22 b3       	in	r18, 0x12	; 18
     a4e:	81 e0       	ldi	r24, 0x01	; 1
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	02 c0       	rjmp	.+4      	; 0xa58 <DIO_writePIN+0xc8>
     a54:	88 0f       	add	r24, r24
     a56:	99 1f       	adc	r25, r25
     a58:	6a 95       	dec	r22
     a5a:	e2 f7       	brpl	.-8      	; 0xa54 <DIO_writePIN+0xc4>
     a5c:	82 2b       	or	r24, r18
     a5e:	82 bb       	out	0x12, r24	; 18
			}
			else{
				WR_PORT_D &= ~(1U << pin);
			}
			return DIO_E_OK;
     a60:	80 e0       	ldi	r24, 0x00	; 0
     a62:	08 95       	ret
			if (state == STD_HIGH)
			{
				WR_PORT_D |= (1U << pin);
			}
			else{
				WR_PORT_D &= ~(1U << pin);
     a64:	22 b3       	in	r18, 0x12	; 18
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	02 c0       	rjmp	.+4      	; 0xa70 <DIO_writePIN+0xe0>
     a6c:	88 0f       	add	r24, r24
     a6e:	99 1f       	adc	r25, r25
     a70:	6a 95       	dec	r22
     a72:	e2 f7       	brpl	.-8      	; 0xa6c <DIO_writePIN+0xdc>
     a74:	80 95       	com	r24
     a76:	82 23       	and	r24, r18
     a78:	82 bb       	out	0x12, r24	; 18
			}
			return DIO_E_OK;
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	08 95       	ret
			return DIO_InvalidPort;
		}
		
	}
	else{
		return DIO_InvalidPin;
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	08 95       	ret
			}
			return DIO_E_OK;
		}
		else
		{
			return DIO_InvalidPort;
     a82:	82 e0       	ldi	r24, 0x02	; 2
		
	}
	else{
		return DIO_InvalidPin;
	}
}
     a84:	08 95       	ret

00000a86 <DIO_readPIN>:
u8_en_dioErrors DIO_readPIN (en_dioPortsType port, en_dioPinsType pin, uint8_t* value)
{
	if (pin < DIO_MAX_PINS)
     a86:	68 30       	cpi	r22, 0x08	; 8
     a88:	08 f0       	brcs	.+2      	; 0xa8c <DIO_readPIN+0x6>
     a8a:	64 c0       	rjmp	.+200    	; 0xb54 <DIO_readPIN+0xce>
	{
		if (port == porta)
     a8c:	81 11       	cpse	r24, r1
     a8e:	17 c0       	rjmp	.+46     	; 0xabe <DIO_readPIN+0x38>
		{
			*value = ((RE_PORT_A & (1U<<pin))>>pin);
     a90:	79 b3       	in	r23, 0x19	; 25
     a92:	81 e0       	ldi	r24, 0x01	; 1
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	9c 01       	movw	r18, r24
     a98:	06 2e       	mov	r0, r22
     a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <DIO_readPIN+0x1a>
     a9c:	22 0f       	add	r18, r18
     a9e:	33 1f       	adc	r19, r19
     aa0:	0a 94       	dec	r0
     aa2:	e2 f7       	brpl	.-8      	; 0xa9c <DIO_readPIN+0x16>
     aa4:	87 2f       	mov	r24, r23
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	82 23       	and	r24, r18
     aaa:	93 23       	and	r25, r19
     aac:	02 c0       	rjmp	.+4      	; 0xab2 <DIO_readPIN+0x2c>
     aae:	96 95       	lsr	r25
     ab0:	87 95       	ror	r24
     ab2:	6a 95       	dec	r22
     ab4:	e2 f7       	brpl	.-8      	; 0xaae <DIO_readPIN+0x28>
     ab6:	fa 01       	movw	r30, r20
     ab8:	80 83       	st	Z, r24
			return DIO_E_OK;
     aba:	80 e0       	ldi	r24, 0x00	; 0
     abc:	08 95       	ret
		}
		else if (port == portb)
     abe:	81 30       	cpi	r24, 0x01	; 1
     ac0:	b9 f4       	brne	.+46     	; 0xaf0 <DIO_readPIN+0x6a>
		{
			*value = ((RE_PORT_B & (1U<<pin))>>pin);
     ac2:	76 b3       	in	r23, 0x16	; 22
     ac4:	81 e0       	ldi	r24, 0x01	; 1
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	9c 01       	movw	r18, r24
     aca:	06 2e       	mov	r0, r22
     acc:	02 c0       	rjmp	.+4      	; 0xad2 <DIO_readPIN+0x4c>
     ace:	22 0f       	add	r18, r18
     ad0:	33 1f       	adc	r19, r19
     ad2:	0a 94       	dec	r0
     ad4:	e2 f7       	brpl	.-8      	; 0xace <DIO_readPIN+0x48>
     ad6:	87 2f       	mov	r24, r23
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	82 23       	and	r24, r18
     adc:	93 23       	and	r25, r19
     ade:	02 c0       	rjmp	.+4      	; 0xae4 <DIO_readPIN+0x5e>
     ae0:	96 95       	lsr	r25
     ae2:	87 95       	ror	r24
     ae4:	6a 95       	dec	r22
     ae6:	e2 f7       	brpl	.-8      	; 0xae0 <DIO_readPIN+0x5a>
     ae8:	fa 01       	movw	r30, r20
     aea:	80 83       	st	Z, r24
			return DIO_E_OK;
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	08 95       	ret
		}
		else if (port == portc)
     af0:	82 30       	cpi	r24, 0x02	; 2
     af2:	b9 f4       	brne	.+46     	; 0xb22 <DIO_readPIN+0x9c>
		{
			*value = ((RE_PORT_C & (1U<<pin))>>pin);
     af4:	73 b3       	in	r23, 0x13	; 19
     af6:	81 e0       	ldi	r24, 0x01	; 1
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	9c 01       	movw	r18, r24
     afc:	06 2e       	mov	r0, r22
     afe:	02 c0       	rjmp	.+4      	; 0xb04 <DIO_readPIN+0x7e>
     b00:	22 0f       	add	r18, r18
     b02:	33 1f       	adc	r19, r19
     b04:	0a 94       	dec	r0
     b06:	e2 f7       	brpl	.-8      	; 0xb00 <DIO_readPIN+0x7a>
     b08:	87 2f       	mov	r24, r23
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	82 23       	and	r24, r18
     b0e:	93 23       	and	r25, r19
     b10:	02 c0       	rjmp	.+4      	; 0xb16 <DIO_readPIN+0x90>
     b12:	96 95       	lsr	r25
     b14:	87 95       	ror	r24
     b16:	6a 95       	dec	r22
     b18:	e2 f7       	brpl	.-8      	; 0xb12 <DIO_readPIN+0x8c>
     b1a:	fa 01       	movw	r30, r20
     b1c:	80 83       	st	Z, r24
			return DIO_E_OK;
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	08 95       	ret
		}
		else if (port == portd)
     b22:	83 30       	cpi	r24, 0x03	; 3
     b24:	c9 f4       	brne	.+50     	; 0xb58 <DIO_readPIN+0xd2>
		{
			*value = ((RE_PORT_D & (1U<<pin))>>pin);
     b26:	70 b3       	in	r23, 0x10	; 16
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	9c 01       	movw	r18, r24
     b2e:	06 2e       	mov	r0, r22
     b30:	02 c0       	rjmp	.+4      	; 0xb36 <DIO_readPIN+0xb0>
     b32:	22 0f       	add	r18, r18
     b34:	33 1f       	adc	r19, r19
     b36:	0a 94       	dec	r0
     b38:	e2 f7       	brpl	.-8      	; 0xb32 <DIO_readPIN+0xac>
     b3a:	87 2f       	mov	r24, r23
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	82 23       	and	r24, r18
     b40:	93 23       	and	r25, r19
     b42:	02 c0       	rjmp	.+4      	; 0xb48 <DIO_readPIN+0xc2>
     b44:	96 95       	lsr	r25
     b46:	87 95       	ror	r24
     b48:	6a 95       	dec	r22
     b4a:	e2 f7       	brpl	.-8      	; 0xb44 <DIO_readPIN+0xbe>
     b4c:	fa 01       	movw	r30, r20
     b4e:	80 83       	st	Z, r24
			return DIO_E_OK;
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	08 95       	ret
			return DIO_InvalidPort;
		}
		
	}
	else{
		return DIO_InvalidPin;
     b54:	81 e0       	ldi	r24, 0x01	; 1
     b56:	08 95       	ret
			*value = ((RE_PORT_D & (1U<<pin))>>pin);
			return DIO_E_OK;
		}
		else
		{
			return DIO_InvalidPort;
     b58:	82 e0       	ldi	r24, 0x02	; 2
		
	}
	else{
		return DIO_InvalidPin;
	}
     b5a:	08 95       	ret

00000b5c <vidExtInt_init>:
 * return		: void
 * */
void MEXTINT_vidWaitFlag(void)
{
	while( !( READ_BIT(GIFR_REG, INTF0) ) );
}
     b5c:	83 30       	cpi	r24, 0x03	; 3
     b5e:	08 f0       	brcs	.+2      	; 0xb62 <vidExtInt_init+0x6>
     b60:	78 c0       	rjmp	.+240    	; 0xc52 <vidExtInt_init+0xf6>
     b62:	64 30       	cpi	r22, 0x04	; 4
     b64:	08 f0       	brcs	.+2      	; 0xb68 <vidExtInt_init+0xc>
     b66:	77 c0       	rjmp	.+238    	; 0xc56 <vidExtInt_init+0xfa>
     b68:	81 11       	cpse	r24, r1
     b6a:	28 c0       	rjmp	.+80     	; 0xbbc <vidExtInt_init+0x60>
     b6c:	61 30       	cpi	r22, 0x01	; 1
     b6e:	71 f0       	breq	.+28     	; 0xb8c <vidExtInt_init+0x30>
     b70:	28 f0       	brcs	.+10     	; 0xb7c <vidExtInt_init+0x20>
     b72:	62 30       	cpi	r22, 0x02	; 2
     b74:	99 f0       	breq	.+38     	; 0xb9c <vidExtInt_init+0x40>
     b76:	63 30       	cpi	r22, 0x03	; 3
     b78:	c9 f0       	breq	.+50     	; 0xbac <vidExtInt_init+0x50>
     b7a:	6f c0       	rjmp	.+222    	; 0xc5a <vidExtInt_init+0xfe>
     b7c:	85 b7       	in	r24, 0x35	; 53
     b7e:	8e 7f       	andi	r24, 0xFE	; 254
     b80:	85 bf       	out	0x35, r24	; 53
     b82:	85 b7       	in	r24, 0x35	; 53
     b84:	8d 7f       	andi	r24, 0xFD	; 253
     b86:	85 bf       	out	0x35, r24	; 53
     b88:	81 e0       	ldi	r24, 0x01	; 1
     b8a:	08 95       	ret
     b8c:	85 b7       	in	r24, 0x35	; 53
     b8e:	81 60       	ori	r24, 0x01	; 1
     b90:	85 bf       	out	0x35, r24	; 53
     b92:	85 b7       	in	r24, 0x35	; 53
     b94:	8d 7f       	andi	r24, 0xFD	; 253
     b96:	85 bf       	out	0x35, r24	; 53
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	08 95       	ret
     b9c:	85 b7       	in	r24, 0x35	; 53
     b9e:	8e 7f       	andi	r24, 0xFE	; 254
     ba0:	85 bf       	out	0x35, r24	; 53
     ba2:	85 b7       	in	r24, 0x35	; 53
     ba4:	82 60       	ori	r24, 0x02	; 2
     ba6:	85 bf       	out	0x35, r24	; 53
     ba8:	81 e0       	ldi	r24, 0x01	; 1
     baa:	08 95       	ret
     bac:	85 b7       	in	r24, 0x35	; 53
     bae:	81 60       	ori	r24, 0x01	; 1
     bb0:	85 bf       	out	0x35, r24	; 53
     bb2:	85 b7       	in	r24, 0x35	; 53
     bb4:	82 60       	ori	r24, 0x02	; 2
     bb6:	85 bf       	out	0x35, r24	; 53
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	08 95       	ret
     bbc:	81 30       	cpi	r24, 0x01	; 1
     bbe:	81 f5       	brne	.+96     	; 0xc20 <vidExtInt_init+0xc4>
     bc0:	61 30       	cpi	r22, 0x01	; 1
     bc2:	71 f0       	breq	.+28     	; 0xbe0 <vidExtInt_init+0x84>
     bc4:	28 f0       	brcs	.+10     	; 0xbd0 <vidExtInt_init+0x74>
     bc6:	62 30       	cpi	r22, 0x02	; 2
     bc8:	99 f0       	breq	.+38     	; 0xbf0 <vidExtInt_init+0x94>
     bca:	63 30       	cpi	r22, 0x03	; 3
     bcc:	c9 f0       	breq	.+50     	; 0xc00 <vidExtInt_init+0xa4>
     bce:	20 c0       	rjmp	.+64     	; 0xc10 <vidExtInt_init+0xb4>
     bd0:	85 b7       	in	r24, 0x35	; 53
     bd2:	8b 7f       	andi	r24, 0xFB	; 251
     bd4:	85 bf       	out	0x35, r24	; 53
     bd6:	85 b7       	in	r24, 0x35	; 53
     bd8:	87 7f       	andi	r24, 0xF7	; 247
     bda:	85 bf       	out	0x35, r24	; 53
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	19 c0       	rjmp	.+50     	; 0xc12 <vidExtInt_init+0xb6>
     be0:	85 b7       	in	r24, 0x35	; 53
     be2:	84 60       	ori	r24, 0x04	; 4
     be4:	85 bf       	out	0x35, r24	; 53
     be6:	85 b7       	in	r24, 0x35	; 53
     be8:	87 7f       	andi	r24, 0xF7	; 247
     bea:	85 bf       	out	0x35, r24	; 53
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	11 c0       	rjmp	.+34     	; 0xc12 <vidExtInt_init+0xb6>
     bf0:	85 b7       	in	r24, 0x35	; 53
     bf2:	8b 7f       	andi	r24, 0xFB	; 251
     bf4:	85 bf       	out	0x35, r24	; 53
     bf6:	85 b7       	in	r24, 0x35	; 53
     bf8:	88 60       	ori	r24, 0x08	; 8
     bfa:	85 bf       	out	0x35, r24	; 53
     bfc:	81 e0       	ldi	r24, 0x01	; 1
     bfe:	09 c0       	rjmp	.+18     	; 0xc12 <vidExtInt_init+0xb6>
     c00:	85 b7       	in	r24, 0x35	; 53
     c02:	84 60       	ori	r24, 0x04	; 4
     c04:	85 bf       	out	0x35, r24	; 53
     c06:	85 b7       	in	r24, 0x35	; 53
     c08:	88 60       	ori	r24, 0x08	; 8
     c0a:	85 bf       	out	0x35, r24	; 53
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	01 c0       	rjmp	.+2      	; 0xc12 <vidExtInt_init+0xb6>
     c10:	80 e0       	ldi	r24, 0x00	; 0
     c12:	9b b7       	in	r25, 0x3b	; 59
     c14:	90 68       	ori	r25, 0x80	; 128
     c16:	9b bf       	out	0x3b, r25	; 59
     c18:	9a b7       	in	r25, 0x3a	; 58
     c1a:	90 68       	ori	r25, 0x80	; 128
     c1c:	9a bf       	out	0x3a, r25	; 58
     c1e:	08 95       	ret
     c20:	82 30       	cpi	r24, 0x02	; 2
     c22:	e9 f4       	brne	.+58     	; 0xc5e <vidExtInt_init+0x102>
     c24:	62 30       	cpi	r22, 0x02	; 2
     c26:	19 f0       	breq	.+6      	; 0xc2e <vidExtInt_init+0xd2>
     c28:	63 30       	cpi	r22, 0x03	; 3
     c2a:	31 f0       	breq	.+12     	; 0xc38 <vidExtInt_init+0xdc>
     c2c:	0a c0       	rjmp	.+20     	; 0xc42 <vidExtInt_init+0xe6>
     c2e:	84 b7       	in	r24, 0x34	; 52
     c30:	8f 7b       	andi	r24, 0xBF	; 191
     c32:	84 bf       	out	0x34, r24	; 52
     c34:	81 e0       	ldi	r24, 0x01	; 1
     c36:	06 c0       	rjmp	.+12     	; 0xc44 <vidExtInt_init+0xe8>
     c38:	84 b7       	in	r24, 0x34	; 52
     c3a:	80 64       	ori	r24, 0x40	; 64
     c3c:	84 bf       	out	0x34, r24	; 52
     c3e:	81 e0       	ldi	r24, 0x01	; 1
     c40:	01 c0       	rjmp	.+2      	; 0xc44 <vidExtInt_init+0xe8>
     c42:	80 e0       	ldi	r24, 0x00	; 0
     c44:	9b b7       	in	r25, 0x3b	; 59
     c46:	90 62       	ori	r25, 0x20	; 32
     c48:	9b bf       	out	0x3b, r25	; 59
     c4a:	9a b7       	in	r25, 0x3a	; 58
     c4c:	90 62       	ori	r25, 0x20	; 32
     c4e:	9a bf       	out	0x3a, r25	; 58
     c50:	08 95       	ret
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	08 95       	ret
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	08 95       	ret
     c5a:	80 e0       	ldi	r24, 0x00	; 0
     c5c:	08 95       	ret
     c5e:	81 e0       	ldi	r24, 0x01	; 1
     c60:	08 95       	ret

00000c62 <MEXTINT_vidCallBackFuncInt0>:
     c62:	90 93 d8 00 	sts	0x00D8, r25	; 0x8000d8 <callBackFuncInt0+0x1>
     c66:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <callBackFuncInt0>
     c6a:	08 95       	ret

00000c6c <MEXTINT_vidCallBackFunc>:
     c6c:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <callBack+0x1>
     c70:	80 93 d5 00 	sts	0x00D5, r24	; 0x8000d5 <callBack>
     c74:	08 95       	ret

00000c76 <MEXTINT_vidDisableInterrupt>:
 * input param 	: void
 * return		: void
 * */
void MEXTINT_vidDisableInterrupt(void)
{
	CLEAR_BIT(GICR_REG, INT0);
     c76:	8b b7       	in	r24, 0x3b	; 59
     c78:	8f 7b       	andi	r24, 0xBF	; 191
     c7a:	8b bf       	out	0x3b, r24	; 59
     c7c:	08 95       	ret

00000c7e <MEXTINT_vidEnableInterrupt>:
 * input param 	: void
 * return		: void
 * */
void MEXTINT_vidEnableInterrupt(void)
{
	SET_BIT(GIFR_REG, INTF0);
     c7e:	8a b7       	in	r24, 0x3a	; 58
     c80:	80 64       	ori	r24, 0x40	; 64
     c82:	8a bf       	out	0x3a, r24	; 58
	SET_BIT(GICR_REG, INT0);
     c84:	8b b7       	in	r24, 0x3b	; 59
     c86:	80 64       	ori	r24, 0x40	; 64
     c88:	8b bf       	out	0x3b, r24	; 59
     c8a:	08 95       	ret

00000c8c <__vector_1>:

/************************************************************************************************/
/*									ISR															*/
/************************************************************************************************/
ISR(INT0_vect)
{
     c8c:	1f 92       	push	r1
     c8e:	0f 92       	push	r0
     c90:	0f b6       	in	r0, 0x3f	; 63
     c92:	0f 92       	push	r0
     c94:	11 24       	eor	r1, r1
     c96:	2f 93       	push	r18
     c98:	3f 93       	push	r19
     c9a:	4f 93       	push	r20
     c9c:	5f 93       	push	r21
     c9e:	6f 93       	push	r22
     ca0:	7f 93       	push	r23
     ca2:	8f 93       	push	r24
     ca4:	9f 93       	push	r25
     ca6:	af 93       	push	r26
     ca8:	bf 93       	push	r27
     caa:	ef 93       	push	r30
     cac:	ff 93       	push	r31
	callBackFuncInt0();
     cae:	e0 91 d7 00 	lds	r30, 0x00D7	; 0x8000d7 <callBackFuncInt0>
     cb2:	f0 91 d8 00 	lds	r31, 0x00D8	; 0x8000d8 <callBackFuncInt0+0x1>
     cb6:	09 95       	icall
}
     cb8:	ff 91       	pop	r31
     cba:	ef 91       	pop	r30
     cbc:	bf 91       	pop	r27
     cbe:	af 91       	pop	r26
     cc0:	9f 91       	pop	r25
     cc2:	8f 91       	pop	r24
     cc4:	7f 91       	pop	r23
     cc6:	6f 91       	pop	r22
     cc8:	5f 91       	pop	r21
     cca:	4f 91       	pop	r20
     ccc:	3f 91       	pop	r19
     cce:	2f 91       	pop	r18
     cd0:	0f 90       	pop	r0
     cd2:	0f be       	out	0x3f, r0	; 63
     cd4:	0f 90       	pop	r0
     cd6:	1f 90       	pop	r1
     cd8:	18 95       	reti

00000cda <__vector_2>:

ISR(INT1_vect)
{
     cda:	1f 92       	push	r1
     cdc:	0f 92       	push	r0
     cde:	0f b6       	in	r0, 0x3f	; 63
     ce0:	0f 92       	push	r0
     ce2:	11 24       	eor	r1, r1
     ce4:	2f 93       	push	r18
     ce6:	3f 93       	push	r19
     ce8:	4f 93       	push	r20
     cea:	5f 93       	push	r21
     cec:	6f 93       	push	r22
     cee:	7f 93       	push	r23
     cf0:	8f 93       	push	r24
     cf2:	9f 93       	push	r25
     cf4:	af 93       	push	r26
     cf6:	bf 93       	push	r27
     cf8:	ef 93       	push	r30
     cfa:	ff 93       	push	r31
	callBackFunc();
     cfc:	e0 91 d3 00 	lds	r30, 0x00D3	; 0x8000d3 <callBackFunc>
     d00:	f0 91 d4 00 	lds	r31, 0x00D4	; 0x8000d4 <callBackFunc+0x1>
     d04:	09 95       	icall
}
     d06:	ff 91       	pop	r31
     d08:	ef 91       	pop	r30
     d0a:	bf 91       	pop	r27
     d0c:	af 91       	pop	r26
     d0e:	9f 91       	pop	r25
     d10:	8f 91       	pop	r24
     d12:	7f 91       	pop	r23
     d14:	6f 91       	pop	r22
     d16:	5f 91       	pop	r21
     d18:	4f 91       	pop	r20
     d1a:	3f 91       	pop	r19
     d1c:	2f 91       	pop	r18
     d1e:	0f 90       	pop	r0
     d20:	0f be       	out	0x3f, r0	; 63
     d22:	0f 90       	pop	r0
     d24:	1f 90       	pop	r1
     d26:	18 95       	reti

00000d28 <__vector_3>:

ISR(INT2_vect)
{
     d28:	1f 92       	push	r1
     d2a:	0f 92       	push	r0
     d2c:	0f b6       	in	r0, 0x3f	; 63
     d2e:	0f 92       	push	r0
     d30:	11 24       	eor	r1, r1
     d32:	2f 93       	push	r18
     d34:	3f 93       	push	r19
     d36:	4f 93       	push	r20
     d38:	5f 93       	push	r21
     d3a:	6f 93       	push	r22
     d3c:	7f 93       	push	r23
     d3e:	8f 93       	push	r24
     d40:	9f 93       	push	r25
     d42:	af 93       	push	r26
     d44:	bf 93       	push	r27
     d46:	ef 93       	push	r30
     d48:	ff 93       	push	r31
	callBack();
     d4a:	e0 91 d5 00 	lds	r30, 0x00D5	; 0x8000d5 <callBack>
     d4e:	f0 91 d6 00 	lds	r31, 0x00D6	; 0x8000d6 <callBack+0x1>
     d52:	09 95       	icall
}
     d54:	ff 91       	pop	r31
     d56:	ef 91       	pop	r30
     d58:	bf 91       	pop	r27
     d5a:	af 91       	pop	r26
     d5c:	9f 91       	pop	r25
     d5e:	8f 91       	pop	r24
     d60:	7f 91       	pop	r23
     d62:	6f 91       	pop	r22
     d64:	5f 91       	pop	r21
     d66:	4f 91       	pop	r20
     d68:	3f 91       	pop	r19
     d6a:	2f 91       	pop	r18
     d6c:	0f 90       	pop	r0
     d6e:	0f be       	out	0x3f, r0	; 63
     d70:	0f 90       	pop	r0
     d72:	1f 90       	pop	r1
     d74:	18 95       	reti

00000d76 <__vector_11>:


void MTIMER_vidEnableGlobalInterrupt(void)
{
	
	SET_BIT(SREG,7);
     d76:	1f 92       	push	r1
     d78:	0f 92       	push	r0
     d7a:	0f b6       	in	r0, 0x3f	; 63
     d7c:	0f 92       	push	r0
     d7e:	11 24       	eor	r1, r1
     d80:	2f 93       	push	r18
     d82:	3f 93       	push	r19
     d84:	4f 93       	push	r20
     d86:	5f 93       	push	r21
     d88:	6f 93       	push	r22
     d8a:	7f 93       	push	r23
     d8c:	8f 93       	push	r24
     d8e:	9f 93       	push	r25
     d90:	af 93       	push	r26
     d92:	bf 93       	push	r27
     d94:	ef 93       	push	r30
     d96:	ff 93       	push	r31
     d98:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <sg_Timer0_callBackPtr>
     d9c:	90 91 e1 00 	lds	r25, 0x00E1	; 0x8000e1 <sg_Timer0_callBackPtr+0x1>
     da0:	89 2b       	or	r24, r25
     da2:	41 f0       	breq	.+16     	; 0xdb4 <__vector_11+0x3e>
     da4:	88 b7       	in	r24, 0x38	; 56
     da6:	8e 7f       	andi	r24, 0xFE	; 254
     da8:	88 bf       	out	0x38, r24	; 56
     daa:	e0 91 e0 00 	lds	r30, 0x00E0	; 0x8000e0 <sg_Timer0_callBackPtr>
     dae:	f0 91 e1 00 	lds	r31, 0x00E1	; 0x8000e1 <sg_Timer0_callBackPtr+0x1>
     db2:	09 95       	icall
     db4:	ff 91       	pop	r31
     db6:	ef 91       	pop	r30
     db8:	bf 91       	pop	r27
     dba:	af 91       	pop	r26
     dbc:	9f 91       	pop	r25
     dbe:	8f 91       	pop	r24
     dc0:	7f 91       	pop	r23
     dc2:	6f 91       	pop	r22
     dc4:	5f 91       	pop	r21
     dc6:	4f 91       	pop	r20
     dc8:	3f 91       	pop	r19
     dca:	2f 91       	pop	r18
     dcc:	0f 90       	pop	r0
     dce:	0f be       	out	0x3f, r0	; 63
     dd0:	0f 90       	pop	r0
     dd2:	1f 90       	pop	r1
     dd4:	18 95       	reti

00000dd6 <__vector_9>:
     dd6:	1f 92       	push	r1
     dd8:	0f 92       	push	r0
     dda:	0f b6       	in	r0, 0x3f	; 63
     ddc:	0f 92       	push	r0
     dde:	11 24       	eor	r1, r1
     de0:	2f 93       	push	r18
     de2:	3f 93       	push	r19
     de4:	4f 93       	push	r20
     de6:	5f 93       	push	r21
     de8:	6f 93       	push	r22
     dea:	7f 93       	push	r23
     dec:	8f 93       	push	r24
     dee:	9f 93       	push	r25
     df0:	af 93       	push	r26
     df2:	bf 93       	push	r27
     df4:	ef 93       	push	r30
     df6:	ff 93       	push	r31
     df8:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <sg_Timer1_callBackPtr>
     dfc:	90 91 df 00 	lds	r25, 0x00DF	; 0x8000df <sg_Timer1_callBackPtr+0x1>
     e00:	89 2b       	or	r24, r25
     e02:	41 f0       	breq	.+16     	; 0xe14 <__vector_9+0x3e>
     e04:	88 b7       	in	r24, 0x38	; 56
     e06:	8b 7f       	andi	r24, 0xFB	; 251
     e08:	88 bf       	out	0x38, r24	; 56
     e0a:	e0 91 de 00 	lds	r30, 0x00DE	; 0x8000de <sg_Timer1_callBackPtr>
     e0e:	f0 91 df 00 	lds	r31, 0x00DF	; 0x8000df <sg_Timer1_callBackPtr+0x1>
     e12:	09 95       	icall
     e14:	ff 91       	pop	r31
     e16:	ef 91       	pop	r30
     e18:	bf 91       	pop	r27
     e1a:	af 91       	pop	r26
     e1c:	9f 91       	pop	r25
     e1e:	8f 91       	pop	r24
     e20:	7f 91       	pop	r23
     e22:	6f 91       	pop	r22
     e24:	5f 91       	pop	r21
     e26:	4f 91       	pop	r20
     e28:	3f 91       	pop	r19
     e2a:	2f 91       	pop	r18
     e2c:	0f 90       	pop	r0
     e2e:	0f be       	out	0x3f, r0	; 63
     e30:	0f 90       	pop	r0
     e32:	1f 90       	pop	r1
     e34:	18 95       	reti

00000e36 <TIMER_init>:
     e36:	00 97       	sbiw	r24, 0x00	; 0
     e38:	09 f4       	brne	.+2      	; 0xe3c <TIMER_init+0x6>
     e3a:	78 c0       	rjmp	.+240    	; 0xf2c <TIMER_init+0xf6>
     e3c:	fc 01       	movw	r30, r24
     e3e:	20 81       	ld	r18, Z
     e40:	23 30       	cpi	r18, 0x03	; 3
     e42:	08 f0       	brcs	.+2      	; 0xe46 <TIMER_init+0x10>
     e44:	75 c0       	rjmp	.+234    	; 0xf30 <TIMER_init+0xfa>
     e46:	31 81       	ldd	r19, Z+1	; 0x01
     e48:	3a 30       	cpi	r19, 0x0A	; 10
     e4a:	08 f0       	brcs	.+2      	; 0xe4e <TIMER_init+0x18>
     e4c:	73 c0       	rjmp	.+230    	; 0xf34 <TIMER_init+0xfe>
     e4e:	21 30       	cpi	r18, 0x01	; 1
     e50:	19 f1       	breq	.+70     	; 0xe98 <TIMER_init+0x62>
     e52:	20 f0       	brcs	.+8      	; 0xe5c <TIMER_init+0x26>
     e54:	22 30       	cpi	r18, 0x02	; 2
     e56:	09 f4       	brne	.+2      	; 0xe5a <TIMER_init+0x24>
     e58:	50 c0       	rjmp	.+160    	; 0xefa <TIMER_init+0xc4>
     e5a:	6e c0       	rjmp	.+220    	; 0xf38 <TIMER_init+0x102>
     e5c:	12 be       	out	0x32, r1	; 50
     e5e:	13 be       	out	0x33, r1	; 51
     e60:	1c be       	out	0x3c, r1	; 60
     e62:	fc 01       	movw	r30, r24
     e64:	22 81       	ldd	r18, Z+2	; 0x02
     e66:	22 bf       	out	0x32, r18	; 50
     e68:	23 b7       	in	r18, 0x33	; 51
     e6a:	20 68       	ori	r18, 0x80	; 128
     e6c:	23 bf       	out	0x33, r18	; 51
     e6e:	23 b7       	in	r18, 0x33	; 51
     e70:	2f 7b       	andi	r18, 0xBF	; 191
     e72:	23 bf       	out	0x33, r18	; 51
     e74:	23 b7       	in	r18, 0x33	; 51
     e76:	27 7f       	andi	r18, 0xF7	; 247
     e78:	23 bf       	out	0x33, r18	; 51
     e7a:	23 b7       	in	r18, 0x33	; 51
     e7c:	2f 7e       	andi	r18, 0xEF	; 239
     e7e:	23 bf       	out	0x33, r18	; 51
     e80:	23 b7       	in	r18, 0x33	; 51
     e82:	2f 7d       	andi	r18, 0xDF	; 223
     e84:	23 bf       	out	0x33, r18	; 51
     e86:	84 81       	ldd	r24, Z+4	; 0x04
     e88:	81 30       	cpi	r24, 0x01	; 1
     e8a:	09 f0       	breq	.+2      	; 0xe8e <TIMER_init+0x58>
     e8c:	57 c0       	rjmp	.+174    	; 0xf3c <TIMER_init+0x106>
     e8e:	89 b7       	in	r24, 0x39	; 57
     e90:	81 60       	ori	r24, 0x01	; 1
     e92:	89 bf       	out	0x39, r24	; 57
     e94:	80 e0       	ldi	r24, 0x00	; 0
     e96:	08 95       	ret
     e98:	1c bc       	out	0x2c, r1	; 44
     e9a:	1d bc       	out	0x2d, r1	; 45
     e9c:	1f bc       	out	0x2f, r1	; 47
     e9e:	1e bc       	out	0x2e, r1	; 46
     ea0:	1b bc       	out	0x2b, r1	; 43
     ea2:	1a bc       	out	0x2a, r1	; 42
     ea4:	fc 01       	movw	r30, r24
     ea6:	22 81       	ldd	r18, Z+2	; 0x02
     ea8:	33 81       	ldd	r19, Z+3	; 0x03
     eaa:	3d bd       	out	0x2d, r19	; 45
     eac:	2c bd       	out	0x2c, r18	; 44
     eae:	2f b5       	in	r18, 0x2f	; 47
     eb0:	28 60       	ori	r18, 0x08	; 8
     eb2:	2f bd       	out	0x2f, r18	; 47
     eb4:	2f b5       	in	r18, 0x2f	; 47
     eb6:	24 60       	ori	r18, 0x04	; 4
     eb8:	2f bd       	out	0x2f, r18	; 47
     eba:	2f b5       	in	r18, 0x2f	; 47
     ebc:	2e 7f       	andi	r18, 0xFE	; 254
     ebe:	2f bd       	out	0x2f, r18	; 47
     ec0:	2f b5       	in	r18, 0x2f	; 47
     ec2:	2d 7f       	andi	r18, 0xFD	; 253
     ec4:	2f bd       	out	0x2f, r18	; 47
     ec6:	2e b5       	in	r18, 0x2e	; 46
     ec8:	2f 7e       	andi	r18, 0xEF	; 239
     eca:	2e bd       	out	0x2e, r18	; 46
     ecc:	2e b5       	in	r18, 0x2e	; 46
     ece:	27 7f       	andi	r18, 0xF7	; 247
     ed0:	2e bd       	out	0x2e, r18	; 46
     ed2:	2f b5       	in	r18, 0x2f	; 47
     ed4:	2f 7b       	andi	r18, 0xBF	; 191
     ed6:	2f bd       	out	0x2f, r18	; 47
     ed8:	2f b5       	in	r18, 0x2f	; 47
     eda:	2f 77       	andi	r18, 0x7F	; 127
     edc:	2f bd       	out	0x2f, r18	; 47
     ede:	2f b5       	in	r18, 0x2f	; 47
     ee0:	2f 7e       	andi	r18, 0xEF	; 239
     ee2:	2f bd       	out	0x2f, r18	; 47
     ee4:	2f b5       	in	r18, 0x2f	; 47
     ee6:	2f 7d       	andi	r18, 0xDF	; 223
     ee8:	2f bd       	out	0x2f, r18	; 47
     eea:	84 81       	ldd	r24, Z+4	; 0x04
     eec:	81 30       	cpi	r24, 0x01	; 1
     eee:	41 f5       	brne	.+80     	; 0xf40 <TIMER_init+0x10a>
     ef0:	89 b7       	in	r24, 0x39	; 57
     ef2:	84 60       	ori	r24, 0x04	; 4
     ef4:	89 bf       	out	0x39, r24	; 57
     ef6:	80 e0       	ldi	r24, 0x00	; 0
     ef8:	08 95       	ret
     efa:	14 bc       	out	0x24, r1	; 36
     efc:	15 bc       	out	0x25, r1	; 37
     efe:	13 bc       	out	0x23, r1	; 35
     f00:	14 bc       	out	0x24, r1	; 36
     f02:	25 b5       	in	r18, 0x25	; 37
     f04:	2f 7b       	andi	r18, 0xBF	; 191
     f06:	25 bd       	out	0x25, r18	; 37
     f08:	25 b5       	in	r18, 0x25	; 37
     f0a:	27 7f       	andi	r18, 0xF7	; 247
     f0c:	25 bd       	out	0x25, r18	; 37
     f0e:	25 b5       	in	r18, 0x25	; 37
     f10:	2f 7e       	andi	r18, 0xEF	; 239
     f12:	25 bd       	out	0x25, r18	; 37
     f14:	25 b5       	in	r18, 0x25	; 37
     f16:	2f 7d       	andi	r18, 0xDF	; 223
     f18:	25 bd       	out	0x25, r18	; 37
     f1a:	fc 01       	movw	r30, r24
     f1c:	84 81       	ldd	r24, Z+4	; 0x04
     f1e:	81 30       	cpi	r24, 0x01	; 1
     f20:	89 f4       	brne	.+34     	; 0xf44 <TIMER_init+0x10e>
     f22:	89 b7       	in	r24, 0x39	; 57
     f24:	80 64       	ori	r24, 0x40	; 64
     f26:	89 bf       	out	0x39, r24	; 57
     f28:	80 e0       	ldi	r24, 0x00	; 0
     f2a:	08 95       	ret
     f2c:	83 e0       	ldi	r24, 0x03	; 3
     f2e:	08 95       	ret
     f30:	83 e0       	ldi	r24, 0x03	; 3
     f32:	08 95       	ret
     f34:	83 e0       	ldi	r24, 0x03	; 3
     f36:	08 95       	ret
     f38:	83 e0       	ldi	r24, 0x03	; 3
     f3a:	08 95       	ret
     f3c:	80 e0       	ldi	r24, 0x00	; 0
     f3e:	08 95       	ret
     f40:	80 e0       	ldi	r24, 0x00	; 0
     f42:	08 95       	ret
     f44:	80 e0       	ldi	r24, 0x00	; 0
     f46:	08 95       	ret

00000f48 <TIMER_start>:
     f48:	00 97       	sbiw	r24, 0x00	; 0
     f4a:	09 f4       	brne	.+2      	; 0xf4e <TIMER_start+0x6>
     f4c:	3b c1       	rjmp	.+630    	; 0x11c4 <TIMER_start+0x27c>
     f4e:	dc 01       	movw	r26, r24
     f50:	2c 91       	ld	r18, X
     f52:	23 30       	cpi	r18, 0x03	; 3
     f54:	08 f0       	brcs	.+2      	; 0xf58 <TIMER_start+0x10>
     f56:	38 c1       	rjmp	.+624    	; 0x11c8 <TIMER_start+0x280>
     f58:	11 96       	adiw	r26, 0x01	; 1
     f5a:	ec 91       	ld	r30, X
     f5c:	ea 30       	cpi	r30, 0x0A	; 10
     f5e:	08 f0       	brcs	.+2      	; 0xf62 <TIMER_start+0x1a>
     f60:	35 c1       	rjmp	.+618    	; 0x11cc <TIMER_start+0x284>
     f62:	21 30       	cpi	r18, 0x01	; 1
     f64:	09 f4       	brne	.+2      	; 0xf68 <TIMER_start+0x20>
     f66:	68 c0       	rjmp	.+208    	; 0x1038 <TIMER_start+0xf0>
     f68:	20 f0       	brcs	.+8      	; 0xf72 <TIMER_start+0x2a>
     f6a:	22 30       	cpi	r18, 0x02	; 2
     f6c:	09 f4       	brne	.+2      	; 0xf70 <TIMER_start+0x28>
     f6e:	c7 c0       	rjmp	.+398    	; 0x10fe <TIMER_start+0x1b6>
     f70:	2f c1       	rjmp	.+606    	; 0x11d0 <TIMER_start+0x288>
     f72:	8e 2f       	mov	r24, r30
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	8a 30       	cpi	r24, 0x0A	; 10
     f78:	91 05       	cpc	r25, r1
     f7a:	08 f0       	brcs	.+2      	; 0xf7e <TIMER_start+0x36>
     f7c:	2b c1       	rjmp	.+598    	; 0x11d4 <TIMER_start+0x28c>
     f7e:	fc 01       	movw	r30, r24
     f80:	e6 5d       	subi	r30, 0xD6	; 214
     f82:	ff 4f       	sbci	r31, 0xFF	; 255
     f84:	0c 94 f7 0a 	jmp	0x15ee	; 0x15ee <__tablejump2__>
     f88:	83 b7       	in	r24, 0x33	; 51
     f8a:	8e 7f       	andi	r24, 0xFE	; 254
     f8c:	83 bf       	out	0x33, r24	; 51
     f8e:	83 b7       	in	r24, 0x33	; 51
     f90:	8d 7f       	andi	r24, 0xFD	; 253
     f92:	83 bf       	out	0x33, r24	; 51
     f94:	83 b7       	in	r24, 0x33	; 51
     f96:	8b 7f       	andi	r24, 0xFB	; 251
     f98:	83 bf       	out	0x33, r24	; 51
     f9a:	80 e0       	ldi	r24, 0x00	; 0
     f9c:	08 95       	ret
     f9e:	83 b7       	in	r24, 0x33	; 51
     fa0:	81 60       	ori	r24, 0x01	; 1
     fa2:	83 bf       	out	0x33, r24	; 51
     fa4:	83 b7       	in	r24, 0x33	; 51
     fa6:	8d 7f       	andi	r24, 0xFD	; 253
     fa8:	83 bf       	out	0x33, r24	; 51
     faa:	83 b7       	in	r24, 0x33	; 51
     fac:	8b 7f       	andi	r24, 0xFB	; 251
     fae:	83 bf       	out	0x33, r24	; 51
     fb0:	80 e0       	ldi	r24, 0x00	; 0
     fb2:	08 95       	ret
     fb4:	83 b7       	in	r24, 0x33	; 51
     fb6:	8e 7f       	andi	r24, 0xFE	; 254
     fb8:	83 bf       	out	0x33, r24	; 51
     fba:	83 b7       	in	r24, 0x33	; 51
     fbc:	82 60       	ori	r24, 0x02	; 2
     fbe:	83 bf       	out	0x33, r24	; 51
     fc0:	83 b7       	in	r24, 0x33	; 51
     fc2:	8b 7f       	andi	r24, 0xFB	; 251
     fc4:	83 bf       	out	0x33, r24	; 51
     fc6:	80 e0       	ldi	r24, 0x00	; 0
     fc8:	08 95       	ret
     fca:	83 b7       	in	r24, 0x33	; 51
     fcc:	81 60       	ori	r24, 0x01	; 1
     fce:	83 bf       	out	0x33, r24	; 51
     fd0:	83 b7       	in	r24, 0x33	; 51
     fd2:	82 60       	ori	r24, 0x02	; 2
     fd4:	83 bf       	out	0x33, r24	; 51
     fd6:	83 b7       	in	r24, 0x33	; 51
     fd8:	8b 7f       	andi	r24, 0xFB	; 251
     fda:	83 bf       	out	0x33, r24	; 51
     fdc:	80 e0       	ldi	r24, 0x00	; 0
     fde:	08 95       	ret
     fe0:	83 b7       	in	r24, 0x33	; 51
     fe2:	8e 7f       	andi	r24, 0xFE	; 254
     fe4:	83 bf       	out	0x33, r24	; 51
     fe6:	83 b7       	in	r24, 0x33	; 51
     fe8:	8d 7f       	andi	r24, 0xFD	; 253
     fea:	83 bf       	out	0x33, r24	; 51
     fec:	83 b7       	in	r24, 0x33	; 51
     fee:	84 60       	ori	r24, 0x04	; 4
     ff0:	83 bf       	out	0x33, r24	; 51
     ff2:	80 e0       	ldi	r24, 0x00	; 0
     ff4:	08 95       	ret
     ff6:	83 b7       	in	r24, 0x33	; 51
     ff8:	81 60       	ori	r24, 0x01	; 1
     ffa:	83 bf       	out	0x33, r24	; 51
     ffc:	83 b7       	in	r24, 0x33	; 51
     ffe:	8d 7f       	andi	r24, 0xFD	; 253
    1000:	83 bf       	out	0x33, r24	; 51
    1002:	83 b7       	in	r24, 0x33	; 51
    1004:	84 60       	ori	r24, 0x04	; 4
    1006:	83 bf       	out	0x33, r24	; 51
    1008:	80 e0       	ldi	r24, 0x00	; 0
    100a:	08 95       	ret
    100c:	83 b7       	in	r24, 0x33	; 51
    100e:	8e 7f       	andi	r24, 0xFE	; 254
    1010:	83 bf       	out	0x33, r24	; 51
    1012:	83 b7       	in	r24, 0x33	; 51
    1014:	82 60       	ori	r24, 0x02	; 2
    1016:	83 bf       	out	0x33, r24	; 51
    1018:	83 b7       	in	r24, 0x33	; 51
    101a:	84 60       	ori	r24, 0x04	; 4
    101c:	83 bf       	out	0x33, r24	; 51
    101e:	80 e0       	ldi	r24, 0x00	; 0
    1020:	08 95       	ret
    1022:	83 b7       	in	r24, 0x33	; 51
    1024:	81 60       	ori	r24, 0x01	; 1
    1026:	83 bf       	out	0x33, r24	; 51
    1028:	83 b7       	in	r24, 0x33	; 51
    102a:	82 60       	ori	r24, 0x02	; 2
    102c:	83 bf       	out	0x33, r24	; 51
    102e:	83 b7       	in	r24, 0x33	; 51
    1030:	84 60       	ori	r24, 0x04	; 4
    1032:	83 bf       	out	0x33, r24	; 51
    1034:	80 e0       	ldi	r24, 0x00	; 0
    1036:	08 95       	ret
    1038:	8e 2f       	mov	r24, r30
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	8a 30       	cpi	r24, 0x0A	; 10
    103e:	91 05       	cpc	r25, r1
    1040:	08 f0       	brcs	.+2      	; 0x1044 <TIMER_start+0xfc>
    1042:	ca c0       	rjmp	.+404    	; 0x11d8 <TIMER_start+0x290>
    1044:	fc 01       	movw	r30, r24
    1046:	ec 5c       	subi	r30, 0xCC	; 204
    1048:	ff 4f       	sbci	r31, 0xFF	; 255
    104a:	0c 94 f7 0a 	jmp	0x15ee	; 0x15ee <__tablejump2__>
    104e:	8e b5       	in	r24, 0x2e	; 46
    1050:	8e 7f       	andi	r24, 0xFE	; 254
    1052:	8e bd       	out	0x2e, r24	; 46
    1054:	8e b5       	in	r24, 0x2e	; 46
    1056:	8d 7f       	andi	r24, 0xFD	; 253
    1058:	8e bd       	out	0x2e, r24	; 46
    105a:	8e b5       	in	r24, 0x2e	; 46
    105c:	8b 7f       	andi	r24, 0xFB	; 251
    105e:	8e bd       	out	0x2e, r24	; 46
    1060:	80 e0       	ldi	r24, 0x00	; 0
    1062:	08 95       	ret
    1064:	8e b5       	in	r24, 0x2e	; 46
    1066:	81 60       	ori	r24, 0x01	; 1
    1068:	8e bd       	out	0x2e, r24	; 46
    106a:	8e b5       	in	r24, 0x2e	; 46
    106c:	8d 7f       	andi	r24, 0xFD	; 253
    106e:	8e bd       	out	0x2e, r24	; 46
    1070:	8e b5       	in	r24, 0x2e	; 46
    1072:	8b 7f       	andi	r24, 0xFB	; 251
    1074:	8e bd       	out	0x2e, r24	; 46
    1076:	80 e0       	ldi	r24, 0x00	; 0
    1078:	08 95       	ret
    107a:	8e b5       	in	r24, 0x2e	; 46
    107c:	8e 7f       	andi	r24, 0xFE	; 254
    107e:	8e bd       	out	0x2e, r24	; 46
    1080:	8e b5       	in	r24, 0x2e	; 46
    1082:	82 60       	ori	r24, 0x02	; 2
    1084:	8e bd       	out	0x2e, r24	; 46
    1086:	8e b5       	in	r24, 0x2e	; 46
    1088:	8b 7f       	andi	r24, 0xFB	; 251
    108a:	8e bd       	out	0x2e, r24	; 46
    108c:	80 e0       	ldi	r24, 0x00	; 0
    108e:	08 95       	ret
    1090:	8e b5       	in	r24, 0x2e	; 46
    1092:	81 60       	ori	r24, 0x01	; 1
    1094:	8e bd       	out	0x2e, r24	; 46
    1096:	8e b5       	in	r24, 0x2e	; 46
    1098:	82 60       	ori	r24, 0x02	; 2
    109a:	8e bd       	out	0x2e, r24	; 46
    109c:	8e b5       	in	r24, 0x2e	; 46
    109e:	8b 7f       	andi	r24, 0xFB	; 251
    10a0:	8e bd       	out	0x2e, r24	; 46
    10a2:	80 e0       	ldi	r24, 0x00	; 0
    10a4:	08 95       	ret
    10a6:	8e b5       	in	r24, 0x2e	; 46
    10a8:	8e 7f       	andi	r24, 0xFE	; 254
    10aa:	8e bd       	out	0x2e, r24	; 46
    10ac:	8e b5       	in	r24, 0x2e	; 46
    10ae:	8d 7f       	andi	r24, 0xFD	; 253
    10b0:	8e bd       	out	0x2e, r24	; 46
    10b2:	8e b5       	in	r24, 0x2e	; 46
    10b4:	84 60       	ori	r24, 0x04	; 4
    10b6:	8e bd       	out	0x2e, r24	; 46
    10b8:	80 e0       	ldi	r24, 0x00	; 0
    10ba:	08 95       	ret
    10bc:	8e b5       	in	r24, 0x2e	; 46
    10be:	81 60       	ori	r24, 0x01	; 1
    10c0:	8e bd       	out	0x2e, r24	; 46
    10c2:	8e b5       	in	r24, 0x2e	; 46
    10c4:	8d 7f       	andi	r24, 0xFD	; 253
    10c6:	8e bd       	out	0x2e, r24	; 46
    10c8:	8e b5       	in	r24, 0x2e	; 46
    10ca:	84 60       	ori	r24, 0x04	; 4
    10cc:	8e bd       	out	0x2e, r24	; 46
    10ce:	80 e0       	ldi	r24, 0x00	; 0
    10d0:	08 95       	ret
    10d2:	8e b5       	in	r24, 0x2e	; 46
    10d4:	8e 7f       	andi	r24, 0xFE	; 254
    10d6:	8e bd       	out	0x2e, r24	; 46
    10d8:	8e b5       	in	r24, 0x2e	; 46
    10da:	82 60       	ori	r24, 0x02	; 2
    10dc:	8e bd       	out	0x2e, r24	; 46
    10de:	8e b5       	in	r24, 0x2e	; 46
    10e0:	84 60       	ori	r24, 0x04	; 4
    10e2:	8e bd       	out	0x2e, r24	; 46
    10e4:	80 e0       	ldi	r24, 0x00	; 0
    10e6:	08 95       	ret
    10e8:	8e b5       	in	r24, 0x2e	; 46
    10ea:	81 60       	ori	r24, 0x01	; 1
    10ec:	8e bd       	out	0x2e, r24	; 46
    10ee:	8e b5       	in	r24, 0x2e	; 46
    10f0:	82 60       	ori	r24, 0x02	; 2
    10f2:	8e bd       	out	0x2e, r24	; 46
    10f4:	8e b5       	in	r24, 0x2e	; 46
    10f6:	84 60       	ori	r24, 0x04	; 4
    10f8:	8e bd       	out	0x2e, r24	; 46
    10fa:	80 e0       	ldi	r24, 0x00	; 0
    10fc:	08 95       	ret
    10fe:	8e 2f       	mov	r24, r30
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	88 30       	cpi	r24, 0x08	; 8
    1104:	91 05       	cpc	r25, r1
    1106:	08 f0       	brcs	.+2      	; 0x110a <TIMER_start+0x1c2>
    1108:	69 c0       	rjmp	.+210    	; 0x11dc <TIMER_start+0x294>
    110a:	fc 01       	movw	r30, r24
    110c:	e2 5c       	subi	r30, 0xC2	; 194
    110e:	ff 4f       	sbci	r31, 0xFF	; 255
    1110:	0c 94 f7 0a 	jmp	0x15ee	; 0x15ee <__tablejump2__>
    1114:	85 b5       	in	r24, 0x25	; 37
    1116:	8b 7f       	andi	r24, 0xFB	; 251
    1118:	85 bd       	out	0x25, r24	; 37
    111a:	85 b5       	in	r24, 0x25	; 37
    111c:	8d 7f       	andi	r24, 0xFD	; 253
    111e:	85 bd       	out	0x25, r24	; 37
    1120:	85 b5       	in	r24, 0x25	; 37
    1122:	8e 7f       	andi	r24, 0xFE	; 254
    1124:	85 bd       	out	0x25, r24	; 37
    1126:	80 e0       	ldi	r24, 0x00	; 0
    1128:	08 95       	ret
    112a:	85 b5       	in	r24, 0x25	; 37
    112c:	84 60       	ori	r24, 0x04	; 4
    112e:	85 bd       	out	0x25, r24	; 37
    1130:	85 b5       	in	r24, 0x25	; 37
    1132:	8d 7f       	andi	r24, 0xFD	; 253
    1134:	85 bd       	out	0x25, r24	; 37
    1136:	85 b5       	in	r24, 0x25	; 37
    1138:	8e 7f       	andi	r24, 0xFE	; 254
    113a:	85 bd       	out	0x25, r24	; 37
    113c:	80 e0       	ldi	r24, 0x00	; 0
    113e:	08 95       	ret
    1140:	85 b5       	in	r24, 0x25	; 37
    1142:	8b 7f       	andi	r24, 0xFB	; 251
    1144:	85 bd       	out	0x25, r24	; 37
    1146:	85 b5       	in	r24, 0x25	; 37
    1148:	82 60       	ori	r24, 0x02	; 2
    114a:	85 bd       	out	0x25, r24	; 37
    114c:	85 b5       	in	r24, 0x25	; 37
    114e:	8e 7f       	andi	r24, 0xFE	; 254
    1150:	85 bd       	out	0x25, r24	; 37
    1152:	80 e0       	ldi	r24, 0x00	; 0
    1154:	08 95       	ret
    1156:	85 b5       	in	r24, 0x25	; 37
    1158:	84 60       	ori	r24, 0x04	; 4
    115a:	85 bd       	out	0x25, r24	; 37
    115c:	85 b5       	in	r24, 0x25	; 37
    115e:	82 60       	ori	r24, 0x02	; 2
    1160:	85 bd       	out	0x25, r24	; 37
    1162:	85 b5       	in	r24, 0x25	; 37
    1164:	8e 7f       	andi	r24, 0xFE	; 254
    1166:	85 bd       	out	0x25, r24	; 37
    1168:	80 e0       	ldi	r24, 0x00	; 0
    116a:	08 95       	ret
    116c:	85 b5       	in	r24, 0x25	; 37
    116e:	8b 7f       	andi	r24, 0xFB	; 251
    1170:	85 bd       	out	0x25, r24	; 37
    1172:	85 b5       	in	r24, 0x25	; 37
    1174:	8d 7f       	andi	r24, 0xFD	; 253
    1176:	85 bd       	out	0x25, r24	; 37
    1178:	85 b5       	in	r24, 0x25	; 37
    117a:	81 60       	ori	r24, 0x01	; 1
    117c:	85 bd       	out	0x25, r24	; 37
    117e:	80 e0       	ldi	r24, 0x00	; 0
    1180:	08 95       	ret
    1182:	85 b5       	in	r24, 0x25	; 37
    1184:	84 60       	ori	r24, 0x04	; 4
    1186:	85 bd       	out	0x25, r24	; 37
    1188:	85 b5       	in	r24, 0x25	; 37
    118a:	8d 7f       	andi	r24, 0xFD	; 253
    118c:	85 bd       	out	0x25, r24	; 37
    118e:	85 b5       	in	r24, 0x25	; 37
    1190:	81 60       	ori	r24, 0x01	; 1
    1192:	85 bd       	out	0x25, r24	; 37
    1194:	80 e0       	ldi	r24, 0x00	; 0
    1196:	08 95       	ret
    1198:	85 b5       	in	r24, 0x25	; 37
    119a:	8b 7f       	andi	r24, 0xFB	; 251
    119c:	85 bd       	out	0x25, r24	; 37
    119e:	85 b5       	in	r24, 0x25	; 37
    11a0:	82 60       	ori	r24, 0x02	; 2
    11a2:	85 bd       	out	0x25, r24	; 37
    11a4:	85 b5       	in	r24, 0x25	; 37
    11a6:	81 60       	ori	r24, 0x01	; 1
    11a8:	85 bd       	out	0x25, r24	; 37
    11aa:	80 e0       	ldi	r24, 0x00	; 0
    11ac:	08 95       	ret
    11ae:	85 b5       	in	r24, 0x25	; 37
    11b0:	84 60       	ori	r24, 0x04	; 4
    11b2:	85 bd       	out	0x25, r24	; 37
    11b4:	85 b5       	in	r24, 0x25	; 37
    11b6:	82 60       	ori	r24, 0x02	; 2
    11b8:	85 bd       	out	0x25, r24	; 37
    11ba:	85 b5       	in	r24, 0x25	; 37
    11bc:	81 60       	ori	r24, 0x01	; 1
    11be:	85 bd       	out	0x25, r24	; 37
    11c0:	80 e0       	ldi	r24, 0x00	; 0
    11c2:	08 95       	ret
    11c4:	83 e0       	ldi	r24, 0x03	; 3
    11c6:	08 95       	ret
    11c8:	83 e0       	ldi	r24, 0x03	; 3
    11ca:	08 95       	ret
    11cc:	83 e0       	ldi	r24, 0x03	; 3
    11ce:	08 95       	ret
    11d0:	83 e0       	ldi	r24, 0x03	; 3
    11d2:	08 95       	ret
    11d4:	83 e0       	ldi	r24, 0x03	; 3
    11d6:	08 95       	ret
    11d8:	83 e0       	ldi	r24, 0x03	; 3
    11da:	08 95       	ret
    11dc:	83 e0       	ldi	r24, 0x03	; 3
    11de:	08 95       	ret

000011e0 <TIMER_stop>:
    11e0:	83 30       	cpi	r24, 0x03	; 3
    11e2:	38 f5       	brcc	.+78     	; 0x1232 <TIMER_stop+0x52>
    11e4:	81 30       	cpi	r24, 0x01	; 1
    11e6:	79 f0       	breq	.+30     	; 0x1206 <TIMER_stop+0x26>
    11e8:	18 f0       	brcs	.+6      	; 0x11f0 <TIMER_stop+0x10>
    11ea:	82 30       	cpi	r24, 0x02	; 2
    11ec:	b9 f0       	breq	.+46     	; 0x121c <TIMER_stop+0x3c>
    11ee:	23 c0       	rjmp	.+70     	; 0x1236 <TIMER_stop+0x56>
    11f0:	83 b7       	in	r24, 0x33	; 51
    11f2:	8e 7f       	andi	r24, 0xFE	; 254
    11f4:	83 bf       	out	0x33, r24	; 51
    11f6:	83 b7       	in	r24, 0x33	; 51
    11f8:	8d 7f       	andi	r24, 0xFD	; 253
    11fa:	83 bf       	out	0x33, r24	; 51
    11fc:	83 b7       	in	r24, 0x33	; 51
    11fe:	8b 7f       	andi	r24, 0xFB	; 251
    1200:	83 bf       	out	0x33, r24	; 51
    1202:	80 e0       	ldi	r24, 0x00	; 0
    1204:	08 95       	ret
    1206:	8e b5       	in	r24, 0x2e	; 46
    1208:	8e 7f       	andi	r24, 0xFE	; 254
    120a:	8e bd       	out	0x2e, r24	; 46
    120c:	8e b5       	in	r24, 0x2e	; 46
    120e:	8d 7f       	andi	r24, 0xFD	; 253
    1210:	8e bd       	out	0x2e, r24	; 46
    1212:	8e b5       	in	r24, 0x2e	; 46
    1214:	8b 7f       	andi	r24, 0xFB	; 251
    1216:	8e bd       	out	0x2e, r24	; 46
    1218:	80 e0       	ldi	r24, 0x00	; 0
    121a:	08 95       	ret
    121c:	85 b5       	in	r24, 0x25	; 37
    121e:	8b 7f       	andi	r24, 0xFB	; 251
    1220:	85 bd       	out	0x25, r24	; 37
    1222:	85 b5       	in	r24, 0x25	; 37
    1224:	8d 7f       	andi	r24, 0xFD	; 253
    1226:	85 bd       	out	0x25, r24	; 37
    1228:	85 b5       	in	r24, 0x25	; 37
    122a:	8e 7f       	andi	r24, 0xFE	; 254
    122c:	85 bd       	out	0x25, r24	; 37
    122e:	80 e0       	ldi	r24, 0x00	; 0
    1230:	08 95       	ret
    1232:	83 e0       	ldi	r24, 0x03	; 3
    1234:	08 95       	ret
    1236:	83 e0       	ldi	r24, 0x03	; 3
    1238:	08 95       	ret

0000123a <TIMER_setCallBack>:
    123a:	00 97       	sbiw	r24, 0x00	; 0
    123c:	a9 f0       	breq	.+42     	; 0x1268 <TIMER_setCallBack+0x2e>
    123e:	63 30       	cpi	r22, 0x03	; 3
    1240:	a8 f4       	brcc	.+42     	; 0x126c <TIMER_setCallBack+0x32>
    1242:	61 30       	cpi	r22, 0x01	; 1
    1244:	59 f0       	breq	.+22     	; 0x125c <TIMER_setCallBack+0x22>
    1246:	20 f0       	brcs	.+8      	; 0x1250 <TIMER_setCallBack+0x16>
    1248:	62 30       	cpi	r22, 0x02	; 2
    124a:	91 f0       	breq	.+36     	; 0x1270 <TIMER_setCallBack+0x36>
    124c:	83 e0       	ldi	r24, 0x03	; 3
    124e:	08 95       	ret
    1250:	90 93 e1 00 	sts	0x00E1, r25	; 0x8000e1 <sg_Timer0_callBackPtr+0x1>
    1254:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <sg_Timer0_callBackPtr>
    1258:	80 e0       	ldi	r24, 0x00	; 0
    125a:	08 95       	ret
    125c:	90 93 df 00 	sts	0x00DF, r25	; 0x8000df <sg_Timer1_callBackPtr+0x1>
    1260:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <sg_Timer1_callBackPtr>
    1264:	80 e0       	ldi	r24, 0x00	; 0
    1266:	08 95       	ret
    1268:	83 e0       	ldi	r24, 0x03	; 3
    126a:	08 95       	ret
    126c:	83 e0       	ldi	r24, 0x03	; 3
    126e:	08 95       	ret
    1270:	80 e0       	ldi	r24, 0x00	; 0
    1272:	08 95       	ret

00001274 <vidTimer2_start>:
    1274:	95 b5       	in	r25, 0x25	; 37
    1276:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <global_prescaller>
    127a:	89 2b       	or	r24, r25
    127c:	85 bd       	out	0x25, r24	; 37
    127e:	81 e0       	ldi	r24, 0x01	; 1
    1280:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <global_timerStatus>
    1284:	80 e0       	ldi	r24, 0x00	; 0
    1286:	08 95       	ret

00001288 <vidTimer2_stop>:
    1288:	85 b5       	in	r24, 0x25	; 37
    128a:	88 7f       	andi	r24, 0xF8	; 248
    128c:	85 bd       	out	0x25, r24	; 37
    128e:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <global_timerStatus>
    1292:	80 e0       	ldi	r24, 0x00	; 0
    1294:	08 95       	ret

00001296 <vidTimer2_setcbf_OVF>:
    1296:	00 97       	sbiw	r24, 0x00	; 0
    1298:	21 f0       	breq	.+8      	; 0x12a2 <vidTimer2_setcbf_OVF+0xc>
    129a:	90 93 db 00 	sts	0x00DB, r25	; 0x8000db <globalCallFunc+0x1>
    129e:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <globalCallFunc>
    12a2:	08 95       	ret

000012a4 <MTIMER_vidResetTCNT>:
    12a4:	14 bc       	out	0x24, r1	; 36
    12a6:	08 95       	ret

000012a8 <MTIMER_u8GetTCNT>:
    12a8:	84 b5       	in	r24, 0x24	; 36
    12aa:	08 95       	ret

000012ac <__vector_5>:
}
/*************************************************************************************************************
 * 							ISR Interrupt Handling
 ************************************************************************************************************/
ISR(TIMER2_OVF)
{
    12ac:	1f 92       	push	r1
    12ae:	0f 92       	push	r0
    12b0:	0f b6       	in	r0, 0x3f	; 63
    12b2:	0f 92       	push	r0
    12b4:	11 24       	eor	r1, r1
    12b6:	2f 93       	push	r18
    12b8:	3f 93       	push	r19
    12ba:	4f 93       	push	r20
    12bc:	5f 93       	push	r21
    12be:	6f 93       	push	r22
    12c0:	7f 93       	push	r23
    12c2:	8f 93       	push	r24
    12c4:	9f 93       	push	r25
    12c6:	af 93       	push	r26
    12c8:	bf 93       	push	r27
    12ca:	ef 93       	push	r30
    12cc:	ff 93       	push	r31
	static uint8_t counter = 0;
	counter++;
    12ce:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <counter.1821>
    12d2:	8f 5f       	subi	r24, 0xFF	; 255
    12d4:	80 93 d9 00 	sts	0x00D9, r24	; 0x8000d9 <counter.1821>
	if(counter == global_ovf)
    12d8:	90 91 80 00 	lds	r25, 0x0080	; 0x800080 <global_ovf>
    12dc:	89 13       	cpse	r24, r25
    12de:	09 c0       	rjmp	.+18     	; 0x12f2 <__vector_5+0x46>
	{
		if (globalCallFunc != NULL)
    12e0:	e0 91 da 00 	lds	r30, 0x00DA	; 0x8000da <globalCallFunc>
    12e4:	f0 91 db 00 	lds	r31, 0x00DB	; 0x8000db <globalCallFunc+0x1>
    12e8:	30 97       	sbiw	r30, 0x00	; 0
    12ea:	19 f0       	breq	.+6      	; 0x12f2 <__vector_5+0x46>
		{
			counter = 0;
    12ec:	10 92 d9 00 	sts	0x00D9, r1	; 0x8000d9 <counter.1821>

			globalCallFunc();
    12f0:	09 95       	icall
//			TCNT2_REG = preload;
//			global_ovf = 0;
//			vidTimer1_stop();
		}
	}
}
    12f2:	ff 91       	pop	r31
    12f4:	ef 91       	pop	r30
    12f6:	bf 91       	pop	r27
    12f8:	af 91       	pop	r26
    12fa:	9f 91       	pop	r25
    12fc:	8f 91       	pop	r24
    12fe:	7f 91       	pop	r23
    1300:	6f 91       	pop	r22
    1302:	5f 91       	pop	r21
    1304:	4f 91       	pop	r20
    1306:	3f 91       	pop	r19
    1308:	2f 91       	pop	r18
    130a:	0f 90       	pop	r0
    130c:	0f be       	out	0x3f, r0	; 63
    130e:	0f 90       	pop	r0
    1310:	1f 90       	pop	r1
    1312:	18 95       	reti

00001314 <__subsf3>:
    1314:	50 58       	subi	r21, 0x80	; 128

00001316 <__addsf3>:
    1316:	bb 27       	eor	r27, r27
    1318:	aa 27       	eor	r26, r26
    131a:	0e 94 a2 09 	call	0x1344	; 0x1344 <__addsf3x>
    131e:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__fp_round>
    1322:	0e 94 af 0a 	call	0x155e	; 0x155e <__fp_pscA>
    1326:	38 f0       	brcs	.+14     	; 0x1336 <__addsf3+0x20>
    1328:	0e 94 b6 0a 	call	0x156c	; 0x156c <__fp_pscB>
    132c:	20 f0       	brcs	.+8      	; 0x1336 <__addsf3+0x20>
    132e:	39 f4       	brne	.+14     	; 0x133e <__addsf3+0x28>
    1330:	9f 3f       	cpi	r25, 0xFF	; 255
    1332:	19 f4       	brne	.+6      	; 0x133a <__addsf3+0x24>
    1334:	26 f4       	brtc	.+8      	; 0x133e <__addsf3+0x28>
    1336:	0c 94 ac 0a 	jmp	0x1558	; 0x1558 <__fp_nan>
    133a:	0e f4       	brtc	.+2      	; 0x133e <__addsf3+0x28>
    133c:	e0 95       	com	r30
    133e:	e7 fb       	bst	r30, 7
    1340:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <__fp_inf>

00001344 <__addsf3x>:
    1344:	e9 2f       	mov	r30, r25
    1346:	0e 94 ce 0a 	call	0x159c	; 0x159c <__fp_split3>
    134a:	58 f3       	brcs	.-42     	; 0x1322 <__addsf3+0xc>
    134c:	ba 17       	cp	r27, r26
    134e:	62 07       	cpc	r22, r18
    1350:	73 07       	cpc	r23, r19
    1352:	84 07       	cpc	r24, r20
    1354:	95 07       	cpc	r25, r21
    1356:	20 f0       	brcs	.+8      	; 0x1360 <__addsf3x+0x1c>
    1358:	79 f4       	brne	.+30     	; 0x1378 <__addsf3x+0x34>
    135a:	a6 f5       	brtc	.+104    	; 0x13c4 <__addsf3x+0x80>
    135c:	0c 94 f0 0a 	jmp	0x15e0	; 0x15e0 <__fp_zero>
    1360:	0e f4       	brtc	.+2      	; 0x1364 <__addsf3x+0x20>
    1362:	e0 95       	com	r30
    1364:	0b 2e       	mov	r0, r27
    1366:	ba 2f       	mov	r27, r26
    1368:	a0 2d       	mov	r26, r0
    136a:	0b 01       	movw	r0, r22
    136c:	b9 01       	movw	r22, r18
    136e:	90 01       	movw	r18, r0
    1370:	0c 01       	movw	r0, r24
    1372:	ca 01       	movw	r24, r20
    1374:	a0 01       	movw	r20, r0
    1376:	11 24       	eor	r1, r1
    1378:	ff 27       	eor	r31, r31
    137a:	59 1b       	sub	r21, r25
    137c:	99 f0       	breq	.+38     	; 0x13a4 <__addsf3x+0x60>
    137e:	59 3f       	cpi	r21, 0xF9	; 249
    1380:	50 f4       	brcc	.+20     	; 0x1396 <__addsf3x+0x52>
    1382:	50 3e       	cpi	r21, 0xE0	; 224
    1384:	68 f1       	brcs	.+90     	; 0x13e0 <__addsf3x+0x9c>
    1386:	1a 16       	cp	r1, r26
    1388:	f0 40       	sbci	r31, 0x00	; 0
    138a:	a2 2f       	mov	r26, r18
    138c:	23 2f       	mov	r18, r19
    138e:	34 2f       	mov	r19, r20
    1390:	44 27       	eor	r20, r20
    1392:	58 5f       	subi	r21, 0xF8	; 248
    1394:	f3 cf       	rjmp	.-26     	; 0x137c <__addsf3x+0x38>
    1396:	46 95       	lsr	r20
    1398:	37 95       	ror	r19
    139a:	27 95       	ror	r18
    139c:	a7 95       	ror	r26
    139e:	f0 40       	sbci	r31, 0x00	; 0
    13a0:	53 95       	inc	r21
    13a2:	c9 f7       	brne	.-14     	; 0x1396 <__addsf3x+0x52>
    13a4:	7e f4       	brtc	.+30     	; 0x13c4 <__addsf3x+0x80>
    13a6:	1f 16       	cp	r1, r31
    13a8:	ba 0b       	sbc	r27, r26
    13aa:	62 0b       	sbc	r22, r18
    13ac:	73 0b       	sbc	r23, r19
    13ae:	84 0b       	sbc	r24, r20
    13b0:	ba f0       	brmi	.+46     	; 0x13e0 <__addsf3x+0x9c>
    13b2:	91 50       	subi	r25, 0x01	; 1
    13b4:	a1 f0       	breq	.+40     	; 0x13de <__addsf3x+0x9a>
    13b6:	ff 0f       	add	r31, r31
    13b8:	bb 1f       	adc	r27, r27
    13ba:	66 1f       	adc	r22, r22
    13bc:	77 1f       	adc	r23, r23
    13be:	88 1f       	adc	r24, r24
    13c0:	c2 f7       	brpl	.-16     	; 0x13b2 <__addsf3x+0x6e>
    13c2:	0e c0       	rjmp	.+28     	; 0x13e0 <__addsf3x+0x9c>
    13c4:	ba 0f       	add	r27, r26
    13c6:	62 1f       	adc	r22, r18
    13c8:	73 1f       	adc	r23, r19
    13ca:	84 1f       	adc	r24, r20
    13cc:	48 f4       	brcc	.+18     	; 0x13e0 <__addsf3x+0x9c>
    13ce:	87 95       	ror	r24
    13d0:	77 95       	ror	r23
    13d2:	67 95       	ror	r22
    13d4:	b7 95       	ror	r27
    13d6:	f7 95       	ror	r31
    13d8:	9e 3f       	cpi	r25, 0xFE	; 254
    13da:	08 f0       	brcs	.+2      	; 0x13de <__addsf3x+0x9a>
    13dc:	b0 cf       	rjmp	.-160    	; 0x133e <__addsf3+0x28>
    13de:	93 95       	inc	r25
    13e0:	88 0f       	add	r24, r24
    13e2:	08 f0       	brcs	.+2      	; 0x13e6 <__addsf3x+0xa2>
    13e4:	99 27       	eor	r25, r25
    13e6:	ee 0f       	add	r30, r30
    13e8:	97 95       	ror	r25
    13ea:	87 95       	ror	r24
    13ec:	08 95       	ret

000013ee <__divsf3>:
    13ee:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__divsf3x>
    13f2:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__fp_round>
    13f6:	0e 94 b6 0a 	call	0x156c	; 0x156c <__fp_pscB>
    13fa:	58 f0       	brcs	.+22     	; 0x1412 <__divsf3+0x24>
    13fc:	0e 94 af 0a 	call	0x155e	; 0x155e <__fp_pscA>
    1400:	40 f0       	brcs	.+16     	; 0x1412 <__divsf3+0x24>
    1402:	29 f4       	brne	.+10     	; 0x140e <__divsf3+0x20>
    1404:	5f 3f       	cpi	r21, 0xFF	; 255
    1406:	29 f0       	breq	.+10     	; 0x1412 <__divsf3+0x24>
    1408:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <__fp_inf>
    140c:	51 11       	cpse	r21, r1
    140e:	0c 94 f1 0a 	jmp	0x15e2	; 0x15e2 <__fp_szero>
    1412:	0c 94 ac 0a 	jmp	0x1558	; 0x1558 <__fp_nan>

00001416 <__divsf3x>:
    1416:	0e 94 ce 0a 	call	0x159c	; 0x159c <__fp_split3>
    141a:	68 f3       	brcs	.-38     	; 0x13f6 <__divsf3+0x8>

0000141c <__divsf3_pse>:
    141c:	99 23       	and	r25, r25
    141e:	b1 f3       	breq	.-20     	; 0x140c <__divsf3+0x1e>
    1420:	55 23       	and	r21, r21
    1422:	91 f3       	breq	.-28     	; 0x1408 <__divsf3+0x1a>
    1424:	95 1b       	sub	r25, r21
    1426:	55 0b       	sbc	r21, r21
    1428:	bb 27       	eor	r27, r27
    142a:	aa 27       	eor	r26, r26
    142c:	62 17       	cp	r22, r18
    142e:	73 07       	cpc	r23, r19
    1430:	84 07       	cpc	r24, r20
    1432:	38 f0       	brcs	.+14     	; 0x1442 <__divsf3_pse+0x26>
    1434:	9f 5f       	subi	r25, 0xFF	; 255
    1436:	5f 4f       	sbci	r21, 0xFF	; 255
    1438:	22 0f       	add	r18, r18
    143a:	33 1f       	adc	r19, r19
    143c:	44 1f       	adc	r20, r20
    143e:	aa 1f       	adc	r26, r26
    1440:	a9 f3       	breq	.-22     	; 0x142c <__divsf3_pse+0x10>
    1442:	35 d0       	rcall	.+106    	; 0x14ae <__divsf3_pse+0x92>
    1444:	0e 2e       	mov	r0, r30
    1446:	3a f0       	brmi	.+14     	; 0x1456 <__divsf3_pse+0x3a>
    1448:	e0 e8       	ldi	r30, 0x80	; 128
    144a:	32 d0       	rcall	.+100    	; 0x14b0 <__divsf3_pse+0x94>
    144c:	91 50       	subi	r25, 0x01	; 1
    144e:	50 40       	sbci	r21, 0x00	; 0
    1450:	e6 95       	lsr	r30
    1452:	00 1c       	adc	r0, r0
    1454:	ca f7       	brpl	.-14     	; 0x1448 <__divsf3_pse+0x2c>
    1456:	2b d0       	rcall	.+86     	; 0x14ae <__divsf3_pse+0x92>
    1458:	fe 2f       	mov	r31, r30
    145a:	29 d0       	rcall	.+82     	; 0x14ae <__divsf3_pse+0x92>
    145c:	66 0f       	add	r22, r22
    145e:	77 1f       	adc	r23, r23
    1460:	88 1f       	adc	r24, r24
    1462:	bb 1f       	adc	r27, r27
    1464:	26 17       	cp	r18, r22
    1466:	37 07       	cpc	r19, r23
    1468:	48 07       	cpc	r20, r24
    146a:	ab 07       	cpc	r26, r27
    146c:	b0 e8       	ldi	r27, 0x80	; 128
    146e:	09 f0       	breq	.+2      	; 0x1472 <__divsf3_pse+0x56>
    1470:	bb 0b       	sbc	r27, r27
    1472:	80 2d       	mov	r24, r0
    1474:	bf 01       	movw	r22, r30
    1476:	ff 27       	eor	r31, r31
    1478:	93 58       	subi	r25, 0x83	; 131
    147a:	5f 4f       	sbci	r21, 0xFF	; 255
    147c:	3a f0       	brmi	.+14     	; 0x148c <__divsf3_pse+0x70>
    147e:	9e 3f       	cpi	r25, 0xFE	; 254
    1480:	51 05       	cpc	r21, r1
    1482:	78 f0       	brcs	.+30     	; 0x14a2 <__divsf3_pse+0x86>
    1484:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <__fp_inf>
    1488:	0c 94 f1 0a 	jmp	0x15e2	; 0x15e2 <__fp_szero>
    148c:	5f 3f       	cpi	r21, 0xFF	; 255
    148e:	e4 f3       	brlt	.-8      	; 0x1488 <__divsf3_pse+0x6c>
    1490:	98 3e       	cpi	r25, 0xE8	; 232
    1492:	d4 f3       	brlt	.-12     	; 0x1488 <__divsf3_pse+0x6c>
    1494:	86 95       	lsr	r24
    1496:	77 95       	ror	r23
    1498:	67 95       	ror	r22
    149a:	b7 95       	ror	r27
    149c:	f7 95       	ror	r31
    149e:	9f 5f       	subi	r25, 0xFF	; 255
    14a0:	c9 f7       	brne	.-14     	; 0x1494 <__divsf3_pse+0x78>
    14a2:	88 0f       	add	r24, r24
    14a4:	91 1d       	adc	r25, r1
    14a6:	96 95       	lsr	r25
    14a8:	87 95       	ror	r24
    14aa:	97 f9       	bld	r25, 7
    14ac:	08 95       	ret
    14ae:	e1 e0       	ldi	r30, 0x01	; 1
    14b0:	66 0f       	add	r22, r22
    14b2:	77 1f       	adc	r23, r23
    14b4:	88 1f       	adc	r24, r24
    14b6:	bb 1f       	adc	r27, r27
    14b8:	62 17       	cp	r22, r18
    14ba:	73 07       	cpc	r23, r19
    14bc:	84 07       	cpc	r24, r20
    14be:	ba 07       	cpc	r27, r26
    14c0:	20 f0       	brcs	.+8      	; 0x14ca <__divsf3_pse+0xae>
    14c2:	62 1b       	sub	r22, r18
    14c4:	73 0b       	sbc	r23, r19
    14c6:	84 0b       	sbc	r24, r20
    14c8:	ba 0b       	sbc	r27, r26
    14ca:	ee 1f       	adc	r30, r30
    14cc:	88 f7       	brcc	.-30     	; 0x14b0 <__divsf3_pse+0x94>
    14ce:	e0 95       	com	r30
    14d0:	08 95       	ret

000014d2 <__floatunsisf>:
    14d2:	e8 94       	clt
    14d4:	09 c0       	rjmp	.+18     	; 0x14e8 <__floatsisf+0x12>

000014d6 <__floatsisf>:
    14d6:	97 fb       	bst	r25, 7
    14d8:	3e f4       	brtc	.+14     	; 0x14e8 <__floatsisf+0x12>
    14da:	90 95       	com	r25
    14dc:	80 95       	com	r24
    14de:	70 95       	com	r23
    14e0:	61 95       	neg	r22
    14e2:	7f 4f       	sbci	r23, 0xFF	; 255
    14e4:	8f 4f       	sbci	r24, 0xFF	; 255
    14e6:	9f 4f       	sbci	r25, 0xFF	; 255
    14e8:	99 23       	and	r25, r25
    14ea:	a9 f0       	breq	.+42     	; 0x1516 <__floatsisf+0x40>
    14ec:	f9 2f       	mov	r31, r25
    14ee:	96 e9       	ldi	r25, 0x96	; 150
    14f0:	bb 27       	eor	r27, r27
    14f2:	93 95       	inc	r25
    14f4:	f6 95       	lsr	r31
    14f6:	87 95       	ror	r24
    14f8:	77 95       	ror	r23
    14fa:	67 95       	ror	r22
    14fc:	b7 95       	ror	r27
    14fe:	f1 11       	cpse	r31, r1
    1500:	f8 cf       	rjmp	.-16     	; 0x14f2 <__floatsisf+0x1c>
    1502:	fa f4       	brpl	.+62     	; 0x1542 <__floatsisf+0x6c>
    1504:	bb 0f       	add	r27, r27
    1506:	11 f4       	brne	.+4      	; 0x150c <__floatsisf+0x36>
    1508:	60 ff       	sbrs	r22, 0
    150a:	1b c0       	rjmp	.+54     	; 0x1542 <__floatsisf+0x6c>
    150c:	6f 5f       	subi	r22, 0xFF	; 255
    150e:	7f 4f       	sbci	r23, 0xFF	; 255
    1510:	8f 4f       	sbci	r24, 0xFF	; 255
    1512:	9f 4f       	sbci	r25, 0xFF	; 255
    1514:	16 c0       	rjmp	.+44     	; 0x1542 <__floatsisf+0x6c>
    1516:	88 23       	and	r24, r24
    1518:	11 f0       	breq	.+4      	; 0x151e <__floatsisf+0x48>
    151a:	96 e9       	ldi	r25, 0x96	; 150
    151c:	11 c0       	rjmp	.+34     	; 0x1540 <__floatsisf+0x6a>
    151e:	77 23       	and	r23, r23
    1520:	21 f0       	breq	.+8      	; 0x152a <__floatsisf+0x54>
    1522:	9e e8       	ldi	r25, 0x8E	; 142
    1524:	87 2f       	mov	r24, r23
    1526:	76 2f       	mov	r23, r22
    1528:	05 c0       	rjmp	.+10     	; 0x1534 <__floatsisf+0x5e>
    152a:	66 23       	and	r22, r22
    152c:	71 f0       	breq	.+28     	; 0x154a <__floatsisf+0x74>
    152e:	96 e8       	ldi	r25, 0x86	; 134
    1530:	86 2f       	mov	r24, r22
    1532:	70 e0       	ldi	r23, 0x00	; 0
    1534:	60 e0       	ldi	r22, 0x00	; 0
    1536:	2a f0       	brmi	.+10     	; 0x1542 <__floatsisf+0x6c>
    1538:	9a 95       	dec	r25
    153a:	66 0f       	add	r22, r22
    153c:	77 1f       	adc	r23, r23
    153e:	88 1f       	adc	r24, r24
    1540:	da f7       	brpl	.-10     	; 0x1538 <__floatsisf+0x62>
    1542:	88 0f       	add	r24, r24
    1544:	96 95       	lsr	r25
    1546:	87 95       	ror	r24
    1548:	97 f9       	bld	r25, 7
    154a:	08 95       	ret

0000154c <__fp_inf>:
    154c:	97 f9       	bld	r25, 7
    154e:	9f 67       	ori	r25, 0x7F	; 127
    1550:	80 e8       	ldi	r24, 0x80	; 128
    1552:	70 e0       	ldi	r23, 0x00	; 0
    1554:	60 e0       	ldi	r22, 0x00	; 0
    1556:	08 95       	ret

00001558 <__fp_nan>:
    1558:	9f ef       	ldi	r25, 0xFF	; 255
    155a:	80 ec       	ldi	r24, 0xC0	; 192
    155c:	08 95       	ret

0000155e <__fp_pscA>:
    155e:	00 24       	eor	r0, r0
    1560:	0a 94       	dec	r0
    1562:	16 16       	cp	r1, r22
    1564:	17 06       	cpc	r1, r23
    1566:	18 06       	cpc	r1, r24
    1568:	09 06       	cpc	r0, r25
    156a:	08 95       	ret

0000156c <__fp_pscB>:
    156c:	00 24       	eor	r0, r0
    156e:	0a 94       	dec	r0
    1570:	12 16       	cp	r1, r18
    1572:	13 06       	cpc	r1, r19
    1574:	14 06       	cpc	r1, r20
    1576:	05 06       	cpc	r0, r21
    1578:	08 95       	ret

0000157a <__fp_round>:
    157a:	09 2e       	mov	r0, r25
    157c:	03 94       	inc	r0
    157e:	00 0c       	add	r0, r0
    1580:	11 f4       	brne	.+4      	; 0x1586 <__fp_round+0xc>
    1582:	88 23       	and	r24, r24
    1584:	52 f0       	brmi	.+20     	; 0x159a <__fp_round+0x20>
    1586:	bb 0f       	add	r27, r27
    1588:	40 f4       	brcc	.+16     	; 0x159a <__fp_round+0x20>
    158a:	bf 2b       	or	r27, r31
    158c:	11 f4       	brne	.+4      	; 0x1592 <__fp_round+0x18>
    158e:	60 ff       	sbrs	r22, 0
    1590:	04 c0       	rjmp	.+8      	; 0x159a <__fp_round+0x20>
    1592:	6f 5f       	subi	r22, 0xFF	; 255
    1594:	7f 4f       	sbci	r23, 0xFF	; 255
    1596:	8f 4f       	sbci	r24, 0xFF	; 255
    1598:	9f 4f       	sbci	r25, 0xFF	; 255
    159a:	08 95       	ret

0000159c <__fp_split3>:
    159c:	57 fd       	sbrc	r21, 7
    159e:	90 58       	subi	r25, 0x80	; 128
    15a0:	44 0f       	add	r20, r20
    15a2:	55 1f       	adc	r21, r21
    15a4:	59 f0       	breq	.+22     	; 0x15bc <__fp_splitA+0x10>
    15a6:	5f 3f       	cpi	r21, 0xFF	; 255
    15a8:	71 f0       	breq	.+28     	; 0x15c6 <__fp_splitA+0x1a>
    15aa:	47 95       	ror	r20

000015ac <__fp_splitA>:
    15ac:	88 0f       	add	r24, r24
    15ae:	97 fb       	bst	r25, 7
    15b0:	99 1f       	adc	r25, r25
    15b2:	61 f0       	breq	.+24     	; 0x15cc <__fp_splitA+0x20>
    15b4:	9f 3f       	cpi	r25, 0xFF	; 255
    15b6:	79 f0       	breq	.+30     	; 0x15d6 <__fp_splitA+0x2a>
    15b8:	87 95       	ror	r24
    15ba:	08 95       	ret
    15bc:	12 16       	cp	r1, r18
    15be:	13 06       	cpc	r1, r19
    15c0:	14 06       	cpc	r1, r20
    15c2:	55 1f       	adc	r21, r21
    15c4:	f2 cf       	rjmp	.-28     	; 0x15aa <__fp_split3+0xe>
    15c6:	46 95       	lsr	r20
    15c8:	f1 df       	rcall	.-30     	; 0x15ac <__fp_splitA>
    15ca:	08 c0       	rjmp	.+16     	; 0x15dc <__fp_splitA+0x30>
    15cc:	16 16       	cp	r1, r22
    15ce:	17 06       	cpc	r1, r23
    15d0:	18 06       	cpc	r1, r24
    15d2:	99 1f       	adc	r25, r25
    15d4:	f1 cf       	rjmp	.-30     	; 0x15b8 <__fp_splitA+0xc>
    15d6:	86 95       	lsr	r24
    15d8:	71 05       	cpc	r23, r1
    15da:	61 05       	cpc	r22, r1
    15dc:	08 94       	sec
    15de:	08 95       	ret

000015e0 <__fp_zero>:
    15e0:	e8 94       	clt

000015e2 <__fp_szero>:
    15e2:	bb 27       	eor	r27, r27
    15e4:	66 27       	eor	r22, r22
    15e6:	77 27       	eor	r23, r23
    15e8:	cb 01       	movw	r24, r22
    15ea:	97 f9       	bld	r25, 7
    15ec:	08 95       	ret

000015ee <__tablejump2__>:
    15ee:	ee 0f       	add	r30, r30
    15f0:	ff 1f       	adc	r31, r31
    15f2:	05 90       	lpm	r0, Z+
    15f4:	f4 91       	lpm	r31, Z
    15f6:	e0 2d       	mov	r30, r0
    15f8:	09 94       	ijmp

000015fa <_exit>:
    15fa:	f8 94       	cli

000015fc <__stop_program>:
    15fc:	ff cf       	rjmp	.-2      	; 0x15fc <__stop_program>
=======
     980:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <APP_vidStart>
     984:	fd cf       	rjmp	.-6      	; 0x980 <main+0x4>

00000986 <DIO_init>:
     986:	68 30       	cpi	r22, 0x08	; 8
     988:	a0 f5       	brcc	.+104    	; 0x9f2 <DIO_init+0x6c>
     98a:	81 11       	cpse	r24, r1
     98c:	0b c0       	rjmp	.+22     	; 0x9a4 <DIO_init+0x1e>
     98e:	8a b3       	in	r24, 0x1a	; 26
     990:	50 e0       	ldi	r21, 0x00	; 0
     992:	02 c0       	rjmp	.+4      	; 0x998 <DIO_init+0x12>
     994:	44 0f       	add	r20, r20
     996:	55 1f       	adc	r21, r21
     998:	6a 95       	dec	r22
     99a:	e2 f7       	brpl	.-8      	; 0x994 <DIO_init+0xe>
     99c:	48 2b       	or	r20, r24
     99e:	4a bb       	out	0x1a, r20	; 26
     9a0:	80 e0       	ldi	r24, 0x00	; 0
     9a2:	08 95       	ret
     9a4:	81 30       	cpi	r24, 0x01	; 1
     9a6:	59 f4       	brne	.+22     	; 0x9be <DIO_init+0x38>
     9a8:	87 b3       	in	r24, 0x17	; 23
     9aa:	50 e0       	ldi	r21, 0x00	; 0
     9ac:	02 c0       	rjmp	.+4      	; 0x9b2 <DIO_init+0x2c>
     9ae:	44 0f       	add	r20, r20
     9b0:	55 1f       	adc	r21, r21
     9b2:	6a 95       	dec	r22
     9b4:	e2 f7       	brpl	.-8      	; 0x9ae <DIO_init+0x28>
     9b6:	48 2b       	or	r20, r24
     9b8:	47 bb       	out	0x17, r20	; 23
     9ba:	80 e0       	ldi	r24, 0x00	; 0
     9bc:	08 95       	ret
     9be:	82 30       	cpi	r24, 0x02	; 2
     9c0:	59 f4       	brne	.+22     	; 0x9d8 <DIO_init+0x52>
     9c2:	84 b3       	in	r24, 0x14	; 20
     9c4:	50 e0       	ldi	r21, 0x00	; 0
     9c6:	02 c0       	rjmp	.+4      	; 0x9cc <DIO_init+0x46>
     9c8:	44 0f       	add	r20, r20
     9ca:	55 1f       	adc	r21, r21
     9cc:	6a 95       	dec	r22
     9ce:	e2 f7       	brpl	.-8      	; 0x9c8 <DIO_init+0x42>
     9d0:	48 2b       	or	r20, r24
     9d2:	44 bb       	out	0x14, r20	; 20
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	08 95       	ret
     9d8:	83 30       	cpi	r24, 0x03	; 3
     9da:	69 f4       	brne	.+26     	; 0x9f6 <DIO_init+0x70>
     9dc:	81 b3       	in	r24, 0x11	; 17
     9de:	50 e0       	ldi	r21, 0x00	; 0
     9e0:	02 c0       	rjmp	.+4      	; 0x9e6 <DIO_init+0x60>
     9e2:	44 0f       	add	r20, r20
     9e4:	55 1f       	adc	r21, r21
     9e6:	6a 95       	dec	r22
     9e8:	e2 f7       	brpl	.-8      	; 0x9e2 <DIO_init+0x5c>
     9ea:	48 2b       	or	r20, r24
     9ec:	41 bb       	out	0x11, r20	; 17
     9ee:	80 e0       	ldi	r24, 0x00	; 0
     9f0:	08 95       	ret
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	08 95       	ret
     9f6:	82 e0       	ldi	r24, 0x02	; 2
     9f8:	08 95       	ret

000009fa <DIO_writePIN>:
     9fa:	68 30       	cpi	r22, 0x08	; 8
     9fc:	08 f0       	brcs	.+2      	; 0xa00 <DIO_writePIN+0x6>
     9fe:	74 c0       	rjmp	.+232    	; 0xae8 <DIO_writePIN+0xee>
     a00:	81 11       	cpse	r24, r1
     a02:	1b c0       	rjmp	.+54     	; 0xa3a <DIO_writePIN+0x40>
     a04:	41 30       	cpi	r20, 0x01	; 1
     a06:	61 f4       	brne	.+24     	; 0xa20 <DIO_writePIN+0x26>
     a08:	2b b3       	in	r18, 0x1b	; 27
     a0a:	81 e0       	ldi	r24, 0x01	; 1
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	02 c0       	rjmp	.+4      	; 0xa14 <DIO_writePIN+0x1a>
     a10:	88 0f       	add	r24, r24
     a12:	99 1f       	adc	r25, r25
     a14:	6a 95       	dec	r22
     a16:	e2 f7       	brpl	.-8      	; 0xa10 <DIO_writePIN+0x16>
     a18:	82 2b       	or	r24, r18
     a1a:	8b bb       	out	0x1b, r24	; 27
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	08 95       	ret
     a20:	2b b3       	in	r18, 0x1b	; 27
     a22:	81 e0       	ldi	r24, 0x01	; 1
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	02 c0       	rjmp	.+4      	; 0xa2c <DIO_writePIN+0x32>
     a28:	88 0f       	add	r24, r24
     a2a:	99 1f       	adc	r25, r25
     a2c:	6a 95       	dec	r22
     a2e:	e2 f7       	brpl	.-8      	; 0xa28 <DIO_writePIN+0x2e>
     a30:	80 95       	com	r24
     a32:	82 23       	and	r24, r18
     a34:	8b bb       	out	0x1b, r24	; 27
     a36:	80 e0       	ldi	r24, 0x00	; 0
     a38:	08 95       	ret
     a3a:	81 30       	cpi	r24, 0x01	; 1
     a3c:	d9 f4       	brne	.+54     	; 0xa74 <DIO_writePIN+0x7a>
     a3e:	41 30       	cpi	r20, 0x01	; 1
     a40:	61 f4       	brne	.+24     	; 0xa5a <DIO_writePIN+0x60>
     a42:	28 b3       	in	r18, 0x18	; 24
     a44:	81 e0       	ldi	r24, 0x01	; 1
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	02 c0       	rjmp	.+4      	; 0xa4e <DIO_writePIN+0x54>
     a4a:	88 0f       	add	r24, r24
     a4c:	99 1f       	adc	r25, r25
     a4e:	6a 95       	dec	r22
     a50:	e2 f7       	brpl	.-8      	; 0xa4a <DIO_writePIN+0x50>
     a52:	82 2b       	or	r24, r18
     a54:	88 bb       	out	0x18, r24	; 24
     a56:	80 e0       	ldi	r24, 0x00	; 0
     a58:	08 95       	ret
     a5a:	28 b3       	in	r18, 0x18	; 24
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	02 c0       	rjmp	.+4      	; 0xa66 <DIO_writePIN+0x6c>
     a62:	88 0f       	add	r24, r24
     a64:	99 1f       	adc	r25, r25
     a66:	6a 95       	dec	r22
     a68:	e2 f7       	brpl	.-8      	; 0xa62 <DIO_writePIN+0x68>
     a6a:	80 95       	com	r24
     a6c:	82 23       	and	r24, r18
     a6e:	88 bb       	out	0x18, r24	; 24
     a70:	80 e0       	ldi	r24, 0x00	; 0
     a72:	08 95       	ret
     a74:	82 30       	cpi	r24, 0x02	; 2
     a76:	d9 f4       	brne	.+54     	; 0xaae <DIO_writePIN+0xb4>
     a78:	41 30       	cpi	r20, 0x01	; 1
     a7a:	61 f4       	brne	.+24     	; 0xa94 <DIO_writePIN+0x9a>
     a7c:	25 b3       	in	r18, 0x15	; 21
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	02 c0       	rjmp	.+4      	; 0xa88 <DIO_writePIN+0x8e>
     a84:	88 0f       	add	r24, r24
     a86:	99 1f       	adc	r25, r25
     a88:	6a 95       	dec	r22
     a8a:	e2 f7       	brpl	.-8      	; 0xa84 <DIO_writePIN+0x8a>
     a8c:	82 2b       	or	r24, r18
     a8e:	85 bb       	out	0x15, r24	; 21
     a90:	80 e0       	ldi	r24, 0x00	; 0
     a92:	08 95       	ret
     a94:	25 b3       	in	r18, 0x15	; 21
     a96:	81 e0       	ldi	r24, 0x01	; 1
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <DIO_writePIN+0xa6>
     a9c:	88 0f       	add	r24, r24
     a9e:	99 1f       	adc	r25, r25
     aa0:	6a 95       	dec	r22
     aa2:	e2 f7       	brpl	.-8      	; 0xa9c <DIO_writePIN+0xa2>
     aa4:	80 95       	com	r24
     aa6:	82 23       	and	r24, r18
     aa8:	85 bb       	out	0x15, r24	; 21
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	08 95       	ret
     aae:	83 30       	cpi	r24, 0x03	; 3
     ab0:	e9 f4       	brne	.+58     	; 0xaec <DIO_writePIN+0xf2>
     ab2:	41 30       	cpi	r20, 0x01	; 1
     ab4:	61 f4       	brne	.+24     	; 0xace <DIO_writePIN+0xd4>
     ab6:	22 b3       	in	r18, 0x12	; 18
     ab8:	81 e0       	ldi	r24, 0x01	; 1
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	02 c0       	rjmp	.+4      	; 0xac2 <DIO_writePIN+0xc8>
     abe:	88 0f       	add	r24, r24
     ac0:	99 1f       	adc	r25, r25
     ac2:	6a 95       	dec	r22
     ac4:	e2 f7       	brpl	.-8      	; 0xabe <DIO_writePIN+0xc4>
     ac6:	82 2b       	or	r24, r18
     ac8:	82 bb       	out	0x12, r24	; 18
     aca:	80 e0       	ldi	r24, 0x00	; 0
     acc:	08 95       	ret
     ace:	22 b3       	in	r18, 0x12	; 18
     ad0:	81 e0       	ldi	r24, 0x01	; 1
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	02 c0       	rjmp	.+4      	; 0xada <DIO_writePIN+0xe0>
     ad6:	88 0f       	add	r24, r24
     ad8:	99 1f       	adc	r25, r25
     ada:	6a 95       	dec	r22
     adc:	e2 f7       	brpl	.-8      	; 0xad6 <DIO_writePIN+0xdc>
     ade:	80 95       	com	r24
     ae0:	82 23       	and	r24, r18
     ae2:	82 bb       	out	0x12, r24	; 18
     ae4:	80 e0       	ldi	r24, 0x00	; 0
     ae6:	08 95       	ret
     ae8:	81 e0       	ldi	r24, 0x01	; 1
     aea:	08 95       	ret
     aec:	82 e0       	ldi	r24, 0x02	; 2
     aee:	08 95       	ret

00000af0 <DIO_readPIN>:
     af0:	68 30       	cpi	r22, 0x08	; 8
     af2:	08 f0       	brcs	.+2      	; 0xaf6 <DIO_readPIN+0x6>
     af4:	64 c0       	rjmp	.+200    	; 0xbbe <DIO_readPIN+0xce>
     af6:	81 11       	cpse	r24, r1
     af8:	17 c0       	rjmp	.+46     	; 0xb28 <DIO_readPIN+0x38>
     afa:	79 b3       	in	r23, 0x19	; 25
     afc:	81 e0       	ldi	r24, 0x01	; 1
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	9c 01       	movw	r18, r24
     b02:	06 2e       	mov	r0, r22
     b04:	02 c0       	rjmp	.+4      	; 0xb0a <DIO_readPIN+0x1a>
     b06:	22 0f       	add	r18, r18
     b08:	33 1f       	adc	r19, r19
     b0a:	0a 94       	dec	r0
     b0c:	e2 f7       	brpl	.-8      	; 0xb06 <DIO_readPIN+0x16>
     b0e:	87 2f       	mov	r24, r23
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	82 23       	and	r24, r18
     b14:	93 23       	and	r25, r19
     b16:	02 c0       	rjmp	.+4      	; 0xb1c <DIO_readPIN+0x2c>
     b18:	96 95       	lsr	r25
     b1a:	87 95       	ror	r24
     b1c:	6a 95       	dec	r22
     b1e:	e2 f7       	brpl	.-8      	; 0xb18 <DIO_readPIN+0x28>
     b20:	fa 01       	movw	r30, r20
     b22:	80 83       	st	Z, r24
     b24:	80 e0       	ldi	r24, 0x00	; 0
     b26:	08 95       	ret
     b28:	81 30       	cpi	r24, 0x01	; 1
     b2a:	b9 f4       	brne	.+46     	; 0xb5a <DIO_readPIN+0x6a>
     b2c:	76 b3       	in	r23, 0x16	; 22
     b2e:	81 e0       	ldi	r24, 0x01	; 1
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	9c 01       	movw	r18, r24
     b34:	06 2e       	mov	r0, r22
     b36:	02 c0       	rjmp	.+4      	; 0xb3c <DIO_readPIN+0x4c>
     b38:	22 0f       	add	r18, r18
     b3a:	33 1f       	adc	r19, r19
     b3c:	0a 94       	dec	r0
     b3e:	e2 f7       	brpl	.-8      	; 0xb38 <DIO_readPIN+0x48>
     b40:	87 2f       	mov	r24, r23
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	82 23       	and	r24, r18
     b46:	93 23       	and	r25, r19
     b48:	02 c0       	rjmp	.+4      	; 0xb4e <DIO_readPIN+0x5e>
     b4a:	96 95       	lsr	r25
     b4c:	87 95       	ror	r24
     b4e:	6a 95       	dec	r22
     b50:	e2 f7       	brpl	.-8      	; 0xb4a <DIO_readPIN+0x5a>
     b52:	fa 01       	movw	r30, r20
     b54:	80 83       	st	Z, r24
     b56:	80 e0       	ldi	r24, 0x00	; 0
     b58:	08 95       	ret
     b5a:	82 30       	cpi	r24, 0x02	; 2
     b5c:	b9 f4       	brne	.+46     	; 0xb8c <DIO_readPIN+0x9c>
     b5e:	73 b3       	in	r23, 0x13	; 19
     b60:	81 e0       	ldi	r24, 0x01	; 1
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	9c 01       	movw	r18, r24
     b66:	06 2e       	mov	r0, r22
     b68:	02 c0       	rjmp	.+4      	; 0xb6e <DIO_readPIN+0x7e>
     b6a:	22 0f       	add	r18, r18
     b6c:	33 1f       	adc	r19, r19
     b6e:	0a 94       	dec	r0
     b70:	e2 f7       	brpl	.-8      	; 0xb6a <DIO_readPIN+0x7a>
     b72:	87 2f       	mov	r24, r23
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	82 23       	and	r24, r18
     b78:	93 23       	and	r25, r19
     b7a:	02 c0       	rjmp	.+4      	; 0xb80 <DIO_readPIN+0x90>
     b7c:	96 95       	lsr	r25
     b7e:	87 95       	ror	r24
     b80:	6a 95       	dec	r22
     b82:	e2 f7       	brpl	.-8      	; 0xb7c <DIO_readPIN+0x8c>
     b84:	fa 01       	movw	r30, r20
     b86:	80 83       	st	Z, r24
     b88:	80 e0       	ldi	r24, 0x00	; 0
     b8a:	08 95       	ret
     b8c:	83 30       	cpi	r24, 0x03	; 3
     b8e:	c9 f4       	brne	.+50     	; 0xbc2 <DIO_readPIN+0xd2>
     b90:	70 b3       	in	r23, 0x10	; 16
     b92:	81 e0       	ldi	r24, 0x01	; 1
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	9c 01       	movw	r18, r24
     b98:	06 2e       	mov	r0, r22
     b9a:	02 c0       	rjmp	.+4      	; 0xba0 <DIO_readPIN+0xb0>
     b9c:	22 0f       	add	r18, r18
     b9e:	33 1f       	adc	r19, r19
     ba0:	0a 94       	dec	r0
     ba2:	e2 f7       	brpl	.-8      	; 0xb9c <DIO_readPIN+0xac>
     ba4:	87 2f       	mov	r24, r23
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	82 23       	and	r24, r18
     baa:	93 23       	and	r25, r19
     bac:	02 c0       	rjmp	.+4      	; 0xbb2 <DIO_readPIN+0xc2>
     bae:	96 95       	lsr	r25
     bb0:	87 95       	ror	r24
     bb2:	6a 95       	dec	r22
     bb4:	e2 f7       	brpl	.-8      	; 0xbae <DIO_readPIN+0xbe>
     bb6:	fa 01       	movw	r30, r20
     bb8:	80 83       	st	Z, r24
     bba:	80 e0       	ldi	r24, 0x00	; 0
     bbc:	08 95       	ret
     bbe:	81 e0       	ldi	r24, 0x01	; 1
     bc0:	08 95       	ret
     bc2:	82 e0       	ldi	r24, 0x02	; 2
     bc4:	08 95       	ret

00000bc6 <vidExtInt_init>:
     bc6:	83 30       	cpi	r24, 0x03	; 3
     bc8:	08 f0       	brcs	.+2      	; 0xbcc <vidExtInt_init+0x6>
     bca:	78 c0       	rjmp	.+240    	; 0xcbc <vidExtInt_init+0xf6>
     bcc:	64 30       	cpi	r22, 0x04	; 4
     bce:	08 f0       	brcs	.+2      	; 0xbd2 <vidExtInt_init+0xc>
     bd0:	77 c0       	rjmp	.+238    	; 0xcc0 <vidExtInt_init+0xfa>
     bd2:	81 11       	cpse	r24, r1
     bd4:	28 c0       	rjmp	.+80     	; 0xc26 <vidExtInt_init+0x60>
     bd6:	61 30       	cpi	r22, 0x01	; 1
     bd8:	71 f0       	breq	.+28     	; 0xbf6 <vidExtInt_init+0x30>
     bda:	28 f0       	brcs	.+10     	; 0xbe6 <vidExtInt_init+0x20>
     bdc:	62 30       	cpi	r22, 0x02	; 2
     bde:	99 f0       	breq	.+38     	; 0xc06 <vidExtInt_init+0x40>
     be0:	63 30       	cpi	r22, 0x03	; 3
     be2:	c9 f0       	breq	.+50     	; 0xc16 <vidExtInt_init+0x50>
     be4:	6f c0       	rjmp	.+222    	; 0xcc4 <vidExtInt_init+0xfe>
     be6:	85 b7       	in	r24, 0x35	; 53
     be8:	8e 7f       	andi	r24, 0xFE	; 254
     bea:	85 bf       	out	0x35, r24	; 53
     bec:	85 b7       	in	r24, 0x35	; 53
     bee:	8d 7f       	andi	r24, 0xFD	; 253
     bf0:	85 bf       	out	0x35, r24	; 53
     bf2:	81 e0       	ldi	r24, 0x01	; 1
     bf4:	08 95       	ret
     bf6:	85 b7       	in	r24, 0x35	; 53
     bf8:	81 60       	ori	r24, 0x01	; 1
     bfa:	85 bf       	out	0x35, r24	; 53
     bfc:	85 b7       	in	r24, 0x35	; 53
     bfe:	8d 7f       	andi	r24, 0xFD	; 253
     c00:	85 bf       	out	0x35, r24	; 53
     c02:	81 e0       	ldi	r24, 0x01	; 1
     c04:	08 95       	ret
     c06:	85 b7       	in	r24, 0x35	; 53
     c08:	8e 7f       	andi	r24, 0xFE	; 254
     c0a:	85 bf       	out	0x35, r24	; 53
     c0c:	85 b7       	in	r24, 0x35	; 53
     c0e:	82 60       	ori	r24, 0x02	; 2
     c10:	85 bf       	out	0x35, r24	; 53
     c12:	81 e0       	ldi	r24, 0x01	; 1
     c14:	08 95       	ret
     c16:	85 b7       	in	r24, 0x35	; 53
     c18:	81 60       	ori	r24, 0x01	; 1
     c1a:	85 bf       	out	0x35, r24	; 53
     c1c:	85 b7       	in	r24, 0x35	; 53
     c1e:	82 60       	ori	r24, 0x02	; 2
     c20:	85 bf       	out	0x35, r24	; 53
     c22:	81 e0       	ldi	r24, 0x01	; 1
     c24:	08 95       	ret
     c26:	81 30       	cpi	r24, 0x01	; 1
     c28:	81 f5       	brne	.+96     	; 0xc8a <vidExtInt_init+0xc4>
     c2a:	61 30       	cpi	r22, 0x01	; 1
     c2c:	71 f0       	breq	.+28     	; 0xc4a <vidExtInt_init+0x84>
     c2e:	28 f0       	brcs	.+10     	; 0xc3a <vidExtInt_init+0x74>
     c30:	62 30       	cpi	r22, 0x02	; 2
     c32:	99 f0       	breq	.+38     	; 0xc5a <vidExtInt_init+0x94>
     c34:	63 30       	cpi	r22, 0x03	; 3
     c36:	c9 f0       	breq	.+50     	; 0xc6a <vidExtInt_init+0xa4>
     c38:	20 c0       	rjmp	.+64     	; 0xc7a <vidExtInt_init+0xb4>
     c3a:	85 b7       	in	r24, 0x35	; 53
     c3c:	8b 7f       	andi	r24, 0xFB	; 251
     c3e:	85 bf       	out	0x35, r24	; 53
     c40:	85 b7       	in	r24, 0x35	; 53
     c42:	87 7f       	andi	r24, 0xF7	; 247
     c44:	85 bf       	out	0x35, r24	; 53
     c46:	81 e0       	ldi	r24, 0x01	; 1
     c48:	19 c0       	rjmp	.+50     	; 0xc7c <vidExtInt_init+0xb6>
     c4a:	85 b7       	in	r24, 0x35	; 53
     c4c:	84 60       	ori	r24, 0x04	; 4
     c4e:	85 bf       	out	0x35, r24	; 53
     c50:	85 b7       	in	r24, 0x35	; 53
     c52:	87 7f       	andi	r24, 0xF7	; 247
     c54:	85 bf       	out	0x35, r24	; 53
     c56:	81 e0       	ldi	r24, 0x01	; 1
     c58:	11 c0       	rjmp	.+34     	; 0xc7c <vidExtInt_init+0xb6>
     c5a:	85 b7       	in	r24, 0x35	; 53
     c5c:	8b 7f       	andi	r24, 0xFB	; 251
     c5e:	85 bf       	out	0x35, r24	; 53
     c60:	85 b7       	in	r24, 0x35	; 53
     c62:	88 60       	ori	r24, 0x08	; 8
     c64:	85 bf       	out	0x35, r24	; 53
     c66:	81 e0       	ldi	r24, 0x01	; 1
     c68:	09 c0       	rjmp	.+18     	; 0xc7c <vidExtInt_init+0xb6>
     c6a:	85 b7       	in	r24, 0x35	; 53
     c6c:	84 60       	ori	r24, 0x04	; 4
     c6e:	85 bf       	out	0x35, r24	; 53
     c70:	85 b7       	in	r24, 0x35	; 53
     c72:	88 60       	ori	r24, 0x08	; 8
     c74:	85 bf       	out	0x35, r24	; 53
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	01 c0       	rjmp	.+2      	; 0xc7c <vidExtInt_init+0xb6>
     c7a:	80 e0       	ldi	r24, 0x00	; 0
     c7c:	9b b7       	in	r25, 0x3b	; 59
     c7e:	90 68       	ori	r25, 0x80	; 128
     c80:	9b bf       	out	0x3b, r25	; 59
     c82:	9a b7       	in	r25, 0x3a	; 58
     c84:	90 68       	ori	r25, 0x80	; 128
     c86:	9a bf       	out	0x3a, r25	; 58
     c88:	08 95       	ret
     c8a:	82 30       	cpi	r24, 0x02	; 2
     c8c:	e9 f4       	brne	.+58     	; 0xcc8 <vidExtInt_init+0x102>
     c8e:	62 30       	cpi	r22, 0x02	; 2
     c90:	19 f0       	breq	.+6      	; 0xc98 <vidExtInt_init+0xd2>
     c92:	63 30       	cpi	r22, 0x03	; 3
     c94:	31 f0       	breq	.+12     	; 0xca2 <vidExtInt_init+0xdc>
     c96:	0a c0       	rjmp	.+20     	; 0xcac <vidExtInt_init+0xe6>
     c98:	84 b7       	in	r24, 0x34	; 52
     c9a:	8f 7b       	andi	r24, 0xBF	; 191
     c9c:	84 bf       	out	0x34, r24	; 52
     c9e:	81 e0       	ldi	r24, 0x01	; 1
     ca0:	06 c0       	rjmp	.+12     	; 0xcae <vidExtInt_init+0xe8>
     ca2:	84 b7       	in	r24, 0x34	; 52
     ca4:	80 64       	ori	r24, 0x40	; 64
     ca6:	84 bf       	out	0x34, r24	; 52
     ca8:	81 e0       	ldi	r24, 0x01	; 1
     caa:	01 c0       	rjmp	.+2      	; 0xcae <vidExtInt_init+0xe8>
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	9b b7       	in	r25, 0x3b	; 59
     cb0:	90 62       	ori	r25, 0x20	; 32
     cb2:	9b bf       	out	0x3b, r25	; 59
     cb4:	9a b7       	in	r25, 0x3a	; 58
     cb6:	90 62       	ori	r25, 0x20	; 32
     cb8:	9a bf       	out	0x3a, r25	; 58
     cba:	08 95       	ret
     cbc:	80 e0       	ldi	r24, 0x00	; 0
     cbe:	08 95       	ret
     cc0:	80 e0       	ldi	r24, 0x00	; 0
     cc2:	08 95       	ret
     cc4:	80 e0       	ldi	r24, 0x00	; 0
     cc6:	08 95       	ret
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	08 95       	ret

00000ccc <MEXTINT_vidCallBackFuncInt0>:
     ccc:	90 93 d8 00 	sts	0x00D8, r25	; 0x8000d8 <callBackFuncInt0+0x1>
     cd0:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <callBackFuncInt0>
     cd4:	08 95       	ret

00000cd6 <MEXTINT_vidCallBackFunc>:
     cd6:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <callBack+0x1>
     cda:	80 93 d5 00 	sts	0x00D5, r24	; 0x8000d5 <callBack>
     cde:	08 95       	ret

00000ce0 <MEXTINT_vidDisableInterrupt>:
     ce0:	8b b7       	in	r24, 0x3b	; 59
     ce2:	8f 7b       	andi	r24, 0xBF	; 191
     ce4:	8b bf       	out	0x3b, r24	; 59
     ce6:	08 95       	ret

00000ce8 <MEXTINT_vidEnableInterrupt>:
     ce8:	8a b7       	in	r24, 0x3a	; 58
     cea:	80 64       	ori	r24, 0x40	; 64
     cec:	8a bf       	out	0x3a, r24	; 58
     cee:	8b b7       	in	r24, 0x3b	; 59
     cf0:	80 64       	ori	r24, 0x40	; 64
     cf2:	8b bf       	out	0x3b, r24	; 59
     cf4:	08 95       	ret

00000cf6 <__vector_1>:
     cf6:	1f 92       	push	r1
     cf8:	0f 92       	push	r0
     cfa:	0f b6       	in	r0, 0x3f	; 63
     cfc:	0f 92       	push	r0
     cfe:	11 24       	eor	r1, r1
     d00:	2f 93       	push	r18
     d02:	3f 93       	push	r19
     d04:	4f 93       	push	r20
     d06:	5f 93       	push	r21
     d08:	6f 93       	push	r22
     d0a:	7f 93       	push	r23
     d0c:	8f 93       	push	r24
     d0e:	9f 93       	push	r25
     d10:	af 93       	push	r26
     d12:	bf 93       	push	r27
     d14:	ef 93       	push	r30
     d16:	ff 93       	push	r31
     d18:	e0 91 d7 00 	lds	r30, 0x00D7	; 0x8000d7 <callBackFuncInt0>
     d1c:	f0 91 d8 00 	lds	r31, 0x00D8	; 0x8000d8 <callBackFuncInt0+0x1>
     d20:	09 95       	icall
     d22:	ff 91       	pop	r31
     d24:	ef 91       	pop	r30
     d26:	bf 91       	pop	r27
     d28:	af 91       	pop	r26
     d2a:	9f 91       	pop	r25
     d2c:	8f 91       	pop	r24
     d2e:	7f 91       	pop	r23
     d30:	6f 91       	pop	r22
     d32:	5f 91       	pop	r21
     d34:	4f 91       	pop	r20
     d36:	3f 91       	pop	r19
     d38:	2f 91       	pop	r18
     d3a:	0f 90       	pop	r0
     d3c:	0f be       	out	0x3f, r0	; 63
     d3e:	0f 90       	pop	r0
     d40:	1f 90       	pop	r1
     d42:	18 95       	reti

00000d44 <__vector_2>:
     d44:	1f 92       	push	r1
     d46:	0f 92       	push	r0
     d48:	0f b6       	in	r0, 0x3f	; 63
     d4a:	0f 92       	push	r0
     d4c:	11 24       	eor	r1, r1
     d4e:	2f 93       	push	r18
     d50:	3f 93       	push	r19
     d52:	4f 93       	push	r20
     d54:	5f 93       	push	r21
     d56:	6f 93       	push	r22
     d58:	7f 93       	push	r23
     d5a:	8f 93       	push	r24
     d5c:	9f 93       	push	r25
     d5e:	af 93       	push	r26
     d60:	bf 93       	push	r27
     d62:	ef 93       	push	r30
     d64:	ff 93       	push	r31
     d66:	e0 91 d3 00 	lds	r30, 0x00D3	; 0x8000d3 <callBackFunc>
     d6a:	f0 91 d4 00 	lds	r31, 0x00D4	; 0x8000d4 <callBackFunc+0x1>
     d6e:	09 95       	icall
     d70:	ff 91       	pop	r31
     d72:	ef 91       	pop	r30
     d74:	bf 91       	pop	r27
     d76:	af 91       	pop	r26
     d78:	9f 91       	pop	r25
     d7a:	8f 91       	pop	r24
     d7c:	7f 91       	pop	r23
     d7e:	6f 91       	pop	r22
     d80:	5f 91       	pop	r21
     d82:	4f 91       	pop	r20
     d84:	3f 91       	pop	r19
     d86:	2f 91       	pop	r18
     d88:	0f 90       	pop	r0
     d8a:	0f be       	out	0x3f, r0	; 63
     d8c:	0f 90       	pop	r0
     d8e:	1f 90       	pop	r1
     d90:	18 95       	reti

00000d92 <__vector_3>:
     d92:	1f 92       	push	r1
     d94:	0f 92       	push	r0
     d96:	0f b6       	in	r0, 0x3f	; 63
     d98:	0f 92       	push	r0
     d9a:	11 24       	eor	r1, r1
     d9c:	2f 93       	push	r18
     d9e:	3f 93       	push	r19
     da0:	4f 93       	push	r20
     da2:	5f 93       	push	r21
     da4:	6f 93       	push	r22
     da6:	7f 93       	push	r23
     da8:	8f 93       	push	r24
     daa:	9f 93       	push	r25
     dac:	af 93       	push	r26
     dae:	bf 93       	push	r27
     db0:	ef 93       	push	r30
     db2:	ff 93       	push	r31
     db4:	e0 91 d5 00 	lds	r30, 0x00D5	; 0x8000d5 <callBack>
     db8:	f0 91 d6 00 	lds	r31, 0x00D6	; 0x8000d6 <callBack+0x1>
     dbc:	09 95       	icall
     dbe:	ff 91       	pop	r31
     dc0:	ef 91       	pop	r30
     dc2:	bf 91       	pop	r27
     dc4:	af 91       	pop	r26
     dc6:	9f 91       	pop	r25
     dc8:	8f 91       	pop	r24
     dca:	7f 91       	pop	r23
     dcc:	6f 91       	pop	r22
     dce:	5f 91       	pop	r21
     dd0:	4f 91       	pop	r20
     dd2:	3f 91       	pop	r19
     dd4:	2f 91       	pop	r18
     dd6:	0f 90       	pop	r0
     dd8:	0f be       	out	0x3f, r0	; 63
     dda:	0f 90       	pop	r0
     ddc:	1f 90       	pop	r1
     dde:	18 95       	reti

00000de0 <__vector_11>:
     de0:	1f 92       	push	r1
     de2:	0f 92       	push	r0
     de4:	0f b6       	in	r0, 0x3f	; 63
     de6:	0f 92       	push	r0
     de8:	11 24       	eor	r1, r1
     dea:	2f 93       	push	r18
     dec:	3f 93       	push	r19
     dee:	4f 93       	push	r20
     df0:	5f 93       	push	r21
     df2:	6f 93       	push	r22
     df4:	7f 93       	push	r23
     df6:	8f 93       	push	r24
     df8:	9f 93       	push	r25
     dfa:	af 93       	push	r26
     dfc:	bf 93       	push	r27
     dfe:	ef 93       	push	r30
     e00:	ff 93       	push	r31
     e02:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <sg_Timer0_callBackPtr>
     e06:	90 91 e1 00 	lds	r25, 0x00E1	; 0x8000e1 <sg_Timer0_callBackPtr+0x1>
     e0a:	89 2b       	or	r24, r25
     e0c:	41 f0       	breq	.+16     	; 0xe1e <__vector_11+0x3e>
     e0e:	88 b7       	in	r24, 0x38	; 56
     e10:	8e 7f       	andi	r24, 0xFE	; 254
     e12:	88 bf       	out	0x38, r24	; 56
     e14:	e0 91 e0 00 	lds	r30, 0x00E0	; 0x8000e0 <sg_Timer0_callBackPtr>
     e18:	f0 91 e1 00 	lds	r31, 0x00E1	; 0x8000e1 <sg_Timer0_callBackPtr+0x1>
     e1c:	09 95       	icall
     e1e:	ff 91       	pop	r31
     e20:	ef 91       	pop	r30
     e22:	bf 91       	pop	r27
     e24:	af 91       	pop	r26
     e26:	9f 91       	pop	r25
     e28:	8f 91       	pop	r24
     e2a:	7f 91       	pop	r23
     e2c:	6f 91       	pop	r22
     e2e:	5f 91       	pop	r21
     e30:	4f 91       	pop	r20
     e32:	3f 91       	pop	r19
     e34:	2f 91       	pop	r18
     e36:	0f 90       	pop	r0
     e38:	0f be       	out	0x3f, r0	; 63
     e3a:	0f 90       	pop	r0
     e3c:	1f 90       	pop	r1
     e3e:	18 95       	reti

00000e40 <__vector_9>:
     e40:	1f 92       	push	r1
     e42:	0f 92       	push	r0
     e44:	0f b6       	in	r0, 0x3f	; 63
     e46:	0f 92       	push	r0
     e48:	11 24       	eor	r1, r1
     e4a:	2f 93       	push	r18
     e4c:	3f 93       	push	r19
     e4e:	4f 93       	push	r20
     e50:	5f 93       	push	r21
     e52:	6f 93       	push	r22
     e54:	7f 93       	push	r23
     e56:	8f 93       	push	r24
     e58:	9f 93       	push	r25
     e5a:	af 93       	push	r26
     e5c:	bf 93       	push	r27
     e5e:	ef 93       	push	r30
     e60:	ff 93       	push	r31
     e62:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <sg_Timer1_callBackPtr>
     e66:	90 91 df 00 	lds	r25, 0x00DF	; 0x8000df <sg_Timer1_callBackPtr+0x1>
     e6a:	89 2b       	or	r24, r25
     e6c:	41 f0       	breq	.+16     	; 0xe7e <__vector_9+0x3e>
     e6e:	88 b7       	in	r24, 0x38	; 56
     e70:	8b 7f       	andi	r24, 0xFB	; 251
     e72:	88 bf       	out	0x38, r24	; 56
     e74:	e0 91 de 00 	lds	r30, 0x00DE	; 0x8000de <sg_Timer1_callBackPtr>
     e78:	f0 91 df 00 	lds	r31, 0x00DF	; 0x8000df <sg_Timer1_callBackPtr+0x1>
     e7c:	09 95       	icall
     e7e:	ff 91       	pop	r31
     e80:	ef 91       	pop	r30
     e82:	bf 91       	pop	r27
     e84:	af 91       	pop	r26
     e86:	9f 91       	pop	r25
     e88:	8f 91       	pop	r24
     e8a:	7f 91       	pop	r23
     e8c:	6f 91       	pop	r22
     e8e:	5f 91       	pop	r21
     e90:	4f 91       	pop	r20
     e92:	3f 91       	pop	r19
     e94:	2f 91       	pop	r18
     e96:	0f 90       	pop	r0
     e98:	0f be       	out	0x3f, r0	; 63
     e9a:	0f 90       	pop	r0
     e9c:	1f 90       	pop	r1
     e9e:	18 95       	reti

00000ea0 <TIMER_init>:
     ea0:	00 97       	sbiw	r24, 0x00	; 0
     ea2:	09 f4       	brne	.+2      	; 0xea6 <TIMER_init+0x6>
     ea4:	78 c0       	rjmp	.+240    	; 0xf96 <TIMER_init+0xf6>
     ea6:	fc 01       	movw	r30, r24
     ea8:	20 81       	ld	r18, Z
     eaa:	23 30       	cpi	r18, 0x03	; 3
     eac:	08 f0       	brcs	.+2      	; 0xeb0 <TIMER_init+0x10>
     eae:	75 c0       	rjmp	.+234    	; 0xf9a <TIMER_init+0xfa>
     eb0:	31 81       	ldd	r19, Z+1	; 0x01
     eb2:	3a 30       	cpi	r19, 0x0A	; 10
     eb4:	08 f0       	brcs	.+2      	; 0xeb8 <TIMER_init+0x18>
     eb6:	73 c0       	rjmp	.+230    	; 0xf9e <TIMER_init+0xfe>
     eb8:	21 30       	cpi	r18, 0x01	; 1
     eba:	19 f1       	breq	.+70     	; 0xf02 <TIMER_init+0x62>
     ebc:	20 f0       	brcs	.+8      	; 0xec6 <TIMER_init+0x26>
     ebe:	22 30       	cpi	r18, 0x02	; 2
     ec0:	09 f4       	brne	.+2      	; 0xec4 <TIMER_init+0x24>
     ec2:	50 c0       	rjmp	.+160    	; 0xf64 <TIMER_init+0xc4>
     ec4:	6e c0       	rjmp	.+220    	; 0xfa2 <TIMER_init+0x102>
     ec6:	12 be       	out	0x32, r1	; 50
     ec8:	13 be       	out	0x33, r1	; 51
     eca:	1c be       	out	0x3c, r1	; 60
     ecc:	fc 01       	movw	r30, r24
     ece:	22 81       	ldd	r18, Z+2	; 0x02
     ed0:	22 bf       	out	0x32, r18	; 50
     ed2:	23 b7       	in	r18, 0x33	; 51
     ed4:	20 68       	ori	r18, 0x80	; 128
     ed6:	23 bf       	out	0x33, r18	; 51
     ed8:	23 b7       	in	r18, 0x33	; 51
     eda:	2f 7b       	andi	r18, 0xBF	; 191
     edc:	23 bf       	out	0x33, r18	; 51
     ede:	23 b7       	in	r18, 0x33	; 51
     ee0:	27 7f       	andi	r18, 0xF7	; 247
     ee2:	23 bf       	out	0x33, r18	; 51
     ee4:	23 b7       	in	r18, 0x33	; 51
     ee6:	2f 7e       	andi	r18, 0xEF	; 239
     ee8:	23 bf       	out	0x33, r18	; 51
     eea:	23 b7       	in	r18, 0x33	; 51
     eec:	2f 7d       	andi	r18, 0xDF	; 223
     eee:	23 bf       	out	0x33, r18	; 51
     ef0:	84 81       	ldd	r24, Z+4	; 0x04
     ef2:	81 30       	cpi	r24, 0x01	; 1
     ef4:	09 f0       	breq	.+2      	; 0xef8 <TIMER_init+0x58>
     ef6:	57 c0       	rjmp	.+174    	; 0xfa6 <TIMER_init+0x106>
     ef8:	89 b7       	in	r24, 0x39	; 57
     efa:	81 60       	ori	r24, 0x01	; 1
     efc:	89 bf       	out	0x39, r24	; 57
     efe:	80 e0       	ldi	r24, 0x00	; 0
     f00:	08 95       	ret
     f02:	1c bc       	out	0x2c, r1	; 44
     f04:	1d bc       	out	0x2d, r1	; 45
     f06:	1f bc       	out	0x2f, r1	; 47
     f08:	1e bc       	out	0x2e, r1	; 46
     f0a:	1b bc       	out	0x2b, r1	; 43
     f0c:	1a bc       	out	0x2a, r1	; 42
     f0e:	fc 01       	movw	r30, r24
     f10:	22 81       	ldd	r18, Z+2	; 0x02
     f12:	33 81       	ldd	r19, Z+3	; 0x03
     f14:	3d bd       	out	0x2d, r19	; 45
     f16:	2c bd       	out	0x2c, r18	; 44
     f18:	2f b5       	in	r18, 0x2f	; 47
     f1a:	28 60       	ori	r18, 0x08	; 8
     f1c:	2f bd       	out	0x2f, r18	; 47
     f1e:	2f b5       	in	r18, 0x2f	; 47
     f20:	24 60       	ori	r18, 0x04	; 4
     f22:	2f bd       	out	0x2f, r18	; 47
     f24:	2f b5       	in	r18, 0x2f	; 47
     f26:	2e 7f       	andi	r18, 0xFE	; 254
     f28:	2f bd       	out	0x2f, r18	; 47
     f2a:	2f b5       	in	r18, 0x2f	; 47
     f2c:	2d 7f       	andi	r18, 0xFD	; 253
     f2e:	2f bd       	out	0x2f, r18	; 47
     f30:	2e b5       	in	r18, 0x2e	; 46
     f32:	2f 7e       	andi	r18, 0xEF	; 239
     f34:	2e bd       	out	0x2e, r18	; 46
     f36:	2e b5       	in	r18, 0x2e	; 46
     f38:	27 7f       	andi	r18, 0xF7	; 247
     f3a:	2e bd       	out	0x2e, r18	; 46
     f3c:	2f b5       	in	r18, 0x2f	; 47
     f3e:	2f 7b       	andi	r18, 0xBF	; 191
     f40:	2f bd       	out	0x2f, r18	; 47
     f42:	2f b5       	in	r18, 0x2f	; 47
     f44:	2f 77       	andi	r18, 0x7F	; 127
     f46:	2f bd       	out	0x2f, r18	; 47
     f48:	2f b5       	in	r18, 0x2f	; 47
     f4a:	2f 7e       	andi	r18, 0xEF	; 239
     f4c:	2f bd       	out	0x2f, r18	; 47
     f4e:	2f b5       	in	r18, 0x2f	; 47
     f50:	2f 7d       	andi	r18, 0xDF	; 223
     f52:	2f bd       	out	0x2f, r18	; 47
     f54:	84 81       	ldd	r24, Z+4	; 0x04
     f56:	81 30       	cpi	r24, 0x01	; 1
     f58:	41 f5       	brne	.+80     	; 0xfaa <TIMER_init+0x10a>
     f5a:	89 b7       	in	r24, 0x39	; 57
     f5c:	84 60       	ori	r24, 0x04	; 4
     f5e:	89 bf       	out	0x39, r24	; 57
     f60:	80 e0       	ldi	r24, 0x00	; 0
     f62:	08 95       	ret
     f64:	14 bc       	out	0x24, r1	; 36
     f66:	15 bc       	out	0x25, r1	; 37
     f68:	13 bc       	out	0x23, r1	; 35
     f6a:	14 bc       	out	0x24, r1	; 36
     f6c:	25 b5       	in	r18, 0x25	; 37
     f6e:	2f 7b       	andi	r18, 0xBF	; 191
     f70:	25 bd       	out	0x25, r18	; 37
     f72:	25 b5       	in	r18, 0x25	; 37
     f74:	27 7f       	andi	r18, 0xF7	; 247
     f76:	25 bd       	out	0x25, r18	; 37
     f78:	25 b5       	in	r18, 0x25	; 37
     f7a:	2f 7e       	andi	r18, 0xEF	; 239
     f7c:	25 bd       	out	0x25, r18	; 37
     f7e:	25 b5       	in	r18, 0x25	; 37
     f80:	2f 7d       	andi	r18, 0xDF	; 223
     f82:	25 bd       	out	0x25, r18	; 37
     f84:	fc 01       	movw	r30, r24
     f86:	84 81       	ldd	r24, Z+4	; 0x04
     f88:	81 30       	cpi	r24, 0x01	; 1
     f8a:	89 f4       	brne	.+34     	; 0xfae <TIMER_init+0x10e>
     f8c:	89 b7       	in	r24, 0x39	; 57
     f8e:	80 64       	ori	r24, 0x40	; 64
     f90:	89 bf       	out	0x39, r24	; 57
     f92:	80 e0       	ldi	r24, 0x00	; 0
     f94:	08 95       	ret
     f96:	83 e0       	ldi	r24, 0x03	; 3
     f98:	08 95       	ret
     f9a:	83 e0       	ldi	r24, 0x03	; 3
     f9c:	08 95       	ret
     f9e:	83 e0       	ldi	r24, 0x03	; 3
     fa0:	08 95       	ret
     fa2:	83 e0       	ldi	r24, 0x03	; 3
     fa4:	08 95       	ret
     fa6:	80 e0       	ldi	r24, 0x00	; 0
     fa8:	08 95       	ret
     faa:	80 e0       	ldi	r24, 0x00	; 0
     fac:	08 95       	ret
     fae:	80 e0       	ldi	r24, 0x00	; 0
     fb0:	08 95       	ret

00000fb2 <TIMER_start>:
     fb2:	00 97       	sbiw	r24, 0x00	; 0
     fb4:	09 f4       	brne	.+2      	; 0xfb8 <TIMER_start+0x6>
     fb6:	3b c1       	rjmp	.+630    	; 0x122e <TIMER_start+0x27c>
     fb8:	dc 01       	movw	r26, r24
     fba:	2c 91       	ld	r18, X
     fbc:	23 30       	cpi	r18, 0x03	; 3
     fbe:	08 f0       	brcs	.+2      	; 0xfc2 <TIMER_start+0x10>
     fc0:	38 c1       	rjmp	.+624    	; 0x1232 <TIMER_start+0x280>
     fc2:	11 96       	adiw	r26, 0x01	; 1
     fc4:	ec 91       	ld	r30, X
     fc6:	ea 30       	cpi	r30, 0x0A	; 10
     fc8:	08 f0       	brcs	.+2      	; 0xfcc <TIMER_start+0x1a>
     fca:	35 c1       	rjmp	.+618    	; 0x1236 <TIMER_start+0x284>
     fcc:	21 30       	cpi	r18, 0x01	; 1
     fce:	09 f4       	brne	.+2      	; 0xfd2 <TIMER_start+0x20>
     fd0:	68 c0       	rjmp	.+208    	; 0x10a2 <TIMER_start+0xf0>
     fd2:	20 f0       	brcs	.+8      	; 0xfdc <TIMER_start+0x2a>
     fd4:	22 30       	cpi	r18, 0x02	; 2
     fd6:	09 f4       	brne	.+2      	; 0xfda <TIMER_start+0x28>
     fd8:	c7 c0       	rjmp	.+398    	; 0x1168 <TIMER_start+0x1b6>
     fda:	2f c1       	rjmp	.+606    	; 0x123a <TIMER_start+0x288>
     fdc:	8e 2f       	mov	r24, r30
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	8a 30       	cpi	r24, 0x0A	; 10
     fe2:	91 05       	cpc	r25, r1
     fe4:	08 f0       	brcs	.+2      	; 0xfe8 <TIMER_start+0x36>
     fe6:	2b c1       	rjmp	.+598    	; 0x123e <TIMER_start+0x28c>
     fe8:	fc 01       	movw	r30, r24
     fea:	e6 5d       	subi	r30, 0xD6	; 214
     fec:	ff 4f       	sbci	r31, 0xFF	; 255
     fee:	0c 94 a3 0b 	jmp	0x1746	; 0x1746 <__tablejump2__>
     ff2:	83 b7       	in	r24, 0x33	; 51
     ff4:	8e 7f       	andi	r24, 0xFE	; 254
     ff6:	83 bf       	out	0x33, r24	; 51
     ff8:	83 b7       	in	r24, 0x33	; 51
     ffa:	8d 7f       	andi	r24, 0xFD	; 253
     ffc:	83 bf       	out	0x33, r24	; 51
     ffe:	83 b7       	in	r24, 0x33	; 51
    1000:	8b 7f       	andi	r24, 0xFB	; 251
    1002:	83 bf       	out	0x33, r24	; 51
    1004:	80 e0       	ldi	r24, 0x00	; 0
    1006:	08 95       	ret
    1008:	83 b7       	in	r24, 0x33	; 51
    100a:	81 60       	ori	r24, 0x01	; 1
    100c:	83 bf       	out	0x33, r24	; 51
    100e:	83 b7       	in	r24, 0x33	; 51
    1010:	8d 7f       	andi	r24, 0xFD	; 253
    1012:	83 bf       	out	0x33, r24	; 51
    1014:	83 b7       	in	r24, 0x33	; 51
    1016:	8b 7f       	andi	r24, 0xFB	; 251
    1018:	83 bf       	out	0x33, r24	; 51
    101a:	80 e0       	ldi	r24, 0x00	; 0
    101c:	08 95       	ret
    101e:	83 b7       	in	r24, 0x33	; 51
    1020:	8e 7f       	andi	r24, 0xFE	; 254
    1022:	83 bf       	out	0x33, r24	; 51
    1024:	83 b7       	in	r24, 0x33	; 51
    1026:	82 60       	ori	r24, 0x02	; 2
    1028:	83 bf       	out	0x33, r24	; 51
    102a:	83 b7       	in	r24, 0x33	; 51
    102c:	8b 7f       	andi	r24, 0xFB	; 251
    102e:	83 bf       	out	0x33, r24	; 51
    1030:	80 e0       	ldi	r24, 0x00	; 0
    1032:	08 95       	ret
    1034:	83 b7       	in	r24, 0x33	; 51
    1036:	81 60       	ori	r24, 0x01	; 1
    1038:	83 bf       	out	0x33, r24	; 51
    103a:	83 b7       	in	r24, 0x33	; 51
    103c:	82 60       	ori	r24, 0x02	; 2
    103e:	83 bf       	out	0x33, r24	; 51
    1040:	83 b7       	in	r24, 0x33	; 51
    1042:	8b 7f       	andi	r24, 0xFB	; 251
    1044:	83 bf       	out	0x33, r24	; 51
    1046:	80 e0       	ldi	r24, 0x00	; 0
    1048:	08 95       	ret
    104a:	83 b7       	in	r24, 0x33	; 51
    104c:	8e 7f       	andi	r24, 0xFE	; 254
    104e:	83 bf       	out	0x33, r24	; 51
    1050:	83 b7       	in	r24, 0x33	; 51
    1052:	8d 7f       	andi	r24, 0xFD	; 253
    1054:	83 bf       	out	0x33, r24	; 51
    1056:	83 b7       	in	r24, 0x33	; 51
    1058:	84 60       	ori	r24, 0x04	; 4
    105a:	83 bf       	out	0x33, r24	; 51
    105c:	80 e0       	ldi	r24, 0x00	; 0
    105e:	08 95       	ret
    1060:	83 b7       	in	r24, 0x33	; 51
    1062:	81 60       	ori	r24, 0x01	; 1
    1064:	83 bf       	out	0x33, r24	; 51
    1066:	83 b7       	in	r24, 0x33	; 51
    1068:	8d 7f       	andi	r24, 0xFD	; 253
    106a:	83 bf       	out	0x33, r24	; 51
    106c:	83 b7       	in	r24, 0x33	; 51
    106e:	84 60       	ori	r24, 0x04	; 4
    1070:	83 bf       	out	0x33, r24	; 51
    1072:	80 e0       	ldi	r24, 0x00	; 0
    1074:	08 95       	ret
    1076:	83 b7       	in	r24, 0x33	; 51
    1078:	8e 7f       	andi	r24, 0xFE	; 254
    107a:	83 bf       	out	0x33, r24	; 51
    107c:	83 b7       	in	r24, 0x33	; 51
    107e:	82 60       	ori	r24, 0x02	; 2
    1080:	83 bf       	out	0x33, r24	; 51
    1082:	83 b7       	in	r24, 0x33	; 51
    1084:	84 60       	ori	r24, 0x04	; 4
    1086:	83 bf       	out	0x33, r24	; 51
    1088:	80 e0       	ldi	r24, 0x00	; 0
    108a:	08 95       	ret
    108c:	83 b7       	in	r24, 0x33	; 51
    108e:	81 60       	ori	r24, 0x01	; 1
    1090:	83 bf       	out	0x33, r24	; 51
    1092:	83 b7       	in	r24, 0x33	; 51
    1094:	82 60       	ori	r24, 0x02	; 2
    1096:	83 bf       	out	0x33, r24	; 51
    1098:	83 b7       	in	r24, 0x33	; 51
    109a:	84 60       	ori	r24, 0x04	; 4
    109c:	83 bf       	out	0x33, r24	; 51
    109e:	80 e0       	ldi	r24, 0x00	; 0
    10a0:	08 95       	ret
    10a2:	8e 2f       	mov	r24, r30
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	8a 30       	cpi	r24, 0x0A	; 10
    10a8:	91 05       	cpc	r25, r1
    10aa:	08 f0       	brcs	.+2      	; 0x10ae <TIMER_start+0xfc>
    10ac:	ca c0       	rjmp	.+404    	; 0x1242 <TIMER_start+0x290>
    10ae:	fc 01       	movw	r30, r24
    10b0:	ec 5c       	subi	r30, 0xCC	; 204
    10b2:	ff 4f       	sbci	r31, 0xFF	; 255
    10b4:	0c 94 a3 0b 	jmp	0x1746	; 0x1746 <__tablejump2__>
    10b8:	8e b5       	in	r24, 0x2e	; 46
    10ba:	8e 7f       	andi	r24, 0xFE	; 254
    10bc:	8e bd       	out	0x2e, r24	; 46
    10be:	8e b5       	in	r24, 0x2e	; 46
    10c0:	8d 7f       	andi	r24, 0xFD	; 253
    10c2:	8e bd       	out	0x2e, r24	; 46
    10c4:	8e b5       	in	r24, 0x2e	; 46
    10c6:	8b 7f       	andi	r24, 0xFB	; 251
    10c8:	8e bd       	out	0x2e, r24	; 46
    10ca:	80 e0       	ldi	r24, 0x00	; 0
    10cc:	08 95       	ret
    10ce:	8e b5       	in	r24, 0x2e	; 46
    10d0:	81 60       	ori	r24, 0x01	; 1
    10d2:	8e bd       	out	0x2e, r24	; 46
    10d4:	8e b5       	in	r24, 0x2e	; 46
    10d6:	8d 7f       	andi	r24, 0xFD	; 253
    10d8:	8e bd       	out	0x2e, r24	; 46
    10da:	8e b5       	in	r24, 0x2e	; 46
    10dc:	8b 7f       	andi	r24, 0xFB	; 251
    10de:	8e bd       	out	0x2e, r24	; 46
    10e0:	80 e0       	ldi	r24, 0x00	; 0
    10e2:	08 95       	ret
    10e4:	8e b5       	in	r24, 0x2e	; 46
    10e6:	8e 7f       	andi	r24, 0xFE	; 254
    10e8:	8e bd       	out	0x2e, r24	; 46
    10ea:	8e b5       	in	r24, 0x2e	; 46
    10ec:	82 60       	ori	r24, 0x02	; 2
    10ee:	8e bd       	out	0x2e, r24	; 46
    10f0:	8e b5       	in	r24, 0x2e	; 46
    10f2:	8b 7f       	andi	r24, 0xFB	; 251
    10f4:	8e bd       	out	0x2e, r24	; 46
    10f6:	80 e0       	ldi	r24, 0x00	; 0
    10f8:	08 95       	ret
    10fa:	8e b5       	in	r24, 0x2e	; 46
    10fc:	81 60       	ori	r24, 0x01	; 1
    10fe:	8e bd       	out	0x2e, r24	; 46
    1100:	8e b5       	in	r24, 0x2e	; 46
    1102:	82 60       	ori	r24, 0x02	; 2
    1104:	8e bd       	out	0x2e, r24	; 46
    1106:	8e b5       	in	r24, 0x2e	; 46
    1108:	8b 7f       	andi	r24, 0xFB	; 251
    110a:	8e bd       	out	0x2e, r24	; 46
    110c:	80 e0       	ldi	r24, 0x00	; 0
    110e:	08 95       	ret
    1110:	8e b5       	in	r24, 0x2e	; 46
    1112:	8e 7f       	andi	r24, 0xFE	; 254
    1114:	8e bd       	out	0x2e, r24	; 46
    1116:	8e b5       	in	r24, 0x2e	; 46
    1118:	8d 7f       	andi	r24, 0xFD	; 253
    111a:	8e bd       	out	0x2e, r24	; 46
    111c:	8e b5       	in	r24, 0x2e	; 46
    111e:	84 60       	ori	r24, 0x04	; 4
    1120:	8e bd       	out	0x2e, r24	; 46
    1122:	80 e0       	ldi	r24, 0x00	; 0
    1124:	08 95       	ret
    1126:	8e b5       	in	r24, 0x2e	; 46
    1128:	81 60       	ori	r24, 0x01	; 1
    112a:	8e bd       	out	0x2e, r24	; 46
    112c:	8e b5       	in	r24, 0x2e	; 46
    112e:	8d 7f       	andi	r24, 0xFD	; 253
    1130:	8e bd       	out	0x2e, r24	; 46
    1132:	8e b5       	in	r24, 0x2e	; 46
    1134:	84 60       	ori	r24, 0x04	; 4
    1136:	8e bd       	out	0x2e, r24	; 46
    1138:	80 e0       	ldi	r24, 0x00	; 0
    113a:	08 95       	ret
    113c:	8e b5       	in	r24, 0x2e	; 46
    113e:	8e 7f       	andi	r24, 0xFE	; 254
    1140:	8e bd       	out	0x2e, r24	; 46
    1142:	8e b5       	in	r24, 0x2e	; 46
    1144:	82 60       	ori	r24, 0x02	; 2
    1146:	8e bd       	out	0x2e, r24	; 46
    1148:	8e b5       	in	r24, 0x2e	; 46
    114a:	84 60       	ori	r24, 0x04	; 4
    114c:	8e bd       	out	0x2e, r24	; 46
    114e:	80 e0       	ldi	r24, 0x00	; 0
    1150:	08 95       	ret
    1152:	8e b5       	in	r24, 0x2e	; 46
    1154:	81 60       	ori	r24, 0x01	; 1
    1156:	8e bd       	out	0x2e, r24	; 46
    1158:	8e b5       	in	r24, 0x2e	; 46
    115a:	82 60       	ori	r24, 0x02	; 2
    115c:	8e bd       	out	0x2e, r24	; 46
    115e:	8e b5       	in	r24, 0x2e	; 46
    1160:	84 60       	ori	r24, 0x04	; 4
    1162:	8e bd       	out	0x2e, r24	; 46
    1164:	80 e0       	ldi	r24, 0x00	; 0
    1166:	08 95       	ret
    1168:	8e 2f       	mov	r24, r30
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	88 30       	cpi	r24, 0x08	; 8
    116e:	91 05       	cpc	r25, r1
    1170:	08 f0       	brcs	.+2      	; 0x1174 <TIMER_start+0x1c2>
    1172:	69 c0       	rjmp	.+210    	; 0x1246 <TIMER_start+0x294>
    1174:	fc 01       	movw	r30, r24
    1176:	e2 5c       	subi	r30, 0xC2	; 194
    1178:	ff 4f       	sbci	r31, 0xFF	; 255
    117a:	0c 94 a3 0b 	jmp	0x1746	; 0x1746 <__tablejump2__>
    117e:	85 b5       	in	r24, 0x25	; 37
    1180:	8b 7f       	andi	r24, 0xFB	; 251
    1182:	85 bd       	out	0x25, r24	; 37
    1184:	85 b5       	in	r24, 0x25	; 37
    1186:	8d 7f       	andi	r24, 0xFD	; 253
    1188:	85 bd       	out	0x25, r24	; 37
    118a:	85 b5       	in	r24, 0x25	; 37
    118c:	8e 7f       	andi	r24, 0xFE	; 254
    118e:	85 bd       	out	0x25, r24	; 37
    1190:	80 e0       	ldi	r24, 0x00	; 0
    1192:	08 95       	ret
    1194:	85 b5       	in	r24, 0x25	; 37
    1196:	84 60       	ori	r24, 0x04	; 4
    1198:	85 bd       	out	0x25, r24	; 37
    119a:	85 b5       	in	r24, 0x25	; 37
    119c:	8d 7f       	andi	r24, 0xFD	; 253
    119e:	85 bd       	out	0x25, r24	; 37
    11a0:	85 b5       	in	r24, 0x25	; 37
    11a2:	8e 7f       	andi	r24, 0xFE	; 254
    11a4:	85 bd       	out	0x25, r24	; 37
    11a6:	80 e0       	ldi	r24, 0x00	; 0
    11a8:	08 95       	ret
    11aa:	85 b5       	in	r24, 0x25	; 37
    11ac:	8b 7f       	andi	r24, 0xFB	; 251
    11ae:	85 bd       	out	0x25, r24	; 37
    11b0:	85 b5       	in	r24, 0x25	; 37
    11b2:	82 60       	ori	r24, 0x02	; 2
    11b4:	85 bd       	out	0x25, r24	; 37
    11b6:	85 b5       	in	r24, 0x25	; 37
    11b8:	8e 7f       	andi	r24, 0xFE	; 254
    11ba:	85 bd       	out	0x25, r24	; 37
    11bc:	80 e0       	ldi	r24, 0x00	; 0
    11be:	08 95       	ret
    11c0:	85 b5       	in	r24, 0x25	; 37
    11c2:	84 60       	ori	r24, 0x04	; 4
    11c4:	85 bd       	out	0x25, r24	; 37
    11c6:	85 b5       	in	r24, 0x25	; 37
    11c8:	82 60       	ori	r24, 0x02	; 2
    11ca:	85 bd       	out	0x25, r24	; 37
    11cc:	85 b5       	in	r24, 0x25	; 37
    11ce:	8e 7f       	andi	r24, 0xFE	; 254
    11d0:	85 bd       	out	0x25, r24	; 37
    11d2:	80 e0       	ldi	r24, 0x00	; 0
    11d4:	08 95       	ret
    11d6:	85 b5       	in	r24, 0x25	; 37
    11d8:	8b 7f       	andi	r24, 0xFB	; 251
    11da:	85 bd       	out	0x25, r24	; 37
    11dc:	85 b5       	in	r24, 0x25	; 37
    11de:	8d 7f       	andi	r24, 0xFD	; 253
    11e0:	85 bd       	out	0x25, r24	; 37
    11e2:	85 b5       	in	r24, 0x25	; 37
    11e4:	81 60       	ori	r24, 0x01	; 1
    11e6:	85 bd       	out	0x25, r24	; 37
    11e8:	80 e0       	ldi	r24, 0x00	; 0
    11ea:	08 95       	ret
    11ec:	85 b5       	in	r24, 0x25	; 37
    11ee:	84 60       	ori	r24, 0x04	; 4
    11f0:	85 bd       	out	0x25, r24	; 37
    11f2:	85 b5       	in	r24, 0x25	; 37
    11f4:	8d 7f       	andi	r24, 0xFD	; 253
    11f6:	85 bd       	out	0x25, r24	; 37
    11f8:	85 b5       	in	r24, 0x25	; 37
    11fa:	81 60       	ori	r24, 0x01	; 1
    11fc:	85 bd       	out	0x25, r24	; 37
    11fe:	80 e0       	ldi	r24, 0x00	; 0
    1200:	08 95       	ret
    1202:	85 b5       	in	r24, 0x25	; 37
    1204:	8b 7f       	andi	r24, 0xFB	; 251
    1206:	85 bd       	out	0x25, r24	; 37
    1208:	85 b5       	in	r24, 0x25	; 37
    120a:	82 60       	ori	r24, 0x02	; 2
    120c:	85 bd       	out	0x25, r24	; 37
    120e:	85 b5       	in	r24, 0x25	; 37
    1210:	81 60       	ori	r24, 0x01	; 1
    1212:	85 bd       	out	0x25, r24	; 37
    1214:	80 e0       	ldi	r24, 0x00	; 0
    1216:	08 95       	ret
    1218:	85 b5       	in	r24, 0x25	; 37
    121a:	84 60       	ori	r24, 0x04	; 4
    121c:	85 bd       	out	0x25, r24	; 37
    121e:	85 b5       	in	r24, 0x25	; 37
    1220:	82 60       	ori	r24, 0x02	; 2
    1222:	85 bd       	out	0x25, r24	; 37
    1224:	85 b5       	in	r24, 0x25	; 37
    1226:	81 60       	ori	r24, 0x01	; 1
    1228:	85 bd       	out	0x25, r24	; 37
    122a:	80 e0       	ldi	r24, 0x00	; 0
    122c:	08 95       	ret
    122e:	83 e0       	ldi	r24, 0x03	; 3
    1230:	08 95       	ret
    1232:	83 e0       	ldi	r24, 0x03	; 3
    1234:	08 95       	ret
    1236:	83 e0       	ldi	r24, 0x03	; 3
    1238:	08 95       	ret
    123a:	83 e0       	ldi	r24, 0x03	; 3
    123c:	08 95       	ret
    123e:	83 e0       	ldi	r24, 0x03	; 3
    1240:	08 95       	ret
    1242:	83 e0       	ldi	r24, 0x03	; 3
    1244:	08 95       	ret
    1246:	83 e0       	ldi	r24, 0x03	; 3
    1248:	08 95       	ret

0000124a <TIMER_stop>:
    124a:	83 30       	cpi	r24, 0x03	; 3
    124c:	38 f5       	brcc	.+78     	; 0x129c <TIMER_stop+0x52>
    124e:	81 30       	cpi	r24, 0x01	; 1
    1250:	79 f0       	breq	.+30     	; 0x1270 <TIMER_stop+0x26>
    1252:	18 f0       	brcs	.+6      	; 0x125a <TIMER_stop+0x10>
    1254:	82 30       	cpi	r24, 0x02	; 2
    1256:	b9 f0       	breq	.+46     	; 0x1286 <TIMER_stop+0x3c>
    1258:	23 c0       	rjmp	.+70     	; 0x12a0 <TIMER_stop+0x56>
    125a:	83 b7       	in	r24, 0x33	; 51
    125c:	8e 7f       	andi	r24, 0xFE	; 254
    125e:	83 bf       	out	0x33, r24	; 51
    1260:	83 b7       	in	r24, 0x33	; 51
    1262:	8d 7f       	andi	r24, 0xFD	; 253
    1264:	83 bf       	out	0x33, r24	; 51
    1266:	83 b7       	in	r24, 0x33	; 51
    1268:	8b 7f       	andi	r24, 0xFB	; 251
    126a:	83 bf       	out	0x33, r24	; 51
    126c:	80 e0       	ldi	r24, 0x00	; 0
    126e:	08 95       	ret
    1270:	8e b5       	in	r24, 0x2e	; 46
    1272:	8e 7f       	andi	r24, 0xFE	; 254
    1274:	8e bd       	out	0x2e, r24	; 46
    1276:	8e b5       	in	r24, 0x2e	; 46
    1278:	8d 7f       	andi	r24, 0xFD	; 253
    127a:	8e bd       	out	0x2e, r24	; 46
    127c:	8e b5       	in	r24, 0x2e	; 46
    127e:	8b 7f       	andi	r24, 0xFB	; 251
    1280:	8e bd       	out	0x2e, r24	; 46
    1282:	80 e0       	ldi	r24, 0x00	; 0
    1284:	08 95       	ret
    1286:	85 b5       	in	r24, 0x25	; 37
    1288:	8b 7f       	andi	r24, 0xFB	; 251
    128a:	85 bd       	out	0x25, r24	; 37
    128c:	85 b5       	in	r24, 0x25	; 37
    128e:	8d 7f       	andi	r24, 0xFD	; 253
    1290:	85 bd       	out	0x25, r24	; 37
    1292:	85 b5       	in	r24, 0x25	; 37
    1294:	8e 7f       	andi	r24, 0xFE	; 254
    1296:	85 bd       	out	0x25, r24	; 37
    1298:	80 e0       	ldi	r24, 0x00	; 0
    129a:	08 95       	ret
    129c:	83 e0       	ldi	r24, 0x03	; 3
    129e:	08 95       	ret
    12a0:	83 e0       	ldi	r24, 0x03	; 3
    12a2:	08 95       	ret

000012a4 <TIMER_reset>:
    12a4:	00 97       	sbiw	r24, 0x00	; 0
    12a6:	f1 f0       	breq	.+60     	; 0x12e4 <TIMER_reset+0x40>
    12a8:	fc 01       	movw	r30, r24
    12aa:	20 81       	ld	r18, Z
    12ac:	23 30       	cpi	r18, 0x03	; 3
    12ae:	e0 f4       	brcc	.+56     	; 0x12e8 <TIMER_reset+0x44>
    12b0:	31 81       	ldd	r19, Z+1	; 0x01
    12b2:	3a 30       	cpi	r19, 0x0A	; 10
    12b4:	d8 f4       	brcc	.+54     	; 0x12ec <TIMER_reset+0x48>
    12b6:	21 30       	cpi	r18, 0x01	; 1
    12b8:	49 f0       	breq	.+18     	; 0x12cc <TIMER_reset+0x28>
    12ba:	18 f0       	brcs	.+6      	; 0x12c2 <TIMER_reset+0x1e>
    12bc:	22 30       	cpi	r18, 0x02	; 2
    12be:	69 f0       	breq	.+26     	; 0x12da <TIMER_reset+0x36>
    12c0:	17 c0       	rjmp	.+46     	; 0x12f0 <TIMER_reset+0x4c>
    12c2:	fc 01       	movw	r30, r24
    12c4:	82 81       	ldd	r24, Z+2	; 0x02
    12c6:	82 bf       	out	0x32, r24	; 50
    12c8:	80 e0       	ldi	r24, 0x00	; 0
    12ca:	08 95       	ret
    12cc:	fc 01       	movw	r30, r24
    12ce:	82 81       	ldd	r24, Z+2	; 0x02
    12d0:	93 81       	ldd	r25, Z+3	; 0x03
    12d2:	9d bd       	out	0x2d, r25	; 45
    12d4:	8c bd       	out	0x2c, r24	; 44
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	08 95       	ret
    12da:	fc 01       	movw	r30, r24
    12dc:	82 81       	ldd	r24, Z+2	; 0x02
    12de:	84 bd       	out	0x24, r24	; 36
    12e0:	80 e0       	ldi	r24, 0x00	; 0
    12e2:	08 95       	ret
    12e4:	83 e0       	ldi	r24, 0x03	; 3
    12e6:	08 95       	ret
    12e8:	83 e0       	ldi	r24, 0x03	; 3
    12ea:	08 95       	ret
    12ec:	83 e0       	ldi	r24, 0x03	; 3
    12ee:	08 95       	ret
    12f0:	83 e0       	ldi	r24, 0x03	; 3
    12f2:	08 95       	ret

000012f4 <TIMER_setCallBack>:
    12f4:	00 97       	sbiw	r24, 0x00	; 0
    12f6:	a9 f0       	breq	.+42     	; 0x1322 <TIMER_setCallBack+0x2e>
    12f8:	63 30       	cpi	r22, 0x03	; 3
    12fa:	a8 f4       	brcc	.+42     	; 0x1326 <TIMER_setCallBack+0x32>
    12fc:	61 30       	cpi	r22, 0x01	; 1
    12fe:	59 f0       	breq	.+22     	; 0x1316 <TIMER_setCallBack+0x22>
    1300:	20 f0       	brcs	.+8      	; 0x130a <TIMER_setCallBack+0x16>
    1302:	62 30       	cpi	r22, 0x02	; 2
    1304:	91 f0       	breq	.+36     	; 0x132a <TIMER_setCallBack+0x36>
    1306:	83 e0       	ldi	r24, 0x03	; 3
    1308:	08 95       	ret
    130a:	90 93 e1 00 	sts	0x00E1, r25	; 0x8000e1 <sg_Timer0_callBackPtr+0x1>
    130e:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <sg_Timer0_callBackPtr>
    1312:	80 e0       	ldi	r24, 0x00	; 0
    1314:	08 95       	ret
    1316:	90 93 df 00 	sts	0x00DF, r25	; 0x8000df <sg_Timer1_callBackPtr+0x1>
    131a:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <sg_Timer1_callBackPtr>
    131e:	80 e0       	ldi	r24, 0x00	; 0
    1320:	08 95       	ret
    1322:	83 e0       	ldi	r24, 0x03	; 3
    1324:	08 95       	ret
    1326:	83 e0       	ldi	r24, 0x03	; 3
    1328:	08 95       	ret
    132a:	80 e0       	ldi	r24, 0x00	; 0
    132c:	08 95       	ret

0000132e <enuTimer2_init>:
    132e:	84 30       	cpi	r24, 0x04	; 4
    1330:	48 f5       	brcc	.+82     	; 0x1384 <enuTimer2_init+0x56>
    1332:	14 bc       	out	0x24, r1	; 36
    1334:	81 30       	cpi	r24, 0x01	; 1
    1336:	71 f0       	breq	.+28     	; 0x1354 <enuTimer2_init+0x26>
    1338:	28 f0       	brcs	.+10     	; 0x1344 <enuTimer2_init+0x16>
    133a:	82 30       	cpi	r24, 0x02	; 2
    133c:	99 f0       	breq	.+38     	; 0x1364 <enuTimer2_init+0x36>
    133e:	83 30       	cpi	r24, 0x03	; 3
    1340:	c9 f0       	breq	.+50     	; 0x1374 <enuTimer2_init+0x46>
    1342:	22 c0       	rjmp	.+68     	; 0x1388 <enuTimer2_init+0x5a>
    1344:	85 b5       	in	r24, 0x25	; 37
    1346:	87 7f       	andi	r24, 0xF7	; 247
    1348:	85 bd       	out	0x25, r24	; 37
    134a:	85 b5       	in	r24, 0x25	; 37
    134c:	8f 7b       	andi	r24, 0xBF	; 191
    134e:	85 bd       	out	0x25, r24	; 37
    1350:	80 e0       	ldi	r24, 0x00	; 0
    1352:	08 95       	ret
    1354:	85 b5       	in	r24, 0x25	; 37
    1356:	87 7f       	andi	r24, 0xF7	; 247
    1358:	85 bd       	out	0x25, r24	; 37
    135a:	85 b5       	in	r24, 0x25	; 37
    135c:	80 64       	ori	r24, 0x40	; 64
    135e:	85 bd       	out	0x25, r24	; 37
    1360:	80 e0       	ldi	r24, 0x00	; 0
    1362:	08 95       	ret
    1364:	85 b5       	in	r24, 0x25	; 37
    1366:	88 60       	ori	r24, 0x08	; 8
    1368:	85 bd       	out	0x25, r24	; 37
    136a:	85 b5       	in	r24, 0x25	; 37
    136c:	8f 7b       	andi	r24, 0xBF	; 191
    136e:	85 bd       	out	0x25, r24	; 37
    1370:	80 e0       	ldi	r24, 0x00	; 0
    1372:	08 95       	ret
    1374:	85 b5       	in	r24, 0x25	; 37
    1376:	88 60       	ori	r24, 0x08	; 8
    1378:	85 bd       	out	0x25, r24	; 37
    137a:	85 b5       	in	r24, 0x25	; 37
    137c:	80 64       	ori	r24, 0x40	; 64
    137e:	85 bd       	out	0x25, r24	; 37
    1380:	80 e0       	ldi	r24, 0x00	; 0
    1382:	08 95       	ret
    1384:	81 e0       	ldi	r24, 0x01	; 1
    1386:	08 95       	ret
    1388:	81 e0       	ldi	r24, 0x01	; 1
    138a:	08 95       	ret

0000138c <u8Timer2_setPrescallar>:
    138c:	88 30       	cpi	r24, 0x08	; 8
    138e:	70 f4       	brcc	.+28     	; 0x13ac <u8Timer2_setPrescallar+0x20>
    1390:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <global_prescaller>
    1394:	90 91 dc 00 	lds	r25, 0x00DC	; 0x8000dc <global_timerStatus>
    1398:	91 30       	cpi	r25, 0x01	; 1
    139a:	51 f4       	brne	.+20     	; 0x13b0 <u8Timer2_setPrescallar+0x24>
    139c:	95 b5       	in	r25, 0x25	; 37
    139e:	98 7f       	andi	r25, 0xF8	; 248
    13a0:	89 2b       	or	r24, r25
    13a2:	95 b5       	in	r25, 0x25	; 37
    13a4:	89 2b       	or	r24, r25
    13a6:	85 bd       	out	0x25, r24	; 37
    13a8:	80 e0       	ldi	r24, 0x00	; 0
    13aa:	08 95       	ret
    13ac:	81 e0       	ldi	r24, 0x01	; 1
    13ae:	08 95       	ret
    13b0:	80 e0       	ldi	r24, 0x00	; 0
    13b2:	08 95       	ret

000013b4 <vidTimer2_OvfIrqEnable>:
    13b4:	88 b7       	in	r24, 0x38	; 56
    13b6:	80 64       	ori	r24, 0x40	; 64
    13b8:	88 bf       	out	0x38, r24	; 56
    13ba:	89 b7       	in	r24, 0x39	; 57
    13bc:	80 64       	ori	r24, 0x40	; 64
    13be:	89 bf       	out	0x39, r24	; 57
    13c0:	80 e0       	ldi	r24, 0x00	; 0
    13c2:	08 95       	ret

000013c4 <vidTimer2_start>:
    13c4:	95 b5       	in	r25, 0x25	; 37
    13c6:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <global_prescaller>
    13ca:	89 2b       	or	r24, r25
    13cc:	85 bd       	out	0x25, r24	; 37
    13ce:	81 e0       	ldi	r24, 0x01	; 1
    13d0:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <global_timerStatus>
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	08 95       	ret

000013d8 <vidTimer2_stop>:
    13d8:	85 b5       	in	r24, 0x25	; 37
    13da:	88 7f       	andi	r24, 0xF8	; 248
    13dc:	85 bd       	out	0x25, r24	; 37
    13de:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <global_timerStatus>
    13e2:	80 e0       	ldi	r24, 0x00	; 0
    13e4:	08 95       	ret

000013e6 <vidTimer2_setcbf_OVF>:
    13e6:	00 97       	sbiw	r24, 0x00	; 0
    13e8:	21 f0       	breq	.+8      	; 0x13f2 <vidTimer2_setcbf_OVF+0xc>
    13ea:	90 93 db 00 	sts	0x00DB, r25	; 0x8000db <globalCallFunc+0x1>
    13ee:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <globalCallFunc>
    13f2:	08 95       	ret

000013f4 <MTIMER_vidResetTCNT>:
    13f4:	14 bc       	out	0x24, r1	; 36
    13f6:	08 95       	ret

000013f8 <MTIMER_u8GetTCNT>:
    13f8:	84 b5       	in	r24, 0x24	; 36
    13fa:	08 95       	ret

000013fc <MTIMER_vidEnableGlobalInterrupt>:
    13fc:	8f b7       	in	r24, 0x3f	; 63
    13fe:	80 68       	ori	r24, 0x80	; 128
    1400:	8f bf       	out	0x3f, r24	; 63
    1402:	08 95       	ret

00001404 <__vector_5>:
    1404:	1f 92       	push	r1
    1406:	0f 92       	push	r0
    1408:	0f b6       	in	r0, 0x3f	; 63
    140a:	0f 92       	push	r0
    140c:	11 24       	eor	r1, r1
    140e:	2f 93       	push	r18
    1410:	3f 93       	push	r19
    1412:	4f 93       	push	r20
    1414:	5f 93       	push	r21
    1416:	6f 93       	push	r22
    1418:	7f 93       	push	r23
    141a:	8f 93       	push	r24
    141c:	9f 93       	push	r25
    141e:	af 93       	push	r26
    1420:	bf 93       	push	r27
    1422:	ef 93       	push	r30
    1424:	ff 93       	push	r31
    1426:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <counter.1821>
    142a:	8f 5f       	subi	r24, 0xFF	; 255
    142c:	80 93 d9 00 	sts	0x00D9, r24	; 0x8000d9 <counter.1821>
    1430:	90 91 80 00 	lds	r25, 0x0080	; 0x800080 <global_ovf>
    1434:	89 13       	cpse	r24, r25
    1436:	09 c0       	rjmp	.+18     	; 0x144a <__vector_5+0x46>
    1438:	e0 91 da 00 	lds	r30, 0x00DA	; 0x8000da <globalCallFunc>
    143c:	f0 91 db 00 	lds	r31, 0x00DB	; 0x8000db <globalCallFunc+0x1>
    1440:	30 97       	sbiw	r30, 0x00	; 0
    1442:	19 f0       	breq	.+6      	; 0x144a <__vector_5+0x46>
    1444:	10 92 d9 00 	sts	0x00D9, r1	; 0x8000d9 <counter.1821>
    1448:	09 95       	icall
    144a:	ff 91       	pop	r31
    144c:	ef 91       	pop	r30
    144e:	bf 91       	pop	r27
    1450:	af 91       	pop	r26
    1452:	9f 91       	pop	r25
    1454:	8f 91       	pop	r24
    1456:	7f 91       	pop	r23
    1458:	6f 91       	pop	r22
    145a:	5f 91       	pop	r21
    145c:	4f 91       	pop	r20
    145e:	3f 91       	pop	r19
    1460:	2f 91       	pop	r18
    1462:	0f 90       	pop	r0
    1464:	0f be       	out	0x3f, r0	; 63
    1466:	0f 90       	pop	r0
    1468:	1f 90       	pop	r1
    146a:	18 95       	reti

0000146c <__subsf3>:
    146c:	50 58       	subi	r21, 0x80	; 128

0000146e <__addsf3>:
    146e:	bb 27       	eor	r27, r27
    1470:	aa 27       	eor	r26, r26
    1472:	0e 94 4e 0a 	call	0x149c	; 0x149c <__addsf3x>
    1476:	0c 94 69 0b 	jmp	0x16d2	; 0x16d2 <__fp_round>
    147a:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__fp_pscA>
    147e:	38 f0       	brcs	.+14     	; 0x148e <__addsf3+0x20>
    1480:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__fp_pscB>
    1484:	20 f0       	brcs	.+8      	; 0x148e <__addsf3+0x20>
    1486:	39 f4       	brne	.+14     	; 0x1496 <__addsf3+0x28>
    1488:	9f 3f       	cpi	r25, 0xFF	; 255
    148a:	19 f4       	brne	.+6      	; 0x1492 <__addsf3+0x24>
    148c:	26 f4       	brtc	.+8      	; 0x1496 <__addsf3+0x28>
    148e:	0c 94 58 0b 	jmp	0x16b0	; 0x16b0 <__fp_nan>
    1492:	0e f4       	brtc	.+2      	; 0x1496 <__addsf3+0x28>
    1494:	e0 95       	com	r30
    1496:	e7 fb       	bst	r30, 7
    1498:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__fp_inf>

0000149c <__addsf3x>:
    149c:	e9 2f       	mov	r30, r25
    149e:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__fp_split3>
    14a2:	58 f3       	brcs	.-42     	; 0x147a <__addsf3+0xc>
    14a4:	ba 17       	cp	r27, r26
    14a6:	62 07       	cpc	r22, r18
    14a8:	73 07       	cpc	r23, r19
    14aa:	84 07       	cpc	r24, r20
    14ac:	95 07       	cpc	r25, r21
    14ae:	20 f0       	brcs	.+8      	; 0x14b8 <__addsf3x+0x1c>
    14b0:	79 f4       	brne	.+30     	; 0x14d0 <__addsf3x+0x34>
    14b2:	a6 f5       	brtc	.+104    	; 0x151c <__addsf3x+0x80>
    14b4:	0c 94 9c 0b 	jmp	0x1738	; 0x1738 <__fp_zero>
    14b8:	0e f4       	brtc	.+2      	; 0x14bc <__addsf3x+0x20>
    14ba:	e0 95       	com	r30
    14bc:	0b 2e       	mov	r0, r27
    14be:	ba 2f       	mov	r27, r26
    14c0:	a0 2d       	mov	r26, r0
    14c2:	0b 01       	movw	r0, r22
    14c4:	b9 01       	movw	r22, r18
    14c6:	90 01       	movw	r18, r0
    14c8:	0c 01       	movw	r0, r24
    14ca:	ca 01       	movw	r24, r20
    14cc:	a0 01       	movw	r20, r0
    14ce:	11 24       	eor	r1, r1
    14d0:	ff 27       	eor	r31, r31
    14d2:	59 1b       	sub	r21, r25
    14d4:	99 f0       	breq	.+38     	; 0x14fc <__addsf3x+0x60>
    14d6:	59 3f       	cpi	r21, 0xF9	; 249
    14d8:	50 f4       	brcc	.+20     	; 0x14ee <__addsf3x+0x52>
    14da:	50 3e       	cpi	r21, 0xE0	; 224
    14dc:	68 f1       	brcs	.+90     	; 0x1538 <__addsf3x+0x9c>
    14de:	1a 16       	cp	r1, r26
    14e0:	f0 40       	sbci	r31, 0x00	; 0
    14e2:	a2 2f       	mov	r26, r18
    14e4:	23 2f       	mov	r18, r19
    14e6:	34 2f       	mov	r19, r20
    14e8:	44 27       	eor	r20, r20
    14ea:	58 5f       	subi	r21, 0xF8	; 248
    14ec:	f3 cf       	rjmp	.-26     	; 0x14d4 <__addsf3x+0x38>
    14ee:	46 95       	lsr	r20
    14f0:	37 95       	ror	r19
    14f2:	27 95       	ror	r18
    14f4:	a7 95       	ror	r26
    14f6:	f0 40       	sbci	r31, 0x00	; 0
    14f8:	53 95       	inc	r21
    14fa:	c9 f7       	brne	.-14     	; 0x14ee <__addsf3x+0x52>
    14fc:	7e f4       	brtc	.+30     	; 0x151c <__addsf3x+0x80>
    14fe:	1f 16       	cp	r1, r31
    1500:	ba 0b       	sbc	r27, r26
    1502:	62 0b       	sbc	r22, r18
    1504:	73 0b       	sbc	r23, r19
    1506:	84 0b       	sbc	r24, r20
    1508:	ba f0       	brmi	.+46     	; 0x1538 <__addsf3x+0x9c>
    150a:	91 50       	subi	r25, 0x01	; 1
    150c:	a1 f0       	breq	.+40     	; 0x1536 <__addsf3x+0x9a>
    150e:	ff 0f       	add	r31, r31
    1510:	bb 1f       	adc	r27, r27
    1512:	66 1f       	adc	r22, r22
    1514:	77 1f       	adc	r23, r23
    1516:	88 1f       	adc	r24, r24
    1518:	c2 f7       	brpl	.-16     	; 0x150a <__addsf3x+0x6e>
    151a:	0e c0       	rjmp	.+28     	; 0x1538 <__addsf3x+0x9c>
    151c:	ba 0f       	add	r27, r26
    151e:	62 1f       	adc	r22, r18
    1520:	73 1f       	adc	r23, r19
    1522:	84 1f       	adc	r24, r20
    1524:	48 f4       	brcc	.+18     	; 0x1538 <__addsf3x+0x9c>
    1526:	87 95       	ror	r24
    1528:	77 95       	ror	r23
    152a:	67 95       	ror	r22
    152c:	b7 95       	ror	r27
    152e:	f7 95       	ror	r31
    1530:	9e 3f       	cpi	r25, 0xFE	; 254
    1532:	08 f0       	brcs	.+2      	; 0x1536 <__addsf3x+0x9a>
    1534:	b0 cf       	rjmp	.-160    	; 0x1496 <__addsf3+0x28>
    1536:	93 95       	inc	r25
    1538:	88 0f       	add	r24, r24
    153a:	08 f0       	brcs	.+2      	; 0x153e <__addsf3x+0xa2>
    153c:	99 27       	eor	r25, r25
    153e:	ee 0f       	add	r30, r30
    1540:	97 95       	ror	r25
    1542:	87 95       	ror	r24
    1544:	08 95       	ret

00001546 <__divsf3>:
    1546:	0e 94 b7 0a 	call	0x156e	; 0x156e <__divsf3x>
    154a:	0c 94 69 0b 	jmp	0x16d2	; 0x16d2 <__fp_round>
    154e:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__fp_pscB>
    1552:	58 f0       	brcs	.+22     	; 0x156a <__divsf3+0x24>
    1554:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__fp_pscA>
    1558:	40 f0       	brcs	.+16     	; 0x156a <__divsf3+0x24>
    155a:	29 f4       	brne	.+10     	; 0x1566 <__divsf3+0x20>
    155c:	5f 3f       	cpi	r21, 0xFF	; 255
    155e:	29 f0       	breq	.+10     	; 0x156a <__divsf3+0x24>
    1560:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__fp_inf>
    1564:	51 11       	cpse	r21, r1
    1566:	0c 94 9d 0b 	jmp	0x173a	; 0x173a <__fp_szero>
    156a:	0c 94 58 0b 	jmp	0x16b0	; 0x16b0 <__fp_nan>

0000156e <__divsf3x>:
    156e:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <__fp_split3>
    1572:	68 f3       	brcs	.-38     	; 0x154e <__divsf3+0x8>

00001574 <__divsf3_pse>:
    1574:	99 23       	and	r25, r25
    1576:	b1 f3       	breq	.-20     	; 0x1564 <__divsf3+0x1e>
    1578:	55 23       	and	r21, r21
    157a:	91 f3       	breq	.-28     	; 0x1560 <__divsf3+0x1a>
    157c:	95 1b       	sub	r25, r21
    157e:	55 0b       	sbc	r21, r21
    1580:	bb 27       	eor	r27, r27
    1582:	aa 27       	eor	r26, r26
    1584:	62 17       	cp	r22, r18
    1586:	73 07       	cpc	r23, r19
    1588:	84 07       	cpc	r24, r20
    158a:	38 f0       	brcs	.+14     	; 0x159a <__divsf3_pse+0x26>
    158c:	9f 5f       	subi	r25, 0xFF	; 255
    158e:	5f 4f       	sbci	r21, 0xFF	; 255
    1590:	22 0f       	add	r18, r18
    1592:	33 1f       	adc	r19, r19
    1594:	44 1f       	adc	r20, r20
    1596:	aa 1f       	adc	r26, r26
    1598:	a9 f3       	breq	.-22     	; 0x1584 <__divsf3_pse+0x10>
    159a:	35 d0       	rcall	.+106    	; 0x1606 <__divsf3_pse+0x92>
    159c:	0e 2e       	mov	r0, r30
    159e:	3a f0       	brmi	.+14     	; 0x15ae <__divsf3_pse+0x3a>
    15a0:	e0 e8       	ldi	r30, 0x80	; 128
    15a2:	32 d0       	rcall	.+100    	; 0x1608 <__divsf3_pse+0x94>
    15a4:	91 50       	subi	r25, 0x01	; 1
    15a6:	50 40       	sbci	r21, 0x00	; 0
    15a8:	e6 95       	lsr	r30
    15aa:	00 1c       	adc	r0, r0
    15ac:	ca f7       	brpl	.-14     	; 0x15a0 <__divsf3_pse+0x2c>
    15ae:	2b d0       	rcall	.+86     	; 0x1606 <__divsf3_pse+0x92>
    15b0:	fe 2f       	mov	r31, r30
    15b2:	29 d0       	rcall	.+82     	; 0x1606 <__divsf3_pse+0x92>
    15b4:	66 0f       	add	r22, r22
    15b6:	77 1f       	adc	r23, r23
    15b8:	88 1f       	adc	r24, r24
    15ba:	bb 1f       	adc	r27, r27
    15bc:	26 17       	cp	r18, r22
    15be:	37 07       	cpc	r19, r23
    15c0:	48 07       	cpc	r20, r24
    15c2:	ab 07       	cpc	r26, r27
    15c4:	b0 e8       	ldi	r27, 0x80	; 128
    15c6:	09 f0       	breq	.+2      	; 0x15ca <__divsf3_pse+0x56>
    15c8:	bb 0b       	sbc	r27, r27
    15ca:	80 2d       	mov	r24, r0
    15cc:	bf 01       	movw	r22, r30
    15ce:	ff 27       	eor	r31, r31
    15d0:	93 58       	subi	r25, 0x83	; 131
    15d2:	5f 4f       	sbci	r21, 0xFF	; 255
    15d4:	3a f0       	brmi	.+14     	; 0x15e4 <__divsf3_pse+0x70>
    15d6:	9e 3f       	cpi	r25, 0xFE	; 254
    15d8:	51 05       	cpc	r21, r1
    15da:	78 f0       	brcs	.+30     	; 0x15fa <__divsf3_pse+0x86>
    15dc:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__fp_inf>
    15e0:	0c 94 9d 0b 	jmp	0x173a	; 0x173a <__fp_szero>
    15e4:	5f 3f       	cpi	r21, 0xFF	; 255
    15e6:	e4 f3       	brlt	.-8      	; 0x15e0 <__divsf3_pse+0x6c>
    15e8:	98 3e       	cpi	r25, 0xE8	; 232
    15ea:	d4 f3       	brlt	.-12     	; 0x15e0 <__divsf3_pse+0x6c>
    15ec:	86 95       	lsr	r24
    15ee:	77 95       	ror	r23
    15f0:	67 95       	ror	r22
    15f2:	b7 95       	ror	r27
    15f4:	f7 95       	ror	r31
    15f6:	9f 5f       	subi	r25, 0xFF	; 255
    15f8:	c9 f7       	brne	.-14     	; 0x15ec <__divsf3_pse+0x78>
    15fa:	88 0f       	add	r24, r24
    15fc:	91 1d       	adc	r25, r1
    15fe:	96 95       	lsr	r25
    1600:	87 95       	ror	r24
    1602:	97 f9       	bld	r25, 7
    1604:	08 95       	ret
    1606:	e1 e0       	ldi	r30, 0x01	; 1
    1608:	66 0f       	add	r22, r22
    160a:	77 1f       	adc	r23, r23
    160c:	88 1f       	adc	r24, r24
    160e:	bb 1f       	adc	r27, r27
    1610:	62 17       	cp	r22, r18
    1612:	73 07       	cpc	r23, r19
    1614:	84 07       	cpc	r24, r20
    1616:	ba 07       	cpc	r27, r26
    1618:	20 f0       	brcs	.+8      	; 0x1622 <__divsf3_pse+0xae>
    161a:	62 1b       	sub	r22, r18
    161c:	73 0b       	sbc	r23, r19
    161e:	84 0b       	sbc	r24, r20
    1620:	ba 0b       	sbc	r27, r26
    1622:	ee 1f       	adc	r30, r30
    1624:	88 f7       	brcc	.-30     	; 0x1608 <__divsf3_pse+0x94>
    1626:	e0 95       	com	r30
    1628:	08 95       	ret

0000162a <__floatunsisf>:
    162a:	e8 94       	clt
    162c:	09 c0       	rjmp	.+18     	; 0x1640 <__floatsisf+0x12>

0000162e <__floatsisf>:
    162e:	97 fb       	bst	r25, 7
    1630:	3e f4       	brtc	.+14     	; 0x1640 <__floatsisf+0x12>
    1632:	90 95       	com	r25
    1634:	80 95       	com	r24
    1636:	70 95       	com	r23
    1638:	61 95       	neg	r22
    163a:	7f 4f       	sbci	r23, 0xFF	; 255
    163c:	8f 4f       	sbci	r24, 0xFF	; 255
    163e:	9f 4f       	sbci	r25, 0xFF	; 255
    1640:	99 23       	and	r25, r25
    1642:	a9 f0       	breq	.+42     	; 0x166e <__floatsisf+0x40>
    1644:	f9 2f       	mov	r31, r25
    1646:	96 e9       	ldi	r25, 0x96	; 150
    1648:	bb 27       	eor	r27, r27
    164a:	93 95       	inc	r25
    164c:	f6 95       	lsr	r31
    164e:	87 95       	ror	r24
    1650:	77 95       	ror	r23
    1652:	67 95       	ror	r22
    1654:	b7 95       	ror	r27
    1656:	f1 11       	cpse	r31, r1
    1658:	f8 cf       	rjmp	.-16     	; 0x164a <__floatsisf+0x1c>
    165a:	fa f4       	brpl	.+62     	; 0x169a <__floatsisf+0x6c>
    165c:	bb 0f       	add	r27, r27
    165e:	11 f4       	brne	.+4      	; 0x1664 <__floatsisf+0x36>
    1660:	60 ff       	sbrs	r22, 0
    1662:	1b c0       	rjmp	.+54     	; 0x169a <__floatsisf+0x6c>
    1664:	6f 5f       	subi	r22, 0xFF	; 255
    1666:	7f 4f       	sbci	r23, 0xFF	; 255
    1668:	8f 4f       	sbci	r24, 0xFF	; 255
    166a:	9f 4f       	sbci	r25, 0xFF	; 255
    166c:	16 c0       	rjmp	.+44     	; 0x169a <__floatsisf+0x6c>
    166e:	88 23       	and	r24, r24
    1670:	11 f0       	breq	.+4      	; 0x1676 <__floatsisf+0x48>
    1672:	96 e9       	ldi	r25, 0x96	; 150
    1674:	11 c0       	rjmp	.+34     	; 0x1698 <__floatsisf+0x6a>
    1676:	77 23       	and	r23, r23
    1678:	21 f0       	breq	.+8      	; 0x1682 <__floatsisf+0x54>
    167a:	9e e8       	ldi	r25, 0x8E	; 142
    167c:	87 2f       	mov	r24, r23
    167e:	76 2f       	mov	r23, r22
    1680:	05 c0       	rjmp	.+10     	; 0x168c <__floatsisf+0x5e>
    1682:	66 23       	and	r22, r22
    1684:	71 f0       	breq	.+28     	; 0x16a2 <__floatsisf+0x74>
    1686:	96 e8       	ldi	r25, 0x86	; 134
    1688:	86 2f       	mov	r24, r22
    168a:	70 e0       	ldi	r23, 0x00	; 0
    168c:	60 e0       	ldi	r22, 0x00	; 0
    168e:	2a f0       	brmi	.+10     	; 0x169a <__floatsisf+0x6c>
    1690:	9a 95       	dec	r25
    1692:	66 0f       	add	r22, r22
    1694:	77 1f       	adc	r23, r23
    1696:	88 1f       	adc	r24, r24
    1698:	da f7       	brpl	.-10     	; 0x1690 <__floatsisf+0x62>
    169a:	88 0f       	add	r24, r24
    169c:	96 95       	lsr	r25
    169e:	87 95       	ror	r24
    16a0:	97 f9       	bld	r25, 7
    16a2:	08 95       	ret

000016a4 <__fp_inf>:
    16a4:	97 f9       	bld	r25, 7
    16a6:	9f 67       	ori	r25, 0x7F	; 127
    16a8:	80 e8       	ldi	r24, 0x80	; 128
    16aa:	70 e0       	ldi	r23, 0x00	; 0
    16ac:	60 e0       	ldi	r22, 0x00	; 0
    16ae:	08 95       	ret

000016b0 <__fp_nan>:
    16b0:	9f ef       	ldi	r25, 0xFF	; 255
    16b2:	80 ec       	ldi	r24, 0xC0	; 192
    16b4:	08 95       	ret

000016b6 <__fp_pscA>:
    16b6:	00 24       	eor	r0, r0
    16b8:	0a 94       	dec	r0
    16ba:	16 16       	cp	r1, r22
    16bc:	17 06       	cpc	r1, r23
    16be:	18 06       	cpc	r1, r24
    16c0:	09 06       	cpc	r0, r25
    16c2:	08 95       	ret

000016c4 <__fp_pscB>:
    16c4:	00 24       	eor	r0, r0
    16c6:	0a 94       	dec	r0
    16c8:	12 16       	cp	r1, r18
    16ca:	13 06       	cpc	r1, r19
    16cc:	14 06       	cpc	r1, r20
    16ce:	05 06       	cpc	r0, r21
    16d0:	08 95       	ret

000016d2 <__fp_round>:
    16d2:	09 2e       	mov	r0, r25
    16d4:	03 94       	inc	r0
    16d6:	00 0c       	add	r0, r0
    16d8:	11 f4       	brne	.+4      	; 0x16de <__fp_round+0xc>
    16da:	88 23       	and	r24, r24
    16dc:	52 f0       	brmi	.+20     	; 0x16f2 <__fp_round+0x20>
    16de:	bb 0f       	add	r27, r27
    16e0:	40 f4       	brcc	.+16     	; 0x16f2 <__fp_round+0x20>
    16e2:	bf 2b       	or	r27, r31
    16e4:	11 f4       	brne	.+4      	; 0x16ea <__fp_round+0x18>
    16e6:	60 ff       	sbrs	r22, 0
    16e8:	04 c0       	rjmp	.+8      	; 0x16f2 <__fp_round+0x20>
    16ea:	6f 5f       	subi	r22, 0xFF	; 255
    16ec:	7f 4f       	sbci	r23, 0xFF	; 255
    16ee:	8f 4f       	sbci	r24, 0xFF	; 255
    16f0:	9f 4f       	sbci	r25, 0xFF	; 255
    16f2:	08 95       	ret

000016f4 <__fp_split3>:
    16f4:	57 fd       	sbrc	r21, 7
    16f6:	90 58       	subi	r25, 0x80	; 128
    16f8:	44 0f       	add	r20, r20
    16fa:	55 1f       	adc	r21, r21
    16fc:	59 f0       	breq	.+22     	; 0x1714 <__fp_splitA+0x10>
    16fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1700:	71 f0       	breq	.+28     	; 0x171e <__fp_splitA+0x1a>
    1702:	47 95       	ror	r20

00001704 <__fp_splitA>:
    1704:	88 0f       	add	r24, r24
    1706:	97 fb       	bst	r25, 7
    1708:	99 1f       	adc	r25, r25
    170a:	61 f0       	breq	.+24     	; 0x1724 <__fp_splitA+0x20>
    170c:	9f 3f       	cpi	r25, 0xFF	; 255
    170e:	79 f0       	breq	.+30     	; 0x172e <__fp_splitA+0x2a>
    1710:	87 95       	ror	r24
    1712:	08 95       	ret
    1714:	12 16       	cp	r1, r18
    1716:	13 06       	cpc	r1, r19
    1718:	14 06       	cpc	r1, r20
    171a:	55 1f       	adc	r21, r21
    171c:	f2 cf       	rjmp	.-28     	; 0x1702 <__fp_split3+0xe>
    171e:	46 95       	lsr	r20
    1720:	f1 df       	rcall	.-30     	; 0x1704 <__fp_splitA>
    1722:	08 c0       	rjmp	.+16     	; 0x1734 <__fp_splitA+0x30>
    1724:	16 16       	cp	r1, r22
    1726:	17 06       	cpc	r1, r23
    1728:	18 06       	cpc	r1, r24
    172a:	99 1f       	adc	r25, r25
    172c:	f1 cf       	rjmp	.-30     	; 0x1710 <__fp_splitA+0xc>
    172e:	86 95       	lsr	r24
    1730:	71 05       	cpc	r23, r1
    1732:	61 05       	cpc	r22, r1
    1734:	08 94       	sec
    1736:	08 95       	ret

00001738 <__fp_zero>:
    1738:	e8 94       	clt

0000173a <__fp_szero>:
    173a:	bb 27       	eor	r27, r27
    173c:	66 27       	eor	r22, r22
    173e:	77 27       	eor	r23, r23
    1740:	cb 01       	movw	r24, r22
    1742:	97 f9       	bld	r25, 7
    1744:	08 95       	ret

00001746 <__tablejump2__>:
    1746:	ee 0f       	add	r30, r30
    1748:	ff 1f       	adc	r31, r31
    174a:	05 90       	lpm	r0, Z+
    174c:	f4 91       	lpm	r31, Z
    174e:	e0 2d       	mov	r30, r0
    1750:	09 94       	ijmp

00001752 <_exit>:
    1752:	f8 94       	cli

00001754 <__stop_program>:
    1754:	ff cf       	rjmp	.-2      	; 0x1754 <__stop_program>
>>>>>>> main
